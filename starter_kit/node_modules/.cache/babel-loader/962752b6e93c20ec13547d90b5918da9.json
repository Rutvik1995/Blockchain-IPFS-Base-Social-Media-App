{"ast":null,"code":"import _regeneratorRuntime from \"/Users/rutvikpatel/Desktop/Project/Github6/starter_kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/rutvikpatel/Desktop/Project/Github6/starter_kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/rutvikpatel/Desktop/Project/Github6/starter_kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rutvikpatel/Desktop/Project/Github6/starter_kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/rutvikpatel/Desktop/Project/Github6/starter_kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rutvikpatel/Desktop/Project/Github6/starter_kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/rutvikpatel/Desktop/Project/Github6/starter_kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/rutvikpatel/Desktop/Project/Github6/starter_kit/src/components/searchFriends.js\";\nimport React, { Component, useState } from 'react';\nimport Web3 from 'web3';\nimport Meme from '../abis/Meme.json';\nimport { Form, InputGroup, Button, Nav, Navbar, Card } from \"react-bootstrap\";\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport ReactSearchBox from 'react-search-box';\n\nvar ipfsClient = require('ipfs-http-client');\n\nvar ipfs = ipfsClient({\n  host: 'ipfs.infura.io',\n  port: '5001',\n  protocol: 'https'\n});\n\nvar searchFriends =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(searchFriends, _Component);\n\n  function searchFriends(props) {\n    var _this;\n\n    _classCallCheck(this, searchFriends);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(searchFriends).call(this, props));\n\n    _this.check = function () {\n      console.log(_this.state.fullName);\n      console.log(_this.state.userEmailId);\n      console.log(_this.state.userJsonResultOfParticularUserFromIPFS);\n      console.log(_this.state.totalUser);\n      console.log(_this.state.userBlockchainResultOfParticularUser);\n      console.log(_this.state.totalUserName);\n      console.log(_this.state.hasError); //console.log(this.state.)\n    };\n\n    _this.mainPage = function () {\n      _this.props.history.push({\n        pathname: '/MainPage',\n        userEmailId: _this.state.userEmailId,\n        fullName: _this.state.fullName,\n        userJsonResultOfParticularUserFromIPFS: _this.state.userJsonResultOfParticularUserFromIPFS,\n        totalUser: _this.state.totalUser,\n        userBlockchainResultOfParticularUser: _this.state.userBlockchainResultOfParticularUser\n      });\n\n      console.log(_this.state.userJsonResultOfParticularUserFromIPFS);\n    };\n\n    _this.updateSearch = function (event) {\n      //  console.log(event.target.value);\n      _this.setState({\n        search: event.target.value.substr(0, 20)\n      });\n    };\n\n    _this.addFriend = function (dataParse) {\n      //console.log(this.state.userHash);\n      var userHash;\n      var userId;\n\n      for (var i = 0; i < _this.state.totalUser.length; i++) {\n        if (_this.state.totalUser[i].userEmailId == dataParse.emailId) {\n          console.log(\"Same\");\n          console.log(_this.state.totalUser[i].userHash);\n          userHash = _this.state.totalUser[i].userHash;\n          userId = _this.state.totalUser[i].userId.toString();\n          break;\n        }\n      }\n\n      ipfs.get(\"/ipfs/\" + userHash, function (error, result) {\n        console.log(\"Information of friend to add\");\n        console.log(dataParse);\n        console.log(dataParse.emailId);\n        var uint8array = new TextEncoder(\"utf-8\").encode(\"¢\");\n        var UserStringResult = new TextDecoder(\"utf-8\").decode(result[0].content);\n        var userJsonResult = JSON.parse(UserStringResult);\n        console.log(\"Friend to be add information\");\n        console.log(userJsonResult);\n        var obj = {\n          userId: _this.state.userBlockchainResultOfParticularUser.userId,\n          name: _this.state.fullName,\n          emailId: _this.state.userEmailId\n        };\n        userJsonResult.requestNotAccepted.push(obj);\n        console.log(userJsonResult);\n        var originalContentString = Buffer.from(JSON.stringify(userJsonResult)); // The json is change to string format \n\n        var userContent = {\n          content: originalContentString\n        };\n        ipfs.add(userContent, function (error, results) {\n          console.log(results);\n          var userInformationHash = results[0].hash;\n          console.log(results[0].hash);\n          console.log(userId);\n\n          _this.state.contract.methods.changeUserInformation(userId, userInformationHash).send({\n            from: _this.state.account\n          }).then(function (r) {\n            console.log(r);\n          });\n        }); // userJsonResult.requestNotAccepted=obj\n      });\n      ipfs.get(\"/ipfs/\" + _this.state.userBlockchainResultOfParticularUser.userHash, function (error, result) {\n        console.log(\"Current User Information\");\n        console.log(_this.state.userEmailId);\n        console.log(_this.state.userBlockchainResultOfParticularUser.userHash);\n        var uint8array = new TextEncoder(\"utf-8\").encode(\"¢\");\n        var UserStringResult = new TextDecoder(\"utf-8\").decode(result[0].content);\n        var userJsonResult = JSON.parse(UserStringResult);\n        console.log(\"current fiend information\");\n        console.log(userJsonResult);\n        var obj = {\n          userId: userId,\n          name: dataParse.name,\n          emailId: dataParse.emailId\n        };\n        userJsonResult.request.push(obj);\n        console.log(userJsonResult);\n\n        _this.setState({\n          userJsonResultOfParticularUserFromIPFS: userJsonResult\n        });\n\n        console.log(_this.state.userJsonResultOfParticularUserFromIPFS);\n        var originalContentString = Buffer.from(JSON.stringify(userJsonResult)); // The json is change to string format \n\n        var userContent = {\n          content: originalContentString\n        };\n        ipfs.add(userContent, function (error, results) {\n          console.log(results);\n          var userInformationHash = results[0].hash;\n          console.log(results[0].hash);\n          console.log(_this.state.userBlockchainResultOfParticularUser.userId);\n          var id = _this.state.userBlockchainResultOfParticularUser.userId;\n\n          _this.state.contract.methods.changeUserInformation(id, userInformationHash).send({\n            from: _this.state.account\n          }).then(function (r) {\n            console.log(r);\n          });\n        });\n      });\n    };\n\n    _this.pausecomp = function (millis) {\n      var date = new Date();\n      var curDate = null;\n\n      do {\n        curDate = new Date();\n      } while (curDate - date < millis);\n    };\n\n    _this.state = {\n      account: '',\n      buffer: null,\n      contract: null,\n      search: '',\n      totalUserName: [],\n      userEmailId: '',\n      fullName: '',\n      userJsonResultOfParticularUserFromIPFS: null,\n      totalUser: null,\n      profilePicHash: '',\n      userNameList: null,\n      userBlockchainResultOfParticularUser: null,\n      hasError: false\n    };\n    return _this;\n  }\n\n  _createClass(searchFriends, [{\n    key: \"componentWillMount\",\n    value: function () {\n      var _componentWillMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.loadData();\n\n              case 2:\n                _context.next = 4;\n                return this.getName();\n\n              case 4:\n                _context.next = 6;\n                return this.loadNameList();\n\n              case 6:\n                _context.next = 8;\n                return this.loadWeb3();\n\n              case 8:\n                _context.next = 10;\n                return this.loadBlockChainData();\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentWillMount() {\n        return _componentWillMount.apply(this, arguments);\n      }\n\n      return componentWillMount;\n    }()\n  }, {\n    key: \"loadNameList\",\n    value: function () {\n      var _loadNameList = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                console.log(this.state.totalUserName);\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function loadNameList() {\n        return _loadNameList.apply(this, arguments);\n      }\n\n      return loadNameList;\n    }()\n  }, {\n    key: \"loadData\",\n    value: function () {\n      var _loadData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                this.setState({\n                  fullName: this.props.location.fullName\n                });\n                this.setState({\n                  userEmailId: this.props.location.userEmailId\n                });\n                this.setState({\n                  userJsonResultOfParticularUserFromIPFS: this.props.location.userJsonResultOfParticularUserFromIPFS\n                });\n                this.setState({\n                  userInformationListFromBlockChain: this.props.location.userInformationListFromBlockChain\n                });\n                this.setState({\n                  totalUser: this.props.location.totalUser\n                });\n                this.setState({\n                  userBlockchainResultOfParticularUser: this.props.location.userBlockchainResultOfParticularUser\n                });\n\n              case 6:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function loadData() {\n        return _loadData.apply(this, arguments);\n      }\n\n      return loadData;\n    }()\n  }, {\n    key: \"getName\",\n    value: function () {\n      var _getName = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4() {\n        var _this2 = this;\n\n        var i, userHash;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                for (i = 0; i < this.state.totalUser.length; i++) {\n                  console.log(this.state.totalUser[i].userHash);\n                  userHash = this.state.totalUser[i].userHash;\n                  ipfs.get(\"/ipfs/\" + this.state.totalUser[i].userHash, function (error, result) {\n                    var uint8array = new TextEncoder(\"utf-8\").encode(\"¢\");\n                    var UserStringResult = new TextDecoder(\"utf-8\").decode(result[0].content);\n                    var userJsonResult = JSON.parse(UserStringResult);\n                    console.log(userJsonResult);\n                    var obj = {\n                      name: userJsonResult.fullName,\n                      emailId: userJsonResult.emailId\n                    };\n\n                    _this2.state.totalUserName.push(obj);\n                  });\n                }\n\n                console.log(this.state.totalUserName);\n\n              case 2:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function getName() {\n        return _getName.apply(this, arguments);\n      }\n\n      return getName;\n    }()\n  }, {\n    key: \"loadWeb3\",\n    value: function () {\n      var _loadWeb = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5() {\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                if (!window.ethereum) {\n                  _context5.next = 4;\n                  break;\n                }\n\n                window.web3 = new Web3(window.ethereum);\n                _context5.next = 4;\n                return window.ethereum.enable();\n\n              case 4:\n                if (window.web3) {\n                  window.web3 = new Web3(window.web3.currentProvider);\n                } else {\n                  window.alert(\"Use Metamask\");\n                }\n\n              case 5:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      function loadWeb3() {\n        return _loadWeb.apply(this, arguments);\n      }\n\n      return loadWeb3;\n    }()\n  }, {\n    key: \"loadBlockChainData\",\n    value: function () {\n      var _loadBlockChainData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee6() {\n        var web3_2, accounts, networkId, networkdata, abi, address, contract;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                //console.log(\"load Blockchain load data\");\n                web3_2 = window.web3;\n                _context6.next = 3;\n                return web3_2.eth.getAccounts();\n\n              case 3:\n                accounts = _context6.sent;\n                // console.log(accounts);\n                this.setState({\n                  account: accounts[0]\n                }); // console.log(this.state);\n\n                _context6.next = 7;\n                return web3_2.eth.net.getId();\n\n              case 7:\n                networkId = _context6.sent;\n                // console.log(networkId);\n                networkdata = Meme.networks[networkId];\n\n                if (networkdata) {\n                  abi = Meme.abi;\n                  address = networkdata.address; //fetch the contract \n\n                  contract = web3_2.eth.Contract(abi, address); //console.log(contract);\n\n                  this.setState({\n                    contract: contract\n                  }); // console.log(contract.methods);\n                  //  const MemeHash =await contract.methods.get().call();\n                } else {\n                  window.alert(\"Smart contract not deployed to detected the network\");\n                }\n\n              case 10:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function loadBlockChainData() {\n        return _loadBlockChainData.apply(this, arguments);\n      }\n\n      return loadBlockChainData;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var mystyle = {\n        textAlign: \"center\",\n        font: \"inherit\",\n        border: \"6px solid #a3d8d6\",\n        padding: \"13px 12px\",\n        fontSize: \"15px\",\n        boxShadow: \"0 1px 1px #DDD\",\n        width: \" 900px\",\n        outline: \"none\",\n        display: \"block\",\n        color: \"#788585\",\n        margin: \"0 auto 20px\",\n        height: \"60px\" // color: \"white\",\n        // backgroundColor: \"DodgerBlue\",\n        // padding: \"10px\",\n        // fontFamily: \"Arial\",\n        // cursor: \"pointer\"\n\n      };\n      var ReactHeading = {\n        textAlign: \"center\",\n        padding: \"50px\",\n        textTransform: \"uppercase\",\n        color: \"DodgerBlue\"\n      };\n      var userNameList = this.state.totalUserName.filter(function (people) {\n        return people.name.indexOf(_this3.state.search) !== -1;\n      });\n      var list = userNameList.map(function (people) {\n        return React.createElement(Card, {\n          style: {\n            padding: \"50px\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 280\n          },\n          __self: this\n        }, React.createElement(Card.Title, {\n          style: {\n            color: \"#639407\",\n            fontWeight: \"1200\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 282\n          },\n          __self: this\n        }, people.name), React.createElement(Card.Body, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 283\n          },\n          __self: this\n        }, React.createElement(Card.Link, {\n          style: {\n            color: \"#057396\",\n            fontWeight: \"bold\",\n            cursor: \"pointer\"\n          },\n          onClick: function onClick() {\n            return _this3.addFriend(people);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 284\n          },\n          __self: this\n        }, \"Add Friend\"), React.createElement(Card.Link, {\n          style: {\n            color: \"#82360d\",\n            fontWeight: \"bold\",\n            cursor: \"pointer\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 285\n          },\n          __self: this\n        }, \"View Profile\")));\n      });\n      var list2 = userNameList.map(function (people) {\n        return React.createElement(Card, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 290\n          },\n          __self: this\n        }, React.createElement(Card.Body, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 291\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 292\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"box media\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 293\n          },\n          __self: this\n        }, React.createElement(\"figure\", {\n          className: \"image is-96x96 media-left\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 294\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: 'https://ipfs.infura.io/ipfs/QmYah59VfHQTNPnhk1f5hwnVqkxRC6CB9xvMjzLro9VBsw',\n          style: {\n            height: \"100%\",\n            width: \"200px\"\n          },\n          alt: \"Rutvik\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 295\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"media-content\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 297\n          },\n          __self: this\n        }, React.createElement(Card.Title, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 299\n          },\n          __self: this\n        }, people.name), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 300\n          },\n          __self: this\n        }), React.createElement(Card.Link, {\n          onClick: function onClick() {\n            return _this3.addFriend(people);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 301\n          },\n          __self: this\n        }, React.createElement(Button, {\n          variant: \"primary\",\n          size: \"sm\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 301\n          },\n          __self: this\n        }, \"Add Friend\")), React.createElement(Card.Link, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 302\n          },\n          __self: this\n        }, React.createElement(Button, {\n          variant: \"secondary\",\n          size: \"sm\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 302\n          },\n          __self: this\n        }, \"View Profile\")))))));\n      } //\n      );\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313\n        },\n        __self: this\n      }, React.createElement(\"link\", {\n        href: \"https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\",\n        rel: \"stylesheet\",\n        integrity: \"sha384-wvfXpqpZZVQGK6TAh5PVlGOfQNHSoD2xbE+QkPxCAFlNEevoEH3Sl0sibVcOQVnN\",\n        crossorigin: \"anonymous\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314\n        },\n        __self: this\n      }), React.createElement(\"nav\", {\n        className: \"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        className: \"navbar-brand col-sm-3 col-md-2 mr-0 text-center\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322\n        },\n        __self: this\n      }))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325\n        },\n        __self: this\n      }), React.createElement(Navbar, {\n        bg: \"light\",\n        expand: \"lg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326\n        },\n        __self: this\n      }, React.createElement(Navbar.Brand, {\n        href: \"#home\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcQtRwMIKUhJfgz64gGRnrGmgHWdPsnP4zv_HlocpHesF_3BM8Aw&usqp=CAU\",\n        style: {\n          height: \"100%\",\n          width: \"70px\"\n        },\n        alt: \"\",\n        className: \"img-responsive\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327\n        },\n        __self: this\n      })), React.createElement(Navbar.Toggle, {\n        \"aria-controls\": \"basic-navbar-nav\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328\n        },\n        __self: this\n      }), React.createElement(Navbar.Collapse, {\n        id: \"basic-navbar-nav\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329\n        },\n        __self: this\n      }, React.createElement(Nav, {\n        className: \"mr-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330\n        },\n        __self: this\n      }, React.createElement(Nav.Link, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"primary\",\n        onClick: this.mainPage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331\n        },\n        __self: this\n      }, \" \", React.createElement(\"span\", {\n        className: \"fa fa-backward\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331\n        },\n        __self: this\n      }), \" Main Page\"))), React.createElement(Button, {\n        variant: \"primary\",\n        style: {\n          marginRight: \"10px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"fa fa-id-badge\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334\n        },\n        __self: this\n      }), \"  \", this.state.fullName), React.createElement(Button, {\n        Button: true,\n        variant: \"light\",\n        onClick: this.signOut,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        class: \"fa fa-sign-out\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335\n        },\n        __self: this\n      }), \" Log Out\"))), React.createElement(\"div\", {\n        className: \"container text-center \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        style: ReactHeading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340\n        },\n        __self: this\n      }, \"Search  Friends\"), React.createElement(\"input\", {\n        type: \"text\",\n        style: mystyle,\n        placeholder: \"Search Friend By Name\",\n        value: this.state.search,\n        onChange: this.updateSearch,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342\n        },\n        __self: this\n      }), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343\n        },\n        __self: this\n      }), list2));\n    }\n  }], [{\n    key: \"getDerivedStateFromError\",\n    value: function getDerivedStateFromError(error) {\n      // Update state so the next render will show the fallback UI.\n      return {\n        hasError: true\n      };\n    }\n  }]);\n\n  return searchFriends;\n}(Component);\n\nexport default searchFriends;","map":{"version":3,"sources":["/Users/rutvikpatel/Desktop/Project/Github6/starter_kit/src/components/searchFriends.js"],"names":["React","Component","useState","Web3","Meme","Form","InputGroup","Button","Nav","Navbar","Card","Jumbotron","ReactSearchBox","ipfsClient","require","ipfs","host","port","protocol","searchFriends","props","check","console","log","state","fullName","userEmailId","userJsonResultOfParticularUserFromIPFS","totalUser","userBlockchainResultOfParticularUser","totalUserName","hasError","mainPage","history","push","pathname","updateSearch","event","setState","search","target","value","substr","addFriend","dataParse","userHash","userId","i","length","emailId","toString","get","error","result","uint8array","TextEncoder","encode","UserStringResult","TextDecoder","decode","content","userJsonResult","JSON","parse","obj","name","requestNotAccepted","originalContentString","Buffer","from","stringify","userContent","add","results","userInformationHash","hash","contract","methods","changeUserInformation","send","account","then","r","request","id","pausecomp","millis","date","Date","curDate","buffer","profilePicHash","userNameList","loadData","getName","loadNameList","loadWeb3","loadBlockChainData","location","userInformationListFromBlockChain","window","ethereum","web3","enable","currentProvider","alert","web3_2","eth","getAccounts","accounts","net","getId","networkId","networkdata","networks","abi","address","Contract","mystyle","textAlign","font","border","padding","fontSize","boxShadow","width","outline","display","color","margin","height","ReactHeading","textTransform","filter","people","indexOf","list","map","fontWeight","cursor","list2","marginRight","signOut"],"mappings":"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","sourcesContent":["import React, { Component,useState } from 'react';\nimport Web3 from 'web3';\nimport Meme from '../abis/Meme.json';\nimport { Form,InputGroup, Button,Nav,Navbar,Card} from \"react-bootstrap\";\nimport Jumbotron from 'react-bootstrap/Jumbotron'\nimport ReactSearchBox from 'react-search-box'\nvar ipfsClient = require('ipfs-http-client');\nvar ipfs = ipfsClient({host:'ipfs.infura.io',port:'5001',protocol: 'https' }) ;\n\n\nclass searchFriends extends Component{\n\n    constructor(props){\n        super(props);\n         \n        this.state={\n          account:'',\n          buffer:null,\n          contract:null,\n          search:'',\n          totalUserName:[],\n          userEmailId:'',\n          fullName:'',\n          userJsonResultOfParticularUserFromIPFS:null,\n          totalUser:null,\n          profilePicHash:'',\n          userNameList:null,\n          userBlockchainResultOfParticularUser:null,\n          hasError: false \n        };       \n      }\n\n\n\n\n      async componentWillMount(){\n        //this.pausecomp(8500);\n        //this.pausecomp(4500);\n        await this.loadData();\n        //await this.check();\n        await this.getName();\n        await this.loadNameList();\n        await this.loadWeb3()\n        await this.loadBlockChainData();\n      }\n      async loadNameList(){\n        console.log(this.state.totalUserName);\n      }\n      async loadData(){\n       \n        this.setState({fullName:this.props.location.fullName});\n        this.setState({userEmailId:this.props.location.userEmailId});\n        this.setState({userJsonResultOfParticularUserFromIPFS:this.props.location.userJsonResultOfParticularUserFromIPFS});\n        this.setState({userInformationListFromBlockChain:this.props.location.userInformationListFromBlockChain});\n        this.setState({totalUser:this.props.location.totalUser});\n        this.setState({userBlockchainResultOfParticularUser:this.props.location.userBlockchainResultOfParticularUser});\n       \n     }\n     check=()=>{\n      console.log(this.state.fullName);\n      console.log(this.state.userEmailId)\n      console.log(this.state.userJsonResultOfParticularUserFromIPFS);\n      console.log(this.state.totalUser);\n      console.log(this.state.userBlockchainResultOfParticularUser);\n      console.log(this.state.totalUserName);\n      console.log(this.state.hasError);\n      //console.log(this.state.)\n     }\n     async getName(){\n       for(var i=0;i<this.state.totalUser.length;i++){\n        console.log(this.state.totalUser[i].userHash)\n        var userHash =this.state.totalUser[i].userHash;\n        ipfs.get(\"/ipfs/\"+this.state.totalUser[i].userHash,(error,result)=>{        \n           var uint8array = new TextEncoder(\"utf-8\").encode(\"¢\");\n           var UserStringResult = new TextDecoder(\"utf-8\").decode(result[0].content);\n           var userJsonResult = JSON.parse(UserStringResult);\n           console.log(userJsonResult);\n           var obj={\n             name: userJsonResult.fullName,\n             emailId:userJsonResult.emailId\n           }\n           this.state.totalUserName.push(obj);\n           });\n       }\n       console.log(this.state.totalUserName);   \n     }\n     mainPage=()=>{\n\n      this.props.history.push({\n        pathname: '/MainPage',\n        userEmailId: this.state.userEmailId,\n        fullName:  this.state. fullName,\n        userJsonResultOfParticularUserFromIPFS:this.state.userJsonResultOfParticularUserFromIPFS,\n        totalUser:this.state.totalUser,\n        userBlockchainResultOfParticularUser:this.state.userBlockchainResultOfParticularUser\n      })\n       console.log(this.state.userJsonResultOfParticularUserFromIPFS);\n     }\n\n     async loadWeb3(){\n        if(window.ethereum){\n          window.web3 = new Web3(window.ethereum);\n          await window.ethereum.enable();\n        }\n        if(window.web3){\n          window.web3 = new Web3(window.web3.currentProvider);\n        }\n        else{\n          window.alert(\"Use Metamask\");\n        } \n      }\n      static getDerivedStateFromError(error) {\n        // Update state so the next render will show the fallback UI.\n        return { hasError: true };\n      }\n      async loadBlockChainData(){\n        //console.log(\"load Blockchain load data\");\n        const web3_2 = window.web3;\n        const accounts =  await web3_2.eth.getAccounts();\n       // console.log(accounts);\n        this.setState({account:accounts[0]});\n       // console.log(this.state);\n        const networkId = await web3_2.eth.net.getId();\n       // console.log(networkId);\n        const networkdata= Meme.networks[networkId];\n        if(networkdata){\n          const abi =Meme.abi;\n          const address = networkdata.address;\n          //fetch the contract \n          const contract = web3_2.eth.Contract(abi,address);\n          //console.log(contract);\n          this.setState({contract:contract});\n         // console.log(contract.methods);\n        //  const MemeHash =await contract.methods.get().call();\n        }\n        else{\n          window.alert(\"Smart contract not deployed to detected the network\");\n        }\n      }\n\n \n      updateSearch=(event)=>{\n     //  console.log(event.target.value);\n       this.setState({search:event.target.value.substr(0,20)})      \n      }\n      addFriend=(dataParse)=>{\n        \n        //console.log(this.state.userHash);\n        var userHash;\n        var userId;\n        for(var i=0;i<this.state.totalUser.length;i++){\n          if(this.state.totalUser[i].userEmailId==dataParse.emailId){\n            console.log(\"Same\");\n            console.log(this.state.totalUser[i].userHash);\n            userHash=this.state.totalUser[i].userHash;\n            userId= this.state.totalUser[i].userId.toString();\n            break;\n          }\n        }\n        ipfs.get(\"/ipfs/\"+userHash,(error,result)=>{        \n          console.log(\"Information of friend to add\");\n          console.log(dataParse);\n          console.log(dataParse.emailId);\n          var uint8array = new TextEncoder(\"utf-8\").encode(\"¢\");\n          var UserStringResult = new TextDecoder(\"utf-8\").decode(result[0].content);\n          var userJsonResult = JSON.parse(UserStringResult);\n          console.log(\"Friend to be add information\");\n          console.log(userJsonResult);\n          var obj={\n            userId:this.state.userBlockchainResultOfParticularUser.userId,\n            name:this.state.fullName,\n            emailId:this.state.userEmailId\n          }\n          userJsonResult.requestNotAccepted.push(obj);\n          console.log(userJsonResult);\n          var originalContentString = Buffer.from(JSON.stringify(userJsonResult));\n          // The json is change to string format \n          const userContent= {\n            content:originalContentString\n        }\n        ipfs.add(userContent,(error,results)=>{\n          console.log(results);\n          var userInformationHash= results[0].hash;\n          console.log(results[0].hash);  \n          console.log(userId);          \n             this.state.contract.methods.changeUserInformation(userId,userInformationHash).send({from: this.state.account}).then((r)=>{\n                console.log(r);\n            });\n        });\n         // userJsonResult.requestNotAccepted=obj\n\n          });\n\n       \n        \n        ipfs.get(\"/ipfs/\"+this.state.userBlockchainResultOfParticularUser.userHash,(error,result)=>{   \n          console.log(\"Current User Information\");\n          console.log(this.state.userEmailId);\n          console.log(this.state.userBlockchainResultOfParticularUser.userHash);     \n          var uint8array = new TextEncoder(\"utf-8\").encode(\"¢\");\n          var UserStringResult = new TextDecoder(\"utf-8\").decode(result[0].content);\n          var userJsonResult = JSON.parse(UserStringResult);\n          console.log(\"current fiend information\");\n          console.log(userJsonResult);\n          var obj={\n            userId:userId,\n            name:dataParse.name,\n            emailId:dataParse.emailId\n          }\n          userJsonResult.request.push(obj);\n          console.log(userJsonResult);\n          this.setState({userJsonResultOfParticularUserFromIPFS:userJsonResult})\n          console.log(this.state.userJsonResultOfParticularUserFromIPFS);\n          var originalContentString = Buffer.from(JSON.stringify(userJsonResult));\n          // The json is change to string format \n          const userContent= {\n            content:originalContentString\n        }\n        ipfs.add(userContent,(error,results)=>{\n          console.log(results);\n          var userInformationHash= results[0].hash;\n          console.log(results[0].hash);  \n          console.log(this.state.userBlockchainResultOfParticularUser.userId); \n          var id= this.state.userBlockchainResultOfParticularUser.userId;\n             this.state.contract.methods.changeUserInformation(id,userInformationHash).send({from: this.state.account}).then((r)=>{\n                console.log(r);\n            });\n          });\n        });\n\n\n      }\n     \n\n\n\n      pausecomp=(millis)=>{\n        var date = new Date();\n        var curDate = null;\n        do { curDate = new Date(); }\n        while(curDate-date < millis);\n       }\n       \n       render(){\n\n        const mystyle = {\n          textAlign: \"center\",\n          font: \"inherit\",\n          border: \"6px solid #a3d8d6\",\n          padding: \"13px 12px\",\n          fontSize: \"15px\",\n          boxShadow: \"0 1px 1px #DDD\",\n          width: \" 900px\",\n          outline: \"none\",\n          display: \"block\",\n          color: \"#788585\",\n          margin: \"0 auto 20px\",\n          height:\"60px\"\n          // color: \"white\",\n          // backgroundColor: \"DodgerBlue\",\n          // padding: \"10px\",\n          // fontFamily: \"Arial\",\n          // cursor: \"pointer\"\n         \n        };\n        const ReactHeading= \n        {textAlign: \"center\",\n         padding: \"50px\",\n        textTransform: \"uppercase\",\n        color: \"DodgerBlue\"\n      }\n       \n\n        var userNameList= this.state.totalUserName.filter(\n          (people)=>{\n            return people.name.indexOf(this.state.search)!==-1\n          }\n        );\n        let list = userNameList.map(people => \n          <Card    style={{padding: \"50px\" }} >\n          {/* <Card.Header>Rutvik Patel</Card.Header> */}\n         <Card.Title style={{color: \"#639407\", fontWeight: \"1200\"  }} >{people.name}</Card.Title>\n          <Card.Body>\n            <Card.Link  style={{color: \"#057396\", fontWeight: \"bold\",cursor: \"pointer\"  }} onClick={() => this.addFriend(people)}>Add Friend</Card.Link>\n            <Card.Link  style={{color: \"#82360d\", fontWeight: \"bold\",cursor: \"pointer\"  }}  >View Profile</Card.Link>\n          </Card.Body>\n        </Card>\n        );\n       let list2 = userNameList.map(people => \n        <Card>\n  <Card.Body>\n  <div className=\"container\">\n            <div className=\"box media\">\n          <figure className=\"image is-96x96 media-left\">\n            <img src={'https://ipfs.infura.io/ipfs/QmYah59VfHQTNPnhk1f5hwnVqkxRC6CB9xvMjzLro9VBsw'} style={{height: \"100%\",  width:\"200px\" }} alt={\"Rutvik\"} />\n          </figure>\n          <div className=\"media-content\">\n            {/* <p className=\"subtitle\"><b><h4>{people.name}</h4></b></p> */}\n            <Card.Title>{people.name}</Card.Title>\n            <br></br>\n            <Card.Link  onClick={() => this.addFriend(people)}><Button variant=\"primary\" size=\"sm\" >Add Friend</Button></Card.Link>\n            <Card.Link  ><Button variant=\"secondary\" size=\"sm\" >View Profile</Button></Card.Link>\n          </div>\n        </div>\n        </div>\n    </Card.Body>\n</Card>\n//\n       );\n       \n   \n        return(\n          <div>\n            <link href=\"https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\" rel=\"stylesheet\" integrity=\"sha384-wvfXpqpZZVQGK6TAh5PVlGOfQNHSoD2xbE+QkPxCAFlNEevoEH3Sl0sibVcOQVnN\" crossorigin=\"anonymous\"></link>  \n          <nav className=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\n          <a\n            className=\"navbar-brand col-sm-3 col-md-2 mr-0 text-center\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\">\n          <h1></h1>\n          <p></p>\n          <div></div>\n          </a>\n       </nav>\n<br></br>\n       <Navbar bg=\"light\" expand=\"lg\">\n                    <Navbar.Brand href=\"#home\"><img  src={\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcQtRwMIKUhJfgz64gGRnrGmgHWdPsnP4zv_HlocpHesF_3BM8Aw&usqp=CAU\"}  style={{height: \"100%\",  width:\"70px\" }} alt=\"\" className=\"img-responsive\" /></Navbar.Brand>\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\n                        <Nav className=\"mr-auto\">\n                        <Nav.Link ><Button variant=\"primary\" onClick={this.mainPage}> <span className=\"fa fa-backward\"></span> Main Page</Button></Nav.Link>\n                        {/* <Nav.Link ><Button variant=\"outline-secondary\" onClick={this.searchFriends}><span className=\" fa fa-search\"></span>  Search Friend</Button></Nav.Link> */}\n                        </Nav>\n                    <Button variant=\"primary\"  style={{marginRight: \"10px\" }}><span className=\"fa fa-id-badge\"  ></span>  {this.state.fullName}</Button>\n                    <Button Button variant=\"light\" onClick={this.signOut} ><span class=\"fa fa-sign-out\"></span> Log Out</Button>\n                </Navbar.Collapse>\n                </Navbar>\n\n            <div className=\"container text-center \">\n            <h1 style={ReactHeading}>Search  Friends</h1>\n             <input type =\"text\" style={mystyle} placeholder=\"Search Friend By Name\" value={this.state.search} onChange={this.updateSearch}  />\n            <br></br>\n             <hr></hr>         \n           {/* {peopleList2.map((people)=>{\n                     return  <h3>{people.value}</h3>\n              })} */}\n\n              {/* {userNameList.map((people)=>{\n                  return  <h3>{people.name}</h3>\n              })} */}\n              { list2 }\n          {/* {list2} */}\n\n                </div>\n          </div>\n               );\n              }\n            }\n\n\nexport default searchFriends;"]},"metadata":{},"sourceType":"module"}