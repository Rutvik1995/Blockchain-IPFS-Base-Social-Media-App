{"ast":null,"code":"import _defineProperty from \"/Users/rutvikpatel/Desktop/Project/Github6/starter_kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"/Users/rutvikpatel/Desktop/Project/Github6/starter_kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/rutvikpatel/Desktop/Project/Github6/starter_kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"/Users/rutvikpatel/Desktop/Project/Github6/starter_kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/rutvikpatel/Desktop/Project/Github6/starter_kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rutvikpatel/Desktop/Project/Github6/starter_kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/rutvikpatel/Desktop/Project/Github6/starter_kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rutvikpatel/Desktop/Project/Github6/starter_kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/rutvikpatel/Desktop/Project/Github6/starter_kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/rutvikpatel/Desktop/Project/Github6/starter_kit/src/components/viewPost.js\";\nimport React, { Component } from 'react';\nimport Web3 from 'web3';\nimport Meme from '../abis/Meme.json';\nimport { Button, Navbar, Nav, ListGroup, Modal, Card } from \"react-bootstrap\";\nimport { MDBInput } from 'mdbreact';\nimport './file.css';\nimport { Player } from 'video-react';\n\nvar Cryptr = require('cryptr');\n\nvar ipfsClient = require('ipfs-http-client');\n\nvar ipfs = ipfsClient({\n  host: 'ipfs.infura.io',\n  port: '5001',\n  protocol: 'https'\n});\n\nvar CryptoJS = require(\"crypto-js\");\n\nvar viewPost =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(viewPost, _Component);\n\n  function viewPost(props) {\n    var _this;\n\n    _classCallCheck(this, viewPost);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(viewPost).call(this, props));\n\n    _this.displayData = function () {\n      console.log(_this.state.userData);\n      console.log(_this.state.userInformationListFromBlockChain);\n\n      for (var i = 0; i < _this.state.userData.length; i++) {\n        var allUserName = _this.state.userData[i].fullName;\n\n        _this.setState({\n          allUserName: [].concat(_toConsumableArray(_this.state.allUserName), [allUserName])\n        });\n\n        var noSpaceAllUserName = allUserName.split(\" \").join(\"\");\n\n        if (_this.state.dataToParse.includes(noSpaceAllUserName)) {\n          console.log(allUserName);\n\n          _this.setState({\n            currentUserName: allUserName\n          });\n\n          _this.setState({\n            currentUserEmailId: _this.state.userData[i].emailId\n          });\n        }\n      }\n\n      console.log(_this.state.currentUserName);\n\n      for (var i = 0; i < _this.state.userData.length; i++) {\n        if (_this.state.userData[i].fullName == _this.state.currentUserName) {\n          console.log(_this.state.userData[i]);\n          console.log(_this.state.currentUserName);\n\n          _this.setState({\n            currentUserEmailId: _this.state.userData[i].emailId\n          });\n        }\n      }\n\n      console.log(_this.state.PostOwnerEmailId);\n      console.log(_this.state.PostOwnerData);\n\n      for (var i = 0; i < _this.state.userData.length; i++) {\n        if (_this.state.PostOwnerEmailId == _this.state.userData[i].emailId) {\n          console.log(_this.state.userData[i].fullName);\n\n          _this.setState({\n            PostOwnerFullName: _this.state.userData[i].fullName\n          });\n        }\n      }\n\n      for (var i = 0; i < _this.state.userInformationListFromBlockChain.length; i++) {\n        console.log(_this.state.userInformationListFromBlockChain[i].userEmailId == _this.state.currentUserEmailId);\n\n        if (_this.state.userInformationListFromBlockChain[i].userEmailId == _this.state.currentUserEmailId) {\n          console.log(_this.state.userInformationListFromBlockChain[i].userHash);\n\n          _this.setState({\n            currentUserValue: _this.state.userInformationListFromBlockChain[i].userHash\n          });\n\n          console.log(\"Lets' see user hash\");\n        }\n      }\n\n      var count = 0;\n\n      for (var i = 0; i < _this.state.groupInformationListFromBlockChain.length; i++) {\n        console.log(_this.state.groupInformationListFromBlockChain[i]);\n        ipfs.get(\"/ipfs/\" + _this.state.groupInformationListFromBlockChain[i].groupHash, function (error, result) {\n          var content = result[0].content;\n          console.log(content);\n          var userData = JSON.parse(content);\n          console.log(userData);\n\n          for (var j = 0; j < userData.postData.length; j++) {\n            console.log(userData.postData[j]);\n            var uuid = userData.postData[j].postUUID;\n            console.log(uuid);\n\n            if (_this.state.dataToParse.includes(uuid)) {\n              _this.setState({\n                PostOwnerData: userData.postData[j]\n              });\n\n              console.log(userData);\n\n              _this.setState({\n                PostOwnerFullName: userData.groupOwnerName\n              });\n\n              console.log(_this.state.PostOwnerFullName);\n              console.log(\"///******\");\n              console.log(\"found it\");\n\n              _this.setState({\n                globalUserData: userData\n              });\n\n              console.log(userData.postData[j]);\n\n              _this.setState({\n                originalPostContentForFriendList: userData.postData[j]\n              });\n\n              console.log(\"///******\"); // this.setState({PostOwnerData:postInformation});\n\n              for (var i = 0; i < _this.state.userData.length; i++) {\n                if (_this.state.userData[i].fullName == _this.state.PostOwnerFullName) {\n                  //console.log(this.state.userData[i])\n                  //console.log(this.state.currentUserName);\n                  _this.setState({\n                    PostOwnerEmailId: _this.state.userData[i].emailId\n                  });\n\n                  break;\n                }\n              }\n\n              console.log(_this.state.PostOwnerEmailId);\n            }\n          }\n\n          console.log(_this.state.PostOwnerData); // console.log(this.state.PostOwnerData.image);\n          // this.setState({UserGroupIPFSData:userData})\n          // this.setState({\n          //     userData:[...this.state.userData, userData]\n          //   })\n\n          count++;\n\n          if (count == _this.state.groupInformationListFromBlockChain.length) {\n            console.log(\"in if\");\n\n            _this.displayData3();\n          }\n        });\n      } // this.setState({currentUserGroupHash:lastestGroupDetailHash.groupHash})\n      // this.setState({currentGroupKeyInformation:lastestGroupDetailHash});\n\n    };\n\n    _this.displayData3 = function () {\n      for (var i = 0; i < _this.state.userInformationListFromBlockChain.length; i++) {\n        console.log(_this.state.userInformationListFromBlockChain[i]);\n        console.log(_this.state.PostOwnerEmailId);\n        console.log(_this.state.userInformationListFromBlockChain[i].userEmailId);\n        console.log(_this.state.userInformationListFromBlockChain[i].userEmailId == _this.state.PostOwnerEmailId);\n\n        if (_this.state.userInformationListFromBlockChain[i].userEmailId == _this.state.PostOwnerEmailId) {\n          console.log(_this.state.userInformationListFromBlockChain[i].userHash);\n\n          _this.setState({\n            postOwnerHashValue: _this.state.userInformationListFromBlockChain[i].userHash\n          });\n\n          console.log(\"Lets' see user hash\");\n        }\n      }\n\n      console.log(\"in displaydata 3\");\n      console.log(\"Checking the first conditioon\");\n      console.log(_this.state.originalPostContentForFriendList); ////\n\n      for (var i = 0; i < _this.state.originalPostContentForFriendList.friendList.length; i++) {\n        console.log(_this.state.originalPostContentForFriendList.friendList[i]);\n\n        if (_this.state.originalPostContentForFriendList.friendList[i].name === _this.state.currentUserName) {\n          console.log(_this.state.originalPostContentForFriendList.friendList[i].name);\n\n          _this.setState({\n            firstChecker: 1\n          });\n\n          break;\n        }\n      } ///\n\n\n      _this.displayData4();\n    };\n\n    _this.displayData4 = function () {\n      // console.log(\"in display data 4\");\n      // console.log(this.state.globalUserData);\n      // for(var i=0;i<this.state.globalUserData.friend.length;i++){\n      //   console.log(this.state.globalUserData.friend[i].name);\n      //   if(this.state.currentUserName==this.state.globalUserData.friend[i].name){ \n      //     this.setState({secondChecker:1})\n      //     break;\n      //   }\n      // }\n      // this.displayData5();\n      console.log(\"adding in friend 1\");\n      console.log(_this.state.currentUserName);\n      console.log(\"Current Username\");\n      console.log(_this.state.currentUserEmailId);\n      console.log(_this.state.groupInformationListFromBlockChain);\n      var dataArray = [];\n\n      for (var i = 0; i < _this.state.groupInformationListFromBlockChain.length; i++) {\n        if (_this.state.groupInformationListFromBlockChain[i].groupEmailId == _this.state.currentUserEmailId) {\n          dataArray.push(_this.state.groupInformationListFromBlockChain[i]);\n        }\n      }\n\n      var myMap = new Map();\n      var max = -1;\n\n      for (var i = 0; i < dataArray.length; i++) {\n        var value = dataArray[i].groupVersion;\n        console.log(value);\n        value = value.toString();\n        myMap.set(value, dataArray[i]);\n        console.log(value);\n\n        if (value > max) {\n          max = value;\n        }\n      }\n\n      console.log(\"lastest group version is\");\n      console.log(max);\n      console.log(myMap.get(max));\n      var lastestGroupDetailHash = myMap.get(max);\n      console.log(lastestGroupDetailHash);\n\n      if (max != -1) {\n        var currentgroupId = lastestGroupDetailHash.groupId;\n        console.log(currentgroupId); //\n\n        ipfs.get(\"/ipfs/\" + lastestGroupDetailHash.groupHash, function (error, result) {\n          //console.log(result[0].path);\n          var content = result[0].content;\n          console.log(content);\n          var userData = JSON.parse(content);\n          console.log(userData);\n\n          for (var i = 0; i < userData.friend.length; i++) {\n            if (userData.friend[i].emailId == _this.state.PostOwnerEmailId) {\n              _this.setState({\n                secondChecker: 1\n              });\n\n              break;\n            }\n          }\n\n          _this.displayData5();\n        });\n      }\n    };\n\n    _this.displayData5 = function () {\n      console.log(\"in display data 5\");\n\n      if (_this.state.firstChecker == 0 && _this.state.secondChecker == 0) {\n        console.log(\"Post should not be shown\");\n        console.log(\"add friend\");\n\n        _this.setState({\n          vCondition: 0\n        });\n\n        _this.setState({\n          loading: false\n        });\n      } else if (_this.state.firstChecker == 1 && _this.state.secondChecker == 0) {\n        console.log(\"You are friend when the post was published\");\n        console.log(\"you are not friend right now\");\n\n        _this.setState({\n          vCondition: 1\n        });\n      } else if (_this.state.firstChecker == 0 && _this.state.secondChecker == 1) {\n        console.log(\"you are able to see the post\");\n\n        _this.setState({\n          vCondition: 1\n        });\n      } else if (_this.state.firstChecker == 1 && _this.state.secondChecker == 1) {\n        console.log(\"you are able to see the post\");\n\n        _this.setState({\n          vCondition: 1\n        });\n      } else {\n        _this.setState({\n          vCondition: 0\n        });\n\n        _this.setState({\n          loading: false\n        });\n      }\n\n      _this.displayData6();\n    };\n\n    _this.displayData6 = function () {\n      if (_this.state.vCondition == 1) {\n        console.log(\"get data infromation\");\n\n        _this.displayData7();\n      } else {}\n    };\n\n    _this.displayData7 = function () {\n      // postHash\n      ipfs.get(\"/ipfs/\" + _this.state.originalPostContentForFriendList.postHash, function (error, result) {\n        var tempContent = result[0].content;\n        console.log(tempContent);\n        var tempgroupdata = JSON.parse(tempContent);\n        var postData = tempgroupdata;\n        console.log(postData);\n\n        _this.setState({\n          postData: postData.postTextHash\n        });\n\n        var ipfsLink = \"https://ipfs.infura.io/ipfs/\";\n        var gart = postData.postPicHash;\n        var result1 = ipfsLink + gart;\n\n        _this.setState({\n          postImage: result1\n        }); // console.log(tempgroupdata);\n        // this.setState({postUserGroupIPFSData:tempgroupdata});\n        //console.log(this.state.postUserPostIPFSData);\n\n\n        _this.decryptedData2();\n      });\n    };\n\n    _this.decryptedData2 = function () {\n      console.log(_this.state.PostOwnerData);\n      console.log(_this.state.postUserGroupIPFSData);\n\n      if (_this.state.PostOwnerData.image == 'yes') {\n        _this.setState({\n          imageData: \"yes\"\n        });\n      } else if (_this.state.PostOwnerData.video == 'yes') {\n        _this.setState({\n          videoData: \"yes\"\n        });\n      } //  console.log(this.state.postData.postTextHash);\n      //console.log(this.state.postData);\n\n\n      ipfs.get(\"/ipfs/\" + _this.state.postData, function (error, result) {\n        var tempContent = result[0].content;\n        var postData = JSON.parse(tempContent);\n        console.log(postData);\n\n        _this.setState({\n          displayData: postData\n        }); ///\n\n\n        var str = _this.state.PostOwnerFullName;\n        var array = str.split(\" \");\n        var array1 = array[0];\n        var array2 = array[1];\n        var array1 = array1.substring(0, 1);\n        var array2 = array2.substring(0, 1);\n        var final = array1 + array2;\n        console.log(final); //signatureText\n\n        _this.setState({\n          signatureText: final\n        });\n\n        _this.setState({\n          loading: false\n        });\n      });\n    };\n\n    _this.displayData2 = function () {\n      var dataArray = [];\n\n      for (var i = 0; i < _this.state.groupInformationListFromBlockChain.length; i++) {\n        console.log(_this.state.groupInformationListFromBlockChain[i]);\n\n        if (_this.state.groupInformationListFromBlockChain[i].groupEmailId == _this.state.PostOwnerEmailId) {\n          dataArray.push(_this.state.groupInformationListFromBlockChain[i]);\n        }\n      }\n\n      console.log(dataArray);\n      var myMap = new Map();\n      var max = -1;\n\n      for (var i = 0; i < dataArray.length; i++) {\n        var value = dataArray[i].groupVersion;\n        console.log(value);\n        value = value.toString();\n        myMap.set(value, dataArray[i]);\n        console.log(value);\n\n        if (value > max) {\n          max = value;\n        }\n      }\n\n      console.log(\"lastest group version is\");\n      console.log(max);\n      console.log(myMap.get(max));\n      var lastestGroupDetailHash = myMap.get(max);\n      console.log(lastestGroupDetailHash);\n\n      if (max != -1) {\n        console.log(\"in if\");\n        var groupHash = lastestGroupDetailHash.groupHash;\n        console.log(groupHash);\n        var taken = 0;\n        ipfs.get(\"/ipfs/\" + groupHash, function (error, result) {\n          console.log(error);\n          var content = result[0].content;\n          var groupData = JSON.parse(content);\n          console.log(groupData);\n          var dataArray = groupData.groupDetails;\n\n          for (var i = 0; i < dataArray.length; i++) {\n            if (dataArray[i].emailId == _this.state.currentUserEmailId) {\n              taken = 1;\n              console.log(taken);\n\n              _this.setState({\n                renderCondition: 1\n              }); // this.decryptedData();\n\n            }\n          }\n\n          console.log(_this.state.originalPostContentForFriendList);\n\n          for (var i = 0; i < _this.state.originalPostContentForFriendList.friendList.length; i++) {\n            console.log(_this.state.originalPostContentForFriendList.friendList[i]);\n\n            if (_this.state.originalPostContentForFriendList.friendList[i].name === _this.state.currentUserName) {\n              console.log(_this.state.originalPostContentForFriendList.friendList[i].name);\n\n              _this.setState({\n                renderConditionFirst: 1\n              });\n            }\n          } //this.state.postUserPostIPFSData\n\n\n          _this.setState({\n            loading: \"false\"\n          });\n\n          if (taken == 1) {\n            ipfs.get(\"/ipfs/\" + _this.state.PostOwnerData.postHash, function (error, result) {\n              var tempContent = result[0].content;\n              console.log(tempContent);\n              var tempgroupdata = JSON.parse(tempContent);\n              console.log(tempgroupdata);\n\n              _this.setState({\n                postUserGroupIPFSData: tempgroupdata\n              }); //console.log(this.state.postUserPostIPFSData);\n\n\n              _this.decryptedData();\n            });\n          }\n        }); //   ipfs.get(\"/ipfs/\"+this.state.PostOwnerData.postHash,(error,result)=>{\n        //     //console.log(result[0].path);\n        //     var content=result[0].content;\n        //     var posterdata=JSON.parse(content);\n        //     console.log(posterdata);\n        //     this.setState({postUserPostIPFSData:posterdata});\n        //     var dataArray=posterdata.sessionKeyDetails;\n        //     for(var i=0;i<dataArray.length;i++){\n        //       if(dataArray[i].emailId==this.state.currentUserEmailId){\n        //         taken=1;\n        //         console.log(taken);\n        //         this.setState({renderCondition:1});\n        //       }\n        //     }\n        // if(taken==1){ \n        //   ipfs.get(\"/ipfs/\"+groupHash,(error,result)=>{\n        //     var tempContent=result[0].content;\n        //     var tempgroupdata=JSON.parse(tempContent);\n        //     this.setState({postUserGroupIPFSData:tempgroupdata});\n        //     this.decryptedData();\n        //   });\n        // }\n        // })\n      }\n    };\n\n    _this.checkEvent = function (event) {\n      var data = event.detail;\n      console.log(data);\n\n      _this.setState({\n        chromeExtensionData: event\n      });\n\n      console.log(\"Nv Enter:\", event);\n      console.log(_this.state.chromeExtensionData);\n    };\n\n    _this.decryptedData = function () {\n      console.log(_this.state.PostOwnerData);\n\n      if (_this.state.PostOwnerData.image == 'yes') {\n        _this.setState({\n          imageData: \"yes\"\n        });\n      } else if (_this.state.PostOwnerData.video == 'yes') {\n        _this.setState({\n          videoData: \"yes\"\n        });\n      }\n\n      console.log(_this.state.chromeExtensionData.detail.privateKeyData);\n      var stringPrivateKeyData = _this.state.chromeExtensionData.detail.privateKeyData;\n      var jsonPrivateKeyData = JSON.parse(stringPrivateKeyData);\n      console.log(jsonPrivateKeyData);\n      var h = jsonPrivateKeyData;\n      var sequenceNumber;\n      var FinalPrivateKey;\n      console.log(jsonPrivateKeyData.no1);\n\n      for (var key in jsonPrivateKeyData) {\n        console.log(key);\n        console.log(jsonPrivateKeyData[key]);\n        console.log(_this.state.currentUserName);\n        console.log(_this.state.currentUserEmailId == jsonPrivateKeyData[key]);\n\n        if (_this.state.currentUserEmailId == jsonPrivateKeyData[key]) {\n          console.log(\"match found\");\n          var no = key.substring(7, key.length);\n          var privateKey = \"privateKey\";\n          var result = privateKey + no;\n          console.log(result);\n          FinalPrivateKey = jsonPrivateKeyData[result];\n          break;\n        } // console.log(this.state.userListEmailIdSet.has(jsonPrivateKeyData[key]));\n        // if(this.state.userListEmailIdSet.has(jsonPrivateKeyData[key])){\n        //   console.log(key);\n        //   var no=key.substring(7,key.length);\n        //   sequenceNumber=no;\n        //   console.log(no);\n        // }\n\n      }\n\n      console.log(FinalPrivateKey);\n      console.log(_this.state.postUserPostIPFSData);\n      console.log(_this.state.postUserGroupIPFSData);\n      var temp;\n\n      for (var i = 0; i < _this.state.userInformationListFromBlockChain.length; i++) {\n        if (_this.state.userInformationListFromBlockChain[i].userEmailId == _this.state.currentUserEmailId) {\n          console.log(_this.state.userInformationListFromBlockChain[i]);\n          temp = _this.state.userInformationListFromBlockChain[i];\n          break;\n        }\n      }\n\n      console.log(temp);\n      console.log(temp.publickey);\n      var gg = temp.publickey.toString();\n      console.log(gg); //var ciphertext = CryptoJS.AES.encrypt(groupKey,FinalPrivateKey).toString();\n      //console.log(ciphertext);\n      // console.log(this.state.postUserGroupIPFSData.commonGroupKey);\n      // var groupKey =this.state.postUserGroupIPFSData.commonGroupKey.toString();\n      //  var bytes  = CryptoJS.AES.decrypt(groupKey,gg);\n      //  console.log(bytes);\n      //  var originalText = bytes.toString(CryptoJS.enc.Utf8);\n      //  console.log(originalText );\n      //  console.log(\"end\");\n      // console.log(\"-----------------------\");\n\n      console.log(_this.state.postUserGroupIPFSData);\n      var tempPostHash = _this.state.postUserPostIPFSData.postHash;\n      console.log(tempPostHash);\n      console.log(_this.state.postUserGroupIPFSData);\n\n      for (var i = 0; i < _this.state.userInformationListFromBlockChain.length; i++) {\n        console.log(_this.state.userInformationListFromBlockChain[i].use);\n\n        if (_this.state.userInformationListFromBlockChain[i].userEmailId == _this.state.PostOwnerEmailId) {\n          _this.setState({\n            PostOwnerPublicKey: _this.state.userInformationListFromBlockChain[i].publickey\n          });\n        }\n      }\n\n      console.log(_this.state.PostOwnerPublicKey);\n      var cryptr = new Cryptr(_this.state.PostOwnerPublicKey);\n      console.log(_this.state.postUserGroupIPFSData.digitalSignature); //const decryptedString = cryptr.decrypt(this.state.postUserGroupIPFSData.digitalSignature);\n      //  const decryptedString = cryptr.decrypt(this.state.postUserGroupIPFSData.digitalSignature);\n      // console.log(decryptedString);\n\n      ipfs.get(\"/ipfs/\" + _this.state.PostOwnerData.postHash, function (error, result) {\n        var tempContent = result[0].content;\n        var postData = JSON.parse(tempContent);\n        console.log(postData);\n\n        _this.setState({\n          postData: postData.postTextHash\n        });\n\n        var ipfsLink = \"https://ipfs.infura.io/ipfs/\";\n        var gart = postData.postPicHash;\n        var result1 = ipfsLink + gart;\n\n        _this.setState({\n          postImage: result1\n        });\n\n        _this.renderData();\n      });\n    };\n\n    _this.renderData = function () {\n      ipfs.get(\"/ipfs/\" + _this.state.postData, function (error, result) {\n        var tempContent = result[0].content;\n        var postData = JSON.parse(tempContent);\n        console.log(postData);\n\n        _this.setState({\n          displayData: postData\n        }); ///\n\n\n        var str = _this.state.PostOwnerFullName;\n        var array = str.split(\" \");\n        var array1 = array[0];\n        var array2 = array[1];\n        var array1 = array1.substring(0, 1);\n        var array2 = array2.substring(0, 1);\n        var final = array1 + array2;\n        console.log(final); //signatureText\n\n        _this.setState({\n          signatureText: final\n        });\n      });\n    };\n\n    _this.addFriend = function () {\n      console.log(\"on button Click\");\n      console.log(\"inside open\");\n      console.log(_this.state.userInformationListFromBlockChain);\n      console.log(\"(((()))\");\n      console.log(_this.state.groupInformationListFromBlockChain); // this.GetInformation1();\n\n      _this.CheckValue(); //this.friend1();\n      //this.friend2();\n\n    };\n\n    _this.GetInformation1 = function () {\n      console.log(\"Hello Inside the function\");\n\n      _this.CheckValue();\n    };\n\n    _this.pausecomp = function (millis) {\n      console.log(\"in checking time\");\n      var date = new Date();\n      var curDate = null;\n\n      do {\n        curDate = new Date();\n      } while (curDate - date < millis);\n\n      alert(\"Hello\");\n\n      _this.CheckValue();\n    };\n\n    _this.CheckValue = function () {\n      console.log(_this.state.postOwnerHashValue);\n      ipfs.get(\"/ipfs/\" + _this.state.postOwnerHashValue, function (error, result) {\n        //console.log(result[0].path);\n        var content = result[0].content;\n        console.log(content);\n        var userData = JSON.parse(content);\n        console.log(userData);\n\n        _this.setState({\n          postOwnerProfilePic: userData.profilePicHash\n        });\n\n        _this.CheckValue2();\n      });\n      console.log(_this.state.currentUserValue);\n    };\n\n    _this.CheckValue2 = function () {\n      ipfs.get(\"/ipfs/\" + _this.state.currentUserValue, function (error, result) {\n        //console.log(result[0].path);\n        var content = result[0].content;\n        console.log(content);\n        var userData = JSON.parse(content);\n        console.log(userData);\n\n        _this.setState({\n          currentUserProfilePic: userData.profilePicHash\n        });\n\n        _this.friend1(); //this.friend2();\n\n\n        console.log(_this.state.postOwnerProfilePic);\n        console.log(_this.state.currentUserProfilePic);\n      });\n    };\n\n    _this.friend1 = function () {\n      console.log(\"adding in friend 1\");\n      console.log(_this.state.currentUserName);\n      console.log(\"Current Username\");\n      console.log(_this.state.currentUserEmailId);\n      console.log(_this.state.groupInformationListFromBlockChain);\n      var dataArray = [];\n\n      for (var i = 0; i < _this.state.groupInformationListFromBlockChain.length; i++) {\n        if (_this.state.groupInformationListFromBlockChain[i].groupEmailId == _this.state.currentUserEmailId) {\n          dataArray.push(_this.state.groupInformationListFromBlockChain[i]);\n        }\n      }\n\n      var myMap = new Map();\n      var max = -1;\n\n      for (var i = 0; i < dataArray.length; i++) {\n        var value = dataArray[i].groupVersion;\n        console.log(value);\n        value = value.toString();\n        myMap.set(value, dataArray[i]);\n        console.log(value);\n\n        if (value > max) {\n          max = value;\n        }\n      }\n\n      console.log(\"lastest group version is\");\n      console.log(max);\n      console.log(myMap.get(max));\n      var lastestGroupDetailHash = myMap.get(max);\n      console.log(lastestGroupDetailHash); ///\n\n      var currentgroupId = lastestGroupDetailHash.groupId;\n      console.log(currentgroupId);\n\n      _this.setState({\n        currentUserLastestGroupId: currentgroupId\n      });\n\n      console.log(_this.state.postOwnerProfilePic);\n      var userObj = {\n        name: _this.state.currentUserName,\n        emailId: _this.state.currentUserEmailId,\n        profilePicHash: _this.state.currentUserProfilePic,\n        userId: currentgroupId\n      };\n\n      _this.setState({\n        currentUserObj: userObj\n      });\n\n      console.log(userObj); //\n\n      ipfs.get(\"/ipfs/\" + lastestGroupDetailHash.groupHash, function (error, result) {\n        //console.log(result[0].path);\n        var content = result[0].content;\n        console.log(content);\n        var userData = JSON.parse(content);\n        console.log(userData);\n\n        _this.setState({\n          currentUserFinalData: userData\n        });\n\n        _this.friend2();\n      });\n    };\n\n    _this.friend2 = function () {\n      console.log(\"adding in friend 2\");\n      console.log(_this.state.PostOwnerFullName);\n      var dataArray = []; //\n\n      for (var i = 0; i < _this.state.groupInformationListFromBlockChain.length; i++) {\n        if (_this.state.groupInformationListFromBlockChain[i].groupEmailId == _this.state.PostOwnerEmailId) {\n          dataArray.push(_this.state.groupInformationListFromBlockChain[i]);\n        }\n      }\n\n      var myMap = new Map();\n      var max = -1;\n\n      for (var i = 0; i < dataArray.length; i++) {\n        var value = dataArray[i].groupVersion;\n        console.log(value);\n        value = value.toString();\n        myMap.set(value, dataArray[i]);\n        console.log(value);\n\n        if (value > max) {\n          max = value;\n        }\n      }\n\n      console.log(\"lastest group version is\");\n      console.log(max);\n      console.log(myMap.get(max));\n      var lastestGroupDetailHash = myMap.get(max);\n      console.log(lastestGroupDetailHash);\n      var currentgroupId = lastestGroupDetailHash.groupId;\n      console.log(currentgroupId);\n\n      _this.setState({\n        postOwnerLastestGroupId: currentgroupId\n      }); ///\n\n\n      var userObj = {\n        name: _this.state.PostOwnerFullName,\n        emailId: _this.state.PostOwnerEmailId,\n        profilePicHash: _this.state.postOwnerProfilePic,\n        userId: currentgroupId,\n        userHash: _this.state.postOwnerHashValue\n      };\n\n      _this.setState({\n        postUserObj: userObj\n      });\n\n      console.log(userObj);\n      ipfs.get(\"/ipfs/\" + lastestGroupDetailHash.groupHash, function (error, result) {\n        //console.log(result[0].path);\n        var content = result[0].content;\n        console.log(content);\n        var userData = JSON.parse(content);\n        console.log(userData);\n\n        _this.setState({\n          postUserFinalData: userData\n        });\n\n        _this.lastFunction();\n      });\n    };\n\n    _this.lastFunction = function () {\n      console.log(_this.state.postUserObj);\n      console.log(_this.state.currentUserObj);\n      console.log(_this.state.currentUserFinalData);\n      console.log(_this.state.postUserFinalData);\n\n      _this.state.currentUserFinalData.request.push(_this.state.postUserObj);\n\n      _this.state.postUserFinalData.requestNotAccepted.push(_this.state.currentUserObj);\n\n      console.log(_this.state.currentUserFinalData);\n      console.log(_this.state.postUserFinalData);\n      var originalContentString = Buffer.from(JSON.stringify(_this.state.postUserFinalData));\n      console.log(_this.state.postOwnerLastestGroupId.toString()); // The json is change to string format \n\n      var userContent = {\n        content: originalContentString ///\n\n      };\n      ipfs.add(userContent, function (error, results) {\n        var groupHashAddress = results[0].hash;\n        console.log(groupHashAddress); //string memory _postedByEmailId,string memory _postHash, uint _uniquePostId ,string memory _currentDateAndTime\n\n        _this.state.contract.methods.changeGroupInformation(_this.state.postOwnerLastestGroupId.toString(), groupHashAddress).send({\n          from: _this.state.account\n        }).then(function (r) {\n          console.log(r);\n        });\n      }); /////\n\n      console.log(_this.state.currentUserLastestGroupId.toString());\n      originalContentString = Buffer.from(JSON.stringify(_this.state.currentUserFinalData));\n      console.log(_this.state.postOwnerLastestGroupId); // The json is change to string format \n\n      userContent = {\n        content: originalContentString ///\n\n      };\n      ipfs.add(userContent, function (error, results) {\n        var groupHashAddress = results[0].hash;\n        console.log(groupHashAddress); //string memory _postedByEmailId,string memory _postHash, uint _uniquePostId ,string memory _currentDateAndTime\n\n        _this.state.contract.methods.changeGroupInformation(_this.state.currentUserLastestGroupId.toString(), groupHashAddress).send({\n          from: _this.state.account\n        }).then(function (r) {\n          console.log(r);\n        });\n      });\n    };\n\n    console.log(props);\n    _this.state = {\n      account: '',\n      buffer: null,\n      contract: null,\n      uuid: '',\n      viewPostPersonfullName: '',\n      currentUserEmailId: '',\n      PostOwnerEmailId: '',\n      PostOwnerFullName: '',\n      PostOwnerPublicKey: '',\n      PostOwnerData: null,\n      dataToParse: '',\n      userInformationListFromBlockChain: [],\n      currentUserName: '',\n      userData: [],\n      allUserName: [],\n      noSpaceAllUserName: [],\n      postInformation: [],\n      groupInformationListFromBlockChain: [],\n      chromeExtensionData: '',\n      userListEmailIdSet: null,\n      postUserGroupIPFSData: '',\n      postUserPostIPFSData: '',\n      postText: '',\n      postImage: '',\n      displayData: '',\n      renderCondition: 0,\n      signatureText: '',\n      imageData: 'no',\n      videoData: 'no',\n      loading: \"true\",\n      privateKey: '',\n      originalPostContentForFriendList: '',\n      renderConditionFirst: 0,\n      editTextArea: true,\n      //\n      firstChecker: 0,\n      secondChecker: 0,\n      vCondition: 0,\n      globalUserData: '',\n      friend1GroupId: 0,\n      friend2GroupId: 0,\n      postOwnerHashValue: '',\n      currentUserValue: '',\n      postOwnerProfilePic: '',\n      currentUserProfilePic: '',\n      postOwnerLastestGroupId: 0,\n      currentUserLastestGroupId: 0,\n      currentUserObj: '',\n      postUserObj: '',\n      currentUserFinalData: '',\n      postUserFinalData: ''\n    };\n    return _this;\n  }\n\n  _createClass(viewPost, [{\n    key: \"componentWillMount\",\n    value: function () {\n      var _componentWillMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                console.log(\"Before load data\");\n                _context.next = 3;\n                return this.loadData();\n\n              case 3:\n                console.log(\"After load data\");\n                console.log(\"Before loadWeb3\");\n                _context.next = 7;\n                return this.loadWeb3();\n\n              case 7:\n                console.log(\"After loadWeb3\");\n                console.log(\"Before  load bc\");\n                _context.next = 11;\n                return this.loadBlockChainData();\n\n              case 11:\n                console.log(\"After  load bc\");\n                console.log(\"Before load display data\"); // await this.displayData();\n\n                console.log(\"After load display data\"); //     setInterval(function()\n                //     { \n                //     console.log(valueToPass);\n                //      this.displayData();\n                //   },3000);\n\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentWillMount() {\n        return _componentWillMount.apply(this, arguments);\n      }\n\n      return componentWillMount;\n    }()\n  }, {\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                document.addEventListener('csEvent', this.checkEvent);\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"loadData\",\n    value: function () {\n      var _loadData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        var url, secondUrl, secondUr, firstHalfName, dataToParse;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                console.log(\"in load data\");\n                url = window.location.href;\n                secondUrl = url.substring(48, url.length);\n                console.log(secondUrl);\n                secondUr = url.substring(48, url.length);\n                firstHalfName = url.substring(30, 45);\n                console.log(firstHalfName);\n                dataToParse = url.substring(30, url.length);\n                console.log(dataToParse);\n                this.setState({\n                  dataToParse: dataToParse\n                });\n\n              case 10:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function loadData() {\n        return _loadData.apply(this, arguments);\n      }\n\n      return loadData;\n    }()\n  }, {\n    key: \"loadWeb3\",\n    value: function () {\n      var _loadWeb = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4() {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (!window.ethereum) {\n                  _context4.next = 4;\n                  break;\n                }\n\n                window.web3 = new Web3(window.ethereum);\n                _context4.next = 4;\n                return window.ethereum.enable();\n\n              case 4:\n                if (window.web3) {\n                  window.web3 = new Web3(window.web3.currentProvider);\n                } else {\n                  window.alert(\"Use Metamask\");\n                }\n\n              case 5:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      function loadWeb3() {\n        return _loadWeb.apply(this, arguments);\n      }\n\n      return loadWeb3;\n    }()\n  }, {\n    key: \"loadBlockChainData\",\n    value: function () {\n      var _loadBlockChainData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5() {\n        var _this2 = this;\n\n        var web3_2, accounts, networkId, networkdata, abi, address, contract, tt, userCount, i, userInformationListFromBlockChain, groupCount, groupInformationListFromBlockChain, postCount, postInformation, count, userHash;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                web3_2 = window.web3;\n                _context5.next = 3;\n                return web3_2.eth.getAccounts();\n\n              case 3:\n                accounts = _context5.sent;\n                this.setState({\n                  account: accounts[0]\n                });\n                _context5.next = 7;\n                return web3_2.eth.net.getId();\n\n              case 7:\n                networkId = _context5.sent;\n                networkdata = Meme.networks[networkId];\n\n                if (!networkdata) {\n                  _context5.next = 74;\n                  break;\n                }\n\n                abi = Meme.abi;\n                address = networkdata.address; //fetch the contract \n\n                contract = web3_2.eth.Contract(abi, address);\n                console.log(contract);\n                this.setState({\n                  contract: contract\n                });\n                console.log(contract.methods); //  const MemeHash =await contract.methods.get().call();\n\n                this.state.userListEmailIdSet = new Set();\n                _context5.next = 19;\n                return this.state.contract.methods.userCount().call();\n\n              case 19:\n                tt = _context5.sent;\n                _context5.next = 22;\n                return tt;\n\n              case 22:\n                userCount = _context5.sent;\n                i = 1;\n\n              case 24:\n                if (!(i <= userCount)) {\n                  _context5.next = 33;\n                  break;\n                }\n\n                _context5.next = 27;\n                return this.state.contract.methods.userInformation(i).call();\n\n              case 27:\n                userInformationListFromBlockChain = _context5.sent;\n                this.state.userListEmailIdSet.add(userInformationListFromBlockChain.userEmailId);\n                this.setState({\n                  userInformationListFromBlockChain: [].concat(_toConsumableArray(this.state.userInformationListFromBlockChain), [userInformationListFromBlockChain])\n                });\n\n              case 30:\n                i++;\n                _context5.next = 24;\n                break;\n\n              case 33:\n                console.log(this.state.userInformationListFromBlockChain); // ipfs.get(\"/ipfs/\"+t,(error,result)=>{\n                //     console.log(result[0].path);\n                //     content=result[0].content;\n                //   })\n\n                _context5.next = 36;\n                return this.state.contract.methods.groupCount().call();\n\n              case 36:\n                tt = _context5.sent;\n                _context5.next = 39;\n                return tt;\n\n              case 39:\n                groupCount = _context5.sent;\n                groupCount = groupCount.toString();\n                console.log(\"group Count\");\n                console.log(groupCount);\n                i = 1;\n\n              case 44:\n                if (!(i <= groupCount)) {\n                  _context5.next = 53;\n                  break;\n                }\n\n                _context5.next = 47;\n                return this.state.contract.methods.groupInformation(i).call();\n\n              case 47:\n                groupInformationListFromBlockChain = _context5.sent;\n                console.log(groupInformationListFromBlockChain);\n                this.setState({\n                  groupInformationListFromBlockChain: [].concat(_toConsumableArray(this.state.groupInformationListFromBlockChain), [groupInformationListFromBlockChain])\n                });\n\n              case 50:\n                i++;\n                _context5.next = 44;\n                break;\n\n              case 53:\n                _context5.next = 55;\n                return this.state.contract.methods.postCount().call();\n\n              case 55:\n                tt = _context5.sent;\n                _context5.next = 58;\n                return tt;\n\n              case 58:\n                postCount = _context5.sent;\n                i = 1;\n\n              case 60:\n                if (!(i <= postCount)) {\n                  _context5.next = 70;\n                  break;\n                }\n\n                _context5.next = 63;\n                return this.state.contract.methods.postInformation(i).call();\n\n              case 63:\n                postInformation = _context5.sent;\n                console.log(postInformation);\n\n                if (this.state.dataToParse.includes(postInformation.uuid)) {\n                  this.setState({\n                    PostOwnerEmailId: postInformation.postedEmailId\n                  });\n                  this.setState({\n                    PostOwnerData: postInformation\n                  });\n                }\n\n                this.setState({\n                  postInformation: [].concat(_toConsumableArray(this.state.postInformation), [postInformation])\n                });\n\n              case 67:\n                i++;\n                _context5.next = 60;\n                break;\n\n              case 70:\n                count = 0;\n\n                for (i = 0; i < this.state.userInformationListFromBlockChain.length; i++) {\n                  userHash = this.state.userInformationListFromBlockChain[i].userHash;\n                  console.log(userHash);\n                  ipfs.get(\"/ipfs/\" + userHash, function (error, result) {\n                    //console.log(result[0].path);\n                    var content = result[0].content;\n                    console.log(content);\n                    var userData = JSON.parse(content);\n\n                    _this2.setState({\n                      userData: [].concat(_toConsumableArray(_this2.state.userData), [userData])\n                    });\n\n                    count++;\n\n                    if (count == _this2.state.userInformationListFromBlockChain.length) {\n                      console.log(\"in if\");\n\n                      _this2.displayData();\n                    }\n                  });\n                }\n\n                _context5.next = 75;\n                break;\n\n              case 74:\n                window.alert(\"Smart contract not deployed to detected the network\");\n\n              case 75:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function loadBlockChainData() {\n        return _loadBlockChainData.apply(this, arguments);\n      }\n\n      return loadBlockChainData;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _text,\n          _this3 = this;\n\n      var cardStyle2 = {\n        padding: \"10px 10px 10px 10px\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        textAlign: \"center\" // width:\"1000px \n\n      };\n      var cardStyle = {\n        padding: \"10px 10px 10px 10px\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\" // width:\"1000px \n\n      };\n      var addPost = {\n        float: \"right\",\n        background: \"#365899\",\n        border: \"none\",\n        color: \"#fff\",\n        fontWeight: \"bold\" //padding: \"10px 15px\",\n        //borderRadius: \"6px\"\n\n      };\n      var username = {\n        margin: \"15px 0\",\n        padding: \"15px 10px\",\n        width: \"100%\",\n        outline: \"none\",\n        border: \"1px solid #bbb\",\n        borderRadius: \"20px\",\n        display: \"inline-block\",\n        fontSize: \"20px\"\n      };\n      var card = {\n        boxShadow: \"0px 0px 0.5px rgba(10,10,10,.3)\",\n        alignItems: \"center\",\n        position: \"relative\",\n        userSelect: \"none\",\n        overflow: \"hidden\",\n        transition: \"all .5s ease\",\n        padding: \"10px\",\n        width: \"1200px\",\n        height: \"100%\",\n        maxWidth: \"100%\",\n        backgroundColor: \"white\",\n        marginBottom: \"10px\",\n        fontSize: \"14px\",\n        borderRadius: \"3px\",\n        borderStyle: \"solid\",\n        borderColor: \"#365899\"\n      };\n      var card2 = {\n        boxShadow: \"0px 0px 0.5px rgba(10,10,10,.3)\",\n        alignItems: \"center\",\n        position: \"relative\",\n        userSelect: \"none\",\n        overflow: \"hidden\",\n        transition: \"all .5s ease\",\n        padding: \"10px\",\n        width: \"950px\",\n        height: \"280px\",\n        maxWidth: \"100%\",\n        backgroundColor: \"white\",\n        marginBottom: \"10px\",\n        fontSize: \"14px\",\n        borderRadius: \"3px\"\n      };\n      var info = {\n        display: \"flex\",\n        alignItems: \"center\",\n        height: \"40px\"\n      };\n      var photo = {\n        height: \"40px\",\n        width: \"40px\",\n        backgroundColor: \"gray\",\n        opacity: \".8\",\n        borderRadius: \"100%\"\n      };\n      var name = {\n        fontWeight: \"bold\",\n        color: \"rgb(66, 103, 178)\",\n        opacity: \".9\",\n        paddingLeft: \"20px\"\n      };\n      var mystyle = {\n        textAlign: \"center\",\n        font: \"inherit\",\n        border: \"2px solid #365899\",\n        padding: \"13px 12px\",\n        fontSize: \"15px\",\n        boxShadow: \"0 1px 1px #DDD\",\n        width: \" 700px\",\n        outline: \"none\",\n        display: \"block\",\n        color: \"#788585\",\n        margin: \"0 auto 20px\",\n        height: \"50px\" // color: \"white\",\n        // backgroundColor: \"DodgerBlue\",\n        // padding: \"10px\",\n        // fontFamily: \"Arial\",\n        // cursor: \"pointer\"\n\n      };\n      var ReactHeading = {\n        // {textAlign: \"center\",\n        //  padding: \"50px\",\n        // textTransform: \"uppercase\",\n        //color: \"DodgerBlue\",\n        //  color:\"#365899\",\n        fontSize: \"25px\",\n        textTransform: \"uppercase\",\n        textAlign: \"center\",\n        marginBottom: \"15px\",\n        paddingBottom: \"20px\",\n        fontFamily: \"RalewayBold,Arial,sans-serif\"\n      };\n      var cardBorder = {\n        padding: \"10px\",\n        margin: \"10px\",\n        border: \"2px solid #365899\"\n      };\n      var bottomRight = {\n        position: \"absolute\",\n        marginTop: \"234px\",\n        right: \"4px\",\n        display: \"inline-block\",\n        zIndex: \"100\"\n      };\n      var tagLine = {\n        fontSize: \"20px\"\n      };\n      var signature = {\n        marginLeft: \"623px\",\n        fontFamily: \"cursive\",\n        fontSize: \"20px\",\n        color: \"#00664b\"\n      };\n      var imageStyle = {\n        position: \"relative\",\n        maxWidth: \"800px\",\n        margin: \"0 auto\",\n        cursor: \"none\"\n      };\n      var text = (_text = {\n        position: \"absolute\",\n        bottom: \"0\",\n        background: \"rgb(0, 0, 0)\"\n      }, _defineProperty(_text, \"background\", \"rgba(0, 0, 0, 0.5\"), _defineProperty(_text, \"color\", \"#f1f1f1\"), _defineProperty(_text, \"padding\", \"9px\"), _defineProperty(_text, \"marginLeft\", \"720px\"), _defineProperty(_text, \"border\", \"3px solid #a6a6a6\"), _defineProperty(_text, \"fontFamily\", \"cursive\"), _defineProperty(_text, \"textShadow\", \"2px 2px 4px #000000\"), _defineProperty(_text, \"fontSize\", \"19px\"), _defineProperty(_text, \"pointerEvents\", \"none\"), _text);\n      var border = {\n        border: \"5px solid rgb(54, 88, 153)\",\n        marginLeft: \"300px\",\n        marginRight: \"300px\",\n        paddingBottom: \"50px\",\n        paddingTop: \"30px\"\n      };\n\n      var renderAuthButton2 = function renderAuthButton2() {\n        if (_this3.state.loading == \"true\") {\n          console.log(\"in true if\");\n          return React.createElement(\"div\", {\n            style: {\n              textAlign: \"center\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1185\n            },\n            __self: this\n          }, \"Loading.....\");\n        } else {\n          if (_this3.state.vCondition == 0) {\n            return React.createElement(\"div\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1193\n              },\n              __self: this\n            }, React.createElement(\"div\", {\n              className: \"container\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1194\n              },\n              __self: this\n            }, React.createElement(\"div\", {\n              className: \"text-center \",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1195\n              },\n              __self: this\n            }, React.createElement(\"h4\", {\n              style: name,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1196\n              },\n              __self: this\n            }, \"You are not a friend when the post was publish\"), React.createElement(\"hr\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1197\n              },\n              __self: this\n            }), React.createElement(\"div\", {\n              style: border,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1198\n              },\n              __self: this\n            }, React.createElement(\"div\", {\n              style: cardStyle,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1199\n              },\n              __self: this\n            }, React.createElement(\"div\", {\n              style: info,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1201\n              },\n              __self: this\n            }, React.createElement(\"img\", {\n              style: photo,\n              src: \"https://www.gstatic.com/tv/thumb/persons/509114/509114_v9_ba.jpg\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1202\n              },\n              __self: this\n            }), React.createElement(\"div\", {\n              style: name,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1203\n              },\n              __self: this\n            }, React.createElement(\"h4\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1203\n              },\n              __self: this\n            }, \" \", _this3.state.PostOwnerFullName))), React.createElement(\"h4\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1205\n              },\n              __self: this\n            }, \"Want to see the post add \", _this3.state.PostOwnerFullName, \" \"), React.createElement(Button, {\n              variant: \"primary\",\n              onClick: _this3.addFriend,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1206\n              },\n              __self: this\n            }, \"Add Friend\"))))));\n          } else if (_this3.state.vCondition == 1) {\n            if (_this3.state.imageData == \"yes\") {\n              return (//       <div className=\"row\">\n                //       <div className=\"col-2\">\n                //           Hello World\n                //        </div>\n                //        <div className=\"col-8\">In second div\n                //         <div style={cardStyle}>\n                //             <div style={card} expand=\"false\">\n                //                <div style={info}>\n                //                <img style={photo} src='https://www.gstatic.com/tv/thumb/persons/509114/509114_v9_ba.jpg' ></img>\n                //                    <div style={name}><h4> {this.state.PostOwnerFullName}</h4></div>\n                //                    <h3></h3>\n                //                </div>\n                //                <br></br>\n                //               <p style={{fontSize:\"19px\",paddingLeft:\"7px\" }}>{this.state.displayData} <span>{this.state.signatureText}</span></p>\n                //                <hr></hr>\n                //                    <br></br>\n                //                <img src={this.state.postImage}  style={{height: \"100%\",  width:\"700px\",marginLeft:\"150px\" }}/>\n                //                <p style={bottomRight}>Bottom Right</p>\n                //             </div>\n                //        </div> \n                //        </div>\n                //        <div  className=\"col-2\">\n                //            In third div\n                //        </div>\n                // </div>  \n                React.createElement(\"div\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 1250\n                  },\n                  __self: this\n                }, React.createElement(\"div\", {\n                  style: border,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 1252\n                  },\n                  __self: this\n                }, React.createElement(\"div\", {\n                  className: \"container\",\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 1253\n                  },\n                  __self: this\n                }, React.createElement(\"div\", {\n                  style: info,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 1254\n                  },\n                  __self: this\n                }, React.createElement(\"img\", {\n                  style: photo,\n                  src: \"https://www.gstatic.com/tv/thumb/persons/509114/509114_v9_ba.jpg\",\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 1255\n                  },\n                  __self: this\n                }), React.createElement(\"div\", {\n                  style: name,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 1256\n                  },\n                  __self: this\n                }, React.createElement(\"h4\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 1256\n                  },\n                  __self: this\n                }, \" \", _this3.state.PostOwnerFullName))), React.createElement(\"hr\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 1259\n                  },\n                  __self: this\n                }), React.createElement(\"p\", {\n                  style: tagLine,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 1260\n                  },\n                  __self: this\n                }, _this3.state.displayData, React.createElement(\"span\", {\n                  style: signature,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 1262\n                  },\n                  __self: this\n                }, _this3.state.signatureText)), React.createElement(\"hr\", {\n                  style: {\n                    width: \"40px\",\n                    textAlign: \"left\",\n                    marginLeft: \"730px\",\n                    marginTop: \"-15px\",\n                    position: \"relative\",\n                    borderTop: \"7px solid\"\n                  },\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 1264\n                  },\n                  __self: this\n                })), React.createElement(\"div\", {\n                  className: \"container\",\n                  style: imageStyle,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 1267\n                  },\n                  __self: this\n                }, React.createElement(\"img\", {\n                  src: _this3.state.postImage,\n                  style: {\n                    height: '700px',\n                    width: \"100%\"\n                  },\n                  alt: \"Notebook\",\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 1268\n                  },\n                  __self: this\n                }), React.createElement(\"div\", {\n                  style: text,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 1269\n                  },\n                  __self: this\n                }, React.createElement(\"p\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 1270\n                  },\n                  __self: this\n                }, _this3.state.signatureText)))))\n              );\n            } else if (_this3.state.videoData == \"yes\") {\n              return (//\n                React.createElement(\"div\", {\n                  className: \"row\",\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 1285\n                  },\n                  __self: this\n                }, React.createElement(\"div\", {\n                  className: \"col-2\",\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 1286\n                  },\n                  __self: this\n                }, \"video Player\"), React.createElement(\"div\", {\n                  className: \"col-8\",\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 1289\n                  },\n                  __self: this\n                }, \"In second div\", React.createElement(\"div\", {\n                  style: cardStyle,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 1290\n                  },\n                  __self: this\n                }, React.createElement(\"div\", {\n                  style: card,\n                  expand: \"false\",\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 1291\n                  },\n                  __self: this\n                }, React.createElement(\"div\", {\n                  style: info,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 1292\n                  },\n                  __self: this\n                }, React.createElement(\"img\", {\n                  style: photo,\n                  src: \"https://www.gstatic.com/tv/thumb/persons/509114/509114_v9_ba.jpg\",\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 1293\n                  },\n                  __self: this\n                }), React.createElement(\"div\", {\n                  style: name,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 1294\n                  },\n                  __self: this\n                }, React.createElement(\"h4\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 1294\n                  },\n                  __self: this\n                }, \" \", _this3.state.PostOwnerFullName)), React.createElement(\"h3\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 1295\n                  },\n                  __self: this\n                })), React.createElement(\"br\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 1297\n                  },\n                  __self: this\n                }), React.createElement(\"p\", {\n                  style: tagLine,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 1300\n                  },\n                  __self: this\n                }, _this3.state.displayData, React.createElement(\"span\", {\n                  style: signature,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 1302\n                  },\n                  __self: this\n                }, _this3.state.signatureText)), React.createElement(\"hr\", {\n                  style: {\n                    width: \"40px\",\n                    textAlign: \"left\",\n                    marginLeft: \"730px\",\n                    marginTop: \"-15px\",\n                    position: \"relative\",\n                    borderTop: \"7px solid\"\n                  },\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 1304\n                  },\n                  __self: this\n                }), React.createElement(\"hr\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 1305\n                  },\n                  __self: this\n                }), React.createElement(\"br\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 1307\n                  },\n                  __self: this\n                }), React.createElement(\"div\", {\n                  style: {\n                    height: \"100%\",\n                    width: \"700px\",\n                    marginLeft: \"150px\"\n                  },\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 1309\n                  },\n                  __self: this\n                }, React.createElement(Player, {\n                  playsInline: true,\n                  poster: \"/assets/poster.png\",\n                  src: \"https://ipfs.infura.io/ipfs/QmTJcgraP6MR8gamSVgjyDWKeR2naRVzMNmaZnZ7PKQNxY\",\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 1310\n                  },\n                  __self: this\n                })), React.createElement(\"div\", {\n                  class: \"bottomRight\",\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 1317\n                  },\n                  __self: this\n                }, \"Bottom Right\"), React.createElement(\"hr\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 1318\n                  },\n                  __self: this\n                })))), React.createElement(\"div\", {\n                  className: \"col-2\",\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 1323\n                  },\n                  __self: this\n                }, \"In third div\")) //\n\n              );\n            }\n          }\n        }\n      };\n\n      var renderAuthButton = function renderAuthButton() {\n        if (_this3.state.loading == \"true\") {\n          console.log(\"in true if\");\n          return React.createElement(\"div\", {\n            style: {\n              textAlign: \"center\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1346\n            },\n            __self: this\n          }, \"Loading.....\");\n        } else {\n          console.log(\"%%%%%%%%%\");\n          console.log(\"in else\");\n          console.log(\"%%%%%%%%%\");\n          console.log(\"in true else if\");\n\n          if (_this3.state.renderConditionFirst == 1) {\n            /////\n            console.log(_this3.state.imageData);\n            console.log(_this3.state.videoData);\n            console.log(\"in true else if /////////////\");\n\n            if (_this3.state.imageData == \"yes\") {\n              return (//       <div className=\"row\">\n                //       <div className=\"col-2\">\n                //           Hello World\n                //        </div>\n                //        <div className=\"col-8\">In second div\n                //         <div style={cardStyle}>\n                //             <div style={card} expand=\"false\">\n                //                <div style={info}>\n                //                <img style={photo} src='https://www.gstatic.com/tv/thumb/persons/509114/509114_v9_ba.jpg' ></img>\n                //                    <div style={name}><h4> {this.state.PostOwnerFullName}</h4></div>\n                //                    <h3></h3>\n                //                </div>\n                //                <br></br>\n                //               <p style={{fontSize:\"19px\",paddingLeft:\"7px\" }}>{this.state.displayData} <span>{this.state.signatureText}</span></p>\n                //                <hr></hr>\n                //                    <br></br>\n                //                <img src={this.state.postImage}  style={{height: \"100%\",  width:\"700px\",marginLeft:\"150px\" }}/>\n                //                <p style={bottomRight}>Bottom Right</p>\n                //             </div>\n                //        </div> \n                //        </div>\n                //        <div  className=\"col-2\">\n                //            In third div\n                //        </div>\n                // </div>  \n                React.createElement(\"div\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 1396\n                  },\n                  __self: this\n                }, React.createElement(\"div\", {\n                  style: border,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 1398\n                  },\n                  __self: this\n                }, React.createElement(\"div\", {\n                  className: \"container\",\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 1399\n                  },\n                  __self: this\n                }, React.createElement(\"div\", {\n                  style: info,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 1400\n                  },\n                  __self: this\n                }, React.createElement(\"img\", {\n                  style: photo,\n                  src: \"https://www.gstatic.com/tv/thumb/persons/509114/509114_v9_ba.jpg\",\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 1401\n                  },\n                  __self: this\n                }), React.createElement(\"div\", {\n                  style: name,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 1402\n                  },\n                  __self: this\n                }, React.createElement(\"h4\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 1402\n                  },\n                  __self: this\n                }, \" \", _this3.state.PostOwnerFullName))), React.createElement(\"hr\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 1405\n                  },\n                  __self: this\n                }), React.createElement(\"p\", {\n                  style: tagLine,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 1406\n                  },\n                  __self: this\n                }, _this3.state.displayData, React.createElement(\"span\", {\n                  style: signature,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 1408\n                  },\n                  __self: this\n                }, _this3.state.signatureText)), React.createElement(\"hr\", {\n                  style: {\n                    width: \"40px\",\n                    textAlign: \"left\",\n                    marginLeft: \"730px\",\n                    marginTop: \"-15px\",\n                    position: \"relative\",\n                    borderTop: \"7px solid\"\n                  },\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 1410\n                  },\n                  __self: this\n                })), React.createElement(\"div\", {\n                  className: \"container\",\n                  style: imageStyle,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 1413\n                  },\n                  __self: this\n                }, React.createElement(\"img\", {\n                  src: _this3.state.postImage,\n                  style: {\n                    height: '700px',\n                    width: \"100%\"\n                  },\n                  alt: \"Notebook\",\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 1414\n                  },\n                  __self: this\n                }), React.createElement(\"div\", {\n                  style: text,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 1415\n                  },\n                  __self: this\n                }, React.createElement(\"p\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 1416\n                  },\n                  __self: this\n                }, _this3.state.signatureText)))))\n              );\n            } else if (_this3.state.videoData == \"yes\") {\n              return (//\n                React.createElement(\"div\", {\n                  className: \"row\",\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 1431\n                  },\n                  __self: this\n                }, React.createElement(\"div\", {\n                  className: \"col-2\",\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 1432\n                  },\n                  __self: this\n                }, \"video Player\"), React.createElement(\"div\", {\n                  className: \"col-8\",\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 1435\n                  },\n                  __self: this\n                }, \"In second div\", React.createElement(\"div\", {\n                  style: cardStyle,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 1436\n                  },\n                  __self: this\n                }, React.createElement(\"div\", {\n                  style: card,\n                  expand: \"false\",\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 1437\n                  },\n                  __self: this\n                }, React.createElement(\"div\", {\n                  style: info,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 1438\n                  },\n                  __self: this\n                }, React.createElement(\"img\", {\n                  style: photo,\n                  src: \"https://www.gstatic.com/tv/thumb/persons/509114/509114_v9_ba.jpg\",\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 1439\n                  },\n                  __self: this\n                }), React.createElement(\"div\", {\n                  style: name,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 1440\n                  },\n                  __self: this\n                }, React.createElement(\"h4\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 1440\n                  },\n                  __self: this\n                }, \" \", _this3.state.PostOwnerFullName)), React.createElement(\"h3\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 1441\n                  },\n                  __self: this\n                })), React.createElement(\"br\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 1443\n                  },\n                  __self: this\n                }), React.createElement(\"p\", {\n                  style: tagLine,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 1446\n                  },\n                  __self: this\n                }, _this3.state.displayData, React.createElement(\"span\", {\n                  style: signature,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 1448\n                  },\n                  __self: this\n                }, _this3.state.signatureText)), React.createElement(\"hr\", {\n                  style: {\n                    width: \"40px\",\n                    textAlign: \"left\",\n                    marginLeft: \"730px\",\n                    marginTop: \"-15px\",\n                    position: \"relative\",\n                    borderTop: \"7px solid\"\n                  },\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 1450\n                  },\n                  __self: this\n                }), React.createElement(\"hr\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 1451\n                  },\n                  __self: this\n                }), React.createElement(\"br\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 1453\n                  },\n                  __self: this\n                }), React.createElement(\"div\", {\n                  style: {\n                    height: \"100%\",\n                    width: \"700px\",\n                    marginLeft: \"150px\"\n                  },\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 1455\n                  },\n                  __self: this\n                }, React.createElement(Player, {\n                  playsInline: true,\n                  poster: \"/assets/poster.png\",\n                  src: \"https://ipfs.infura.io/ipfs/QmTJcgraP6MR8gamSVgjyDWKeR2naRVzMNmaZnZ7PKQNxY\",\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 1456\n                  },\n                  __self: this\n                })), React.createElement(\"div\", {\n                  class: \"bottomRight\",\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 1463\n                  },\n                  __self: this\n                }, \"Bottom Right\"), React.createElement(\"hr\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 1464\n                  },\n                  __self: this\n                })))), React.createElement(\"div\", {\n                  className: \"col-2\",\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 1469\n                  },\n                  __self: this\n                }, \"In third div\")) //\n\n              );\n            } else {\n              return React.createElement(\"div\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 1480\n                },\n                __self: this\n              }, React.createElement(\"div\", {\n                className: \"container\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 1481\n                },\n                __self: this\n              }, React.createElement(\"div\", {\n                className: \"text-center \",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 1482\n                },\n                __self: this\n              }, React.createElement(\"h4\", {\n                style: name,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 1483\n                },\n                __self: this\n              }, \"You are not a friend when the post was publish\"), React.createElement(\"hr\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 1484\n                },\n                __self: this\n              }), React.createElement(\"div\", {\n                style: border,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 1485\n                },\n                __self: this\n              }, React.createElement(\"div\", {\n                style: cardStyle,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 1486\n                },\n                __self: this\n              }, React.createElement(\"div\", {\n                style: info,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 1488\n                },\n                __self: this\n              }, React.createElement(\"img\", {\n                style: photo,\n                src: \"https://www.gstatic.com/tv/thumb/persons/509114/509114_v9_ba.jpg\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 1489\n                },\n                __self: this\n              }), React.createElement(\"div\", {\n                style: name,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 1490\n                },\n                __self: this\n              }, React.createElement(\"h4\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 1490\n                },\n                __self: this\n              }, \" \", _this3.state.PostOwnerFullName))), React.createElement(\"h4\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 1492\n                },\n                __self: this\n              }, \"Want to see the post add \", _this3.state.PostOwnerFullName, \" \"), React.createElement(Button, {\n                variant: \"primary\",\n                onClick: _this3.addFriend,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 1493\n                },\n                __self: this\n              }, \"Add Friend\"))))));\n            } ////\n\n          } //////////////\n          else if (_this3.state.renderCondition == 1) {\n              /////\n              console.log(_this3.state.imageData);\n              console.log(_this3.state.videoData);\n              console.log(\"in true else if 2/////////////\");\n\n              if (_this3.state.imageData == \"yes\") {\n                return (//       <div className=\"row\">\n                  //       <div className=\"col-2\">\n                  //           Hello World\n                  //        </div>\n                  //        <div className=\"col-8\">In second div\n                  //         <div style={cardStyle}>\n                  //             <div style={card} expand=\"false\">\n                  //                <div style={info}>\n                  //                <img style={photo} src='https://www.gstatic.com/tv/thumb/persons/509114/509114_v9_ba.jpg' ></img>\n                  //                    <div style={name}><h4> {this.state.PostOwnerFullName}</h4></div>\n                  //                    <h3></h3>\n                  //                </div>\n                  //                <br></br>\n                  //               <p style={{fontSize:\"19px\",paddingLeft:\"7px\" }}>{this.state.displayData} <span>{this.state.signatureText}</span></p>\n                  //                <hr></hr>\n                  //                    <br></br>\n                  //                <img src={this.state.postImage}  style={{height: \"100%\",  width:\"700px\",marginLeft:\"150px\" }}/>\n                  //                <p style={bottomRight}>Bottom Right</p>\n                  //             </div>\n                  //        </div> \n                  //        </div>\n                  //        <div  className=\"col-2\">\n                  //            In third div\n                  //        </div>\n                  // </div>  \n                  React.createElement(\"div\", {\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 1547\n                    },\n                    __self: this\n                  }, React.createElement(\"div\", {\n                    style: border,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 1549\n                    },\n                    __self: this\n                  }, React.createElement(\"div\", {\n                    className: \"container\",\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 1550\n                    },\n                    __self: this\n                  }, React.createElement(\"div\", {\n                    style: info,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 1551\n                    },\n                    __self: this\n                  }, React.createElement(\"img\", {\n                    style: photo,\n                    src: \"https://www.gstatic.com/tv/thumb/persons/509114/509114_v9_ba.jpg\",\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 1552\n                    },\n                    __self: this\n                  }), React.createElement(\"div\", {\n                    style: name,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 1553\n                    },\n                    __self: this\n                  }, React.createElement(\"h4\", {\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 1553\n                    },\n                    __self: this\n                  }, \" \", _this3.state.PostOwnerFullName))), React.createElement(\"hr\", {\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 1556\n                    },\n                    __self: this\n                  }), React.createElement(\"p\", {\n                    style: tagLine,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 1557\n                    },\n                    __self: this\n                  }, _this3.state.displayData, React.createElement(\"span\", {\n                    style: signature,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 1559\n                    },\n                    __self: this\n                  }, _this3.state.signatureText)), React.createElement(\"hr\", {\n                    style: {\n                      width: \"40px\",\n                      textAlign: \"left\",\n                      marginLeft: \"730px\",\n                      marginTop: \"-15px\",\n                      position: \"relative\",\n                      borderTop: \"7px solid\"\n                    },\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 1561\n                    },\n                    __self: this\n                  })), React.createElement(\"div\", {\n                    className: \"container\",\n                    style: imageStyle,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 1564\n                    },\n                    __self: this\n                  }, React.createElement(\"img\", {\n                    src: _this3.state.postImage,\n                    style: {\n                      height: '700px',\n                      width: \"100%\"\n                    },\n                    alt: \"Notebook\",\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 1565\n                    },\n                    __self: this\n                  }), React.createElement(\"div\", {\n                    style: text,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 1566\n                    },\n                    __self: this\n                  }, React.createElement(\"p\", {\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 1567\n                    },\n                    __self: this\n                  }, _this3.state.signatureText)))))\n                );\n              } else if (_this3.state.videoData == \"yes\") {\n                return (//\n                  React.createElement(\"div\", {\n                    className: \"row\",\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 1582\n                    },\n                    __self: this\n                  }, React.createElement(\"div\", {\n                    className: \"col-2\",\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 1583\n                    },\n                    __self: this\n                  }, \"video Player\"), React.createElement(\"div\", {\n                    className: \"col-8\",\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 1586\n                    },\n                    __self: this\n                  }, \"In second div\", React.createElement(\"div\", {\n                    style: cardStyle,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 1587\n                    },\n                    __self: this\n                  }, React.createElement(\"div\", {\n                    style: card,\n                    expand: \"false\",\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 1588\n                    },\n                    __self: this\n                  }, React.createElement(\"div\", {\n                    style: info,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 1589\n                    },\n                    __self: this\n                  }, React.createElement(\"img\", {\n                    style: photo,\n                    src: \"https://www.gstatic.com/tv/thumb/persons/509114/509114_v9_ba.jpg\",\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 1590\n                    },\n                    __self: this\n                  }), React.createElement(\"div\", {\n                    style: name,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 1591\n                    },\n                    __self: this\n                  }, React.createElement(\"h4\", {\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 1591\n                    },\n                    __self: this\n                  }, \" \", _this3.state.PostOwnerFullName)), React.createElement(\"h3\", {\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 1592\n                    },\n                    __self: this\n                  })), React.createElement(\"br\", {\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 1594\n                    },\n                    __self: this\n                  }), React.createElement(\"p\", {\n                    style: tagLine,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 1597\n                    },\n                    __self: this\n                  }, _this3.state.displayData, React.createElement(\"span\", {\n                    style: signature,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 1599\n                    },\n                    __self: this\n                  }, _this3.state.signatureText)), React.createElement(\"hr\", {\n                    style: {\n                      width: \"40px\",\n                      textAlign: \"left\",\n                      marginLeft: \"730px\",\n                      marginTop: \"-15px\",\n                      position: \"relative\",\n                      borderTop: \"7px solid\"\n                    },\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 1601\n                    },\n                    __self: this\n                  }), React.createElement(\"hr\", {\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 1602\n                    },\n                    __self: this\n                  }), React.createElement(\"br\", {\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 1604\n                    },\n                    __self: this\n                  }), React.createElement(\"div\", {\n                    style: {\n                      height: \"100%\",\n                      width: \"700px\",\n                      marginLeft: \"150px\"\n                    },\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 1606\n                    },\n                    __self: this\n                  }, React.createElement(Player, {\n                    playsInline: true,\n                    poster: \"/assets/poster.png\",\n                    src: \"https://ipfs.infura.io/ipfs/QmTJcgraP6MR8gamSVgjyDWKeR2naRVzMNmaZnZ7PKQNxY\",\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 1607\n                    },\n                    __self: this\n                  })), React.createElement(\"div\", {\n                    class: \"bottomRight\",\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 1614\n                    },\n                    __self: this\n                  }, \"Bottom Right\"), React.createElement(\"hr\", {\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 1615\n                    },\n                    __self: this\n                  })))), React.createElement(\"div\", {\n                    className: \"col-2\",\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 1620\n                    },\n                    __self: this\n                  }, \"In third div\")) //\n\n                );\n              } ////\n\n            } ///////////////\n            else {\n                return React.createElement(\"div\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 1638\n                  },\n                  __self: this\n                }, React.createElement(\"div\", {\n                  className: \"container\",\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 1639\n                  },\n                  __self: this\n                }, React.createElement(\"div\", {\n                  className: \"text-center \",\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 1640\n                  },\n                  __self: this\n                }, React.createElement(\"h4\", {\n                  style: name,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 1641\n                  },\n                  __self: this\n                }, \"You are not a friend when the post was publish\"), React.createElement(\"hr\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 1642\n                  },\n                  __self: this\n                }), React.createElement(\"div\", {\n                  style: border,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 1643\n                  },\n                  __self: this\n                }, React.createElement(\"div\", {\n                  style: cardStyle,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 1644\n                  },\n                  __self: this\n                }, React.createElement(\"div\", {\n                  style: info,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 1646\n                  },\n                  __self: this\n                }, React.createElement(\"img\", {\n                  style: photo,\n                  src: \"https://www.gstatic.com/tv/thumb/persons/509114/509114_v9_ba.jpg\",\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 1647\n                  },\n                  __self: this\n                }), React.createElement(\"div\", {\n                  style: name,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 1648\n                  },\n                  __self: this\n                }, React.createElement(\"h4\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 1648\n                  },\n                  __self: this\n                }, \" \", _this3.state.PostOwnerFullName))), React.createElement(\"h4\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 1650\n                  },\n                  __self: this\n                }, \"Want to see the post add \", _this3.state.PostOwnerFullName, \" \"), React.createElement(Button, {\n                  variant: \"primary\",\n                  onClick: _this3.addFriend,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 1651\n                  },\n                  __self: this\n                }, \"Add Friend\"))))));\n              }\n        }\n      };\n\n      console.log(this.state.viewPostPersonfullName);\n      console.log(this.state.PostOwnerFullName);\n\n      var viewName = function viewName() {\n        if (_this3.state.currentUserName == '') {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1688\n            },\n            __self: this\n          }, React.createElement(\"h2\", {\n            style: ReactHeading,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1690\n            },\n            __self: this\n          }, \"You Are not register on the app\"));\n        } else {\n          return React.createElement(\"h2\", {\n            style: ReactHeading,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1696\n            },\n            __self: this\n          }, _this3.state.currentUserName);\n        }\n      };\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1706\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1719\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container text-center \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1720\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1721\n        },\n        __self: this\n      }), React.createElement(\"h2\", {\n        style: ReactHeading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1722\n        },\n        __self: this\n      }, \"Hello\"), viewName()), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1725\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1727\n        },\n        __self: this\n      }), renderAuthButton2(), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1731\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        style: {\n          textAlign: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1732\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return viewPost;\n}(Component);\n\nexport default viewPost;","map":{"version":3,"sources":["/Users/rutvikpatel/Desktop/Project/Github6/starter_kit/src/components/viewPost.js"],"names":["React","Component","Web3","Meme","Button","Navbar","Nav","ListGroup","Modal","Card","MDBInput","Player","Cryptr","require","ipfsClient","ipfs","host","port","protocol","CryptoJS","viewPost","props","displayData","console","log","state","userData","userInformationListFromBlockChain","i","length","allUserName","fullName","setState","noSpaceAllUserName","split","join","dataToParse","includes","currentUserName","currentUserEmailId","emailId","PostOwnerEmailId","PostOwnerData","PostOwnerFullName","userEmailId","userHash","currentUserValue","count","groupInformationListFromBlockChain","get","groupHash","error","result","content","JSON","parse","j","postData","uuid","postUUID","groupOwnerName","globalUserData","originalPostContentForFriendList","displayData3","postOwnerHashValue","friendList","name","firstChecker","displayData4","dataArray","groupEmailId","push","myMap","Map","max","value","groupVersion","toString","set","lastestGroupDetailHash","currentgroupId","groupId","friend","secondChecker","displayData5","vCondition","loading","displayData6","displayData7","postHash","tempContent","tempgroupdata","postTextHash","ipfsLink","gart","postPicHash","result1","postImage","decryptedData2","postUserGroupIPFSData","image","imageData","video","videoData","str","array","array1","array2","substring","final","signatureText","displayData2","taken","groupData","groupDetails","renderCondition","renderConditionFirst","decryptedData","checkEvent","event","data","detail","chromeExtensionData","privateKeyData","stringPrivateKeyData","jsonPrivateKeyData","h","sequenceNumber","FinalPrivateKey","no1","key","no","privateKey","postUserPostIPFSData","temp","publickey","gg","tempPostHash","use","PostOwnerPublicKey","cryptr","digitalSignature","renderData","addFriend","CheckValue","GetInformation1","pausecomp","millis","date","Date","curDate","alert","postOwnerProfilePic","profilePicHash","CheckValue2","currentUserProfilePic","friend1","currentUserLastestGroupId","userObj","userId","currentUserObj","currentUserFinalData","friend2","postOwnerLastestGroupId","postUserObj","postUserFinalData","lastFunction","request","requestNotAccepted","originalContentString","Buffer","from","stringify","userContent","add","results","groupHashAddress","hash","contract","methods","changeGroupInformation","send","account","then","r","buffer","viewPostPersonfullName","postInformation","userListEmailIdSet","postText","editTextArea","friend1GroupId","friend2GroupId","loadData","loadWeb3","loadBlockChainData","document","addEventListener","url","window","location","href","secondUrl","secondUr","firstHalfName","ethereum","web3","enable","currentProvider","web3_2","eth","getAccounts","accounts","net","getId","networkId","networkdata","networks","abi","address","Contract","Set","userCount","call","tt","userInformation","groupCount","groupInformation","postCount","postedEmailId","cardStyle2","padding","display","flexDirection","alignItems","textAlign","cardStyle","addPost","float","background","border","color","fontWeight","username","margin","width","outline","borderRadius","fontSize","card","boxShadow","position","userSelect","overflow","transition","height","maxWidth","backgroundColor","marginBottom","borderStyle","borderColor","card2","info","photo","opacity","paddingLeft","mystyle","font","ReactHeading","textTransform","paddingBottom","fontFamily","cardBorder","bottomRight","marginTop","right","zIndex","tagLine","signature","marginLeft","imageStyle","cursor","text","bottom","marginRight","paddingTop","renderAuthButton2","borderTop","renderAuthButton","viewName"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Web3 from 'web3';\nimport Meme from '../abis/Meme.json';\nimport { Button,Navbar,Nav,ListGroup,Modal,Card } from \"react-bootstrap\";\nimport { MDBInput } from 'mdbreact';\nimport './file.css'; \nimport { Player } from 'video-react';\nconst Cryptr = require('cryptr');\n\nvar ipfsClient = require('ipfs-http-client');\nvar ipfs = ipfsClient({host:'ipfs.infura.io',port:'5001',protocol: 'https' }) ;\nvar CryptoJS = require(\"crypto-js\");\n\n\nclass viewPost  extends Component{\n\n    constructor(props){\n        super(props);\n        console.log(props);\n        this.state={\n          account:'',\n          buffer:null,\n          contract:null,\n          uuid:'',\n          viewPostPersonfullName:'',\n          currentUserEmailId:'',\n          PostOwnerEmailId:'',\n          PostOwnerFullName:'',\n          PostOwnerPublicKey:'',\n          PostOwnerData:null,\n          dataToParse:'',\n          userInformationListFromBlockChain:[],\n          currentUserName:'',\n          userData:[],\n          allUserName:[],\n          noSpaceAllUserName:[],\n          postInformation:[],\n          groupInformationListFromBlockChain:[],\n          chromeExtensionData:'',\n          userListEmailIdSet:null,\n          postUserGroupIPFSData:'',\n          postUserPostIPFSData:'',\n          postText:'',\n          postImage:'',\n          displayData:'',\n          renderCondition:0,\n          signatureText:'',\n          imageData:'no',\n          videoData:'no',\n          loading:\"true\",\n          privateKey:'',\n          originalPostContentForFriendList:'',\n          renderConditionFirst:0,\n          editTextArea:true,\n          //\n          firstChecker:0,\n          secondChecker:0,\n          vCondition:0,\n          globalUserData:'',\n          friend1GroupId:0,\n          friend2GroupId:0,\n          postOwnerHashValue:'',\n          currentUserValue:'',\n          postOwnerProfilePic:'',\n          currentUserProfilePic:'',\n          postOwnerLastestGroupId:0,\n          currentUserLastestGroupId:0,\n          currentUserObj:'',\n          postUserObj:'',\n          currentUserFinalData:'',\n          postUserFinalData:''\n\n        };       \n      }\n      async componentWillMount(){\n       console.log(\"Before load data\");\n        await  this.loadData();\n        console.log(\"After load data\");\n\n        console.log(\"Before loadWeb3\");\n        await this.loadWeb3()\n        console.log(\"After loadWeb3\");\n        console.log(\"Before  load bc\");\n        await this.loadBlockChainData();\n        console.log(\"After  load bc\");\n\n        console.log(\"Before load display data\");\n\n       // await this.displayData();\n        console.log(\"After load display data\");\n\n    //     setInterval(function()\n    //     { \n    //     console.log(valueToPass);\n    //      this.displayData();\n    //   },3000);\n\n       \n      }\n      async componentDidMount(){\n        document.addEventListener('csEvent', this.checkEvent);\n      }\n\n       displayData=()=>{\n        console.log(this.state.userData);\n        console.log(this.state.userInformationListFromBlockChain)\n        for(var i=0;i<this.state.userData.length;i++){\n            var allUserName=this.state.userData[i].fullName;\n            this.setState({\n                allUserName:[...this.state.allUserName,allUserName]\n              })\n              var noSpaceAllUserName=allUserName.split(\" \").join(\"\"); \n              if(this.state.dataToParse.includes(noSpaceAllUserName)){\n                console.log(allUserName);\n                this.setState({currentUserName:allUserName})\n                this.setState({currentUserEmailId:this.state.userData[i].emailId})\n              }\n        }\n        console.log(this.state.currentUserName);\n        for(var i=0;i<this.state.userData.length;i++){\n          if(this.state.userData[i].fullName==this.state.currentUserName){\n            console.log(this.state.userData[i])\n            console.log(this.state.currentUserName);\n            this.setState({currentUserEmailId:this.state.userData[i].emailId})\n          }\n        }\n        console.log(this.state.PostOwnerEmailId);\n        console.log(this.state.PostOwnerData);\n        for(var i=0;i<this.state.userData.length;i++){\n         if(this.state.PostOwnerEmailId==this.state.userData[i].emailId){\n           console.log(this.state.userData[i].fullName);\n            this.setState({PostOwnerFullName:this.state.userData[i].fullName})\n         }\n        }\n\n\n         \n         for(var i=0;i<this.state.userInformationListFromBlockChain.length;i++){\n           console.log(this.state.userInformationListFromBlockChain[i].userEmailId==this.state.currentUserEmailId);\n             if(this.state.userInformationListFromBlockChain[i].userEmailId==this.state.currentUserEmailId){\n               console.log(this.state.userInformationListFromBlockChain[i].userHash)\n               this.setState({currentUserValue:this.state.userInformationListFromBlockChain[i].userHash})\n               console.log(\"Lets' see user hash\");   \n             }\n         }\n\n        var count=0;\n       for(var i=0;i<this.state.groupInformationListFromBlockChain.length;i++){\n        console.log(this.state.groupInformationListFromBlockChain[i]);\n        ipfs.get(\"/ipfs/\"+this.state.groupInformationListFromBlockChain[i].groupHash,\n        (error,result)=>{\n            var content=result[0].content;\n            console.log(content);\n            var userData=JSON.parse(content);\n            console.log(userData);\n            for(var j=0;j<userData.postData.length;j++){\n              console.log(userData.postData[j]);\n              var uuid=userData.postData[j].postUUID;\n              console.log(uuid);\n              if(this.state.dataToParse.includes(uuid)){\n                this.setState({PostOwnerData:userData.postData[j]});\n                console.log(userData);\n                this.setState({PostOwnerFullName:userData.groupOwnerName})\n                console.log(this.state.PostOwnerFullName);\n                console.log(\"///******\");\n                console.log(\"found it\")\n                this.setState({globalUserData:userData});\n                console.log(userData.postData[j])\n                this.setState({originalPostContentForFriendList:userData.postData[j]})\n                console.log(\"///******\");\n                // this.setState({PostOwnerData:postInformation});\n                for(var i=0;i<this.state.userData.length;i++){\n                  if(this.state.userData[i].fullName==this.state.PostOwnerFullName){\n                    //console.log(this.state.userData[i])\n                    //console.log(this.state.currentUserName);\n                    this.setState({PostOwnerEmailId:this.state.userData[i].emailId})\n                    break;\n                  }\n                }\n                console.log(this.state.PostOwnerEmailId);\n            }\n            }\n            console.log(this.state.PostOwnerData);\n            // console.log(this.state.PostOwnerData.image);\n           \n            // this.setState({UserGroupIPFSData:userData})\n            // this.setState({\n            //     userData:[...this.state.userData, userData]\n            //   })\n            count++;\n            if(count==this.state.groupInformationListFromBlockChain.length){\n                console.log(\"in if\");\n                this.displayData3()\n            }\n        })\n       }\n        \n        \n        // this.setState({currentUserGroupHash:lastestGroupDetailHash.groupHash})\n        // this.setState({currentGroupKeyInformation:lastestGroupDetailHash});\n\n    }\n\n    displayData3=()=>{\n      for(var i=0;i<this.state.userInformationListFromBlockChain.length;i++){\n        console.log(this.state.userInformationListFromBlockChain[i]);\n        console.log(this.state.PostOwnerEmailId);\n        console.log(this.state.userInformationListFromBlockChain[i].userEmailId);\n        console.log(this.state.userInformationListFromBlockChain[i].userEmailId==this.state.PostOwnerEmailId);\n           if(this.state.userInformationListFromBlockChain[i].userEmailId==this.state.PostOwnerEmailId){\n             console.log(this.state.userInformationListFromBlockChain[i].userHash)\n             this.setState({postOwnerHashValue:this.state.userInformationListFromBlockChain[i].userHash})\n             console.log(\"Lets' see user hash\")\n           }\n       }\n      console.log(\"in displaydata 3\")\n      console.log(\"Checking the first conditioon\");\n      console.log(this.state.originalPostContentForFriendList);\n      ////\n      for(var i=0;i<this.state.originalPostContentForFriendList.friendList.length;i++){\n        console.log(this.state.originalPostContentForFriendList.friendList[i]);\n          if(this.state.originalPostContentForFriendList.friendList[i].name===this.state.currentUserName){\n            console.log(this.state.originalPostContentForFriendList.friendList[i].name)\n            this.setState({firstChecker:1});\n            break;\n          }\n      }\n      ///\n      this.displayData4();\n    }\n\n    displayData4=()=>{\n\n      // console.log(\"in display data 4\");\n      // console.log(this.state.globalUserData);\n      // for(var i=0;i<this.state.globalUserData.friend.length;i++){\n      //   console.log(this.state.globalUserData.friend[i].name);\n      //   if(this.state.currentUserName==this.state.globalUserData.friend[i].name){ \n      //     this.setState({secondChecker:1})\n      //     break;\n      //   }\n      // }\n      // this.displayData5();\n\n      console.log(\"adding in friend 1\");\n      console.log(this.state.currentUserName);\n      console.log(\"Current Username\");\n      console.log(this.state.currentUserEmailId);\n      console.log(this.state.groupInformationListFromBlockChain);\n      var dataArray=[];\n\n      for(var i=0;i<this.state.groupInformationListFromBlockChain.length;i++){\n        if(this.state.groupInformationListFromBlockChain[i].groupEmailId==this.state.currentUserEmailId){\n          dataArray.push(this.state.groupInformationListFromBlockChain[i]);\n        }\n      }\n\n      let myMap = new Map();\n      var max=-1;\n      for(var i=0;i<dataArray.length;i++){\n       var value=dataArray[i].groupVersion;\n       console.log(value);\n       value=value.toString();\n       myMap.set(value,dataArray[i]);\n       console.log(value);\n       if(value>max){\n         max=value;\n       }\n      }\n      console.log(\"lastest group version is\");\n      console.log(max);\n      console.log(myMap.get(max));\n      var lastestGroupDetailHash= myMap.get(max);\n      console.log(lastestGroupDetailHash);\n      \n      if(max!=(-1)){\n        var currentgroupId=lastestGroupDetailHash.groupId;\n        console.log(currentgroupId);\n  \n  \n        //\n        ipfs.get(\"/ipfs/\"+lastestGroupDetailHash.groupHash,(error,result)=>{\n          //console.log(result[0].path);\n          var content=result[0].content;\n          console.log(content);\n          var userData=JSON.parse(content);\n          console.log(userData);\n          for(var i=0;i<userData.friend.length;i++){\n            \n            if(userData.friend[i].emailId==this.state.PostOwnerEmailId){\n              this.setState({secondChecker:1})\n              break;\n            }\n          }\n          this.displayData5();\n      })\n      }\n\n    }\n\n    displayData5=()=>{\n      console.log(\"in display data 5\");\n      if(this.state.firstChecker==0 && this.state.secondChecker==0){\n        console.log(\"Post should not be shown\")\n        console.log(\"add friend\");\n        this.setState({vCondition:0});\n        this.setState({loading:false});\n      }\n      else if(this.state.firstChecker==1 && this.state.secondChecker==0){\n        console.log(\"You are friend when the post was published\");\n        console.log(\"you are not friend right now\");\n        this.setState({vCondition:1});\n      }\n      else if(this.state.firstChecker==0 && this.state.secondChecker==1){\n        console.log(\"you are able to see the post\")\n        this.setState({vCondition:1});\n      }\n      else if(this.state.firstChecker==1 && this.state.secondChecker==1){\n        console.log(\"you are able to see the post\")\n        this.setState({vCondition:1});\n      }\n      else{\n        this.setState({vCondition:0});\n        this.setState({loading:false});\n      }\n      this.displayData6();\n    }\n\n    displayData6=()=>{\n      if(this.state.vCondition==1){\n        console.log(\"get data infromation\");\n        this.displayData7();\n      }\n      else{\n\n      }\n    }\n\n    displayData7=()=>{\n     // postHash\n      ipfs.get(\"/ipfs/\"+this.state.originalPostContentForFriendList.postHash,(error,result)=>{\n        var tempContent=result[0].content;\n        console.log(tempContent);\n        var tempgroupdata=JSON.parse(tempContent);\n        var postData=tempgroupdata;\n        console.log(postData);\n        this.setState({postData:postData.postTextHash});\n        var ipfsLink=\"https://ipfs.infura.io/ipfs/\";\n        var gart=postData.postPicHash;\n        var result1=ipfsLink+gart;\n        this.setState({postImage:result1})\n        // console.log(tempgroupdata);\n        // this.setState({postUserGroupIPFSData:tempgroupdata});\n        //console.log(this.state.postUserPostIPFSData);\n        this.decryptedData2();\n\n      });\n    }\n\n    decryptedData2=()=>{\n      console.log(this.state.PostOwnerData);\n      console.log(this.state.postUserGroupIPFSData);\n      if(this.state.PostOwnerData.image=='yes'){\n        this.setState({imageData:\"yes\"});\n      }\n      else if(this.state.PostOwnerData.video=='yes'){\n        this.setState({videoData:\"yes\"});\n      }\n    //  console.log(this.state.postData.postTextHash);\n    //console.log(this.state.postData);\n    ipfs.get(\"/ipfs/\"+this.state.postData,(error,result)=>{\n      var tempContent=result[0].content;\n      var postData=JSON.parse(tempContent);\n      console.log(postData);\n      this.setState({displayData:postData});\n      ///\n      var str = this.state.PostOwnerFullName;\n      var array = str.split(\" \");\n      var array1=array[0];\n      var array2=array[1];\n      var array1=array1.substring(0,1);\n      var array2=array2.substring(0,1);\n      var final =array1+array2;\n      console.log(final);\n      //signatureText\n      this.setState({ signatureText:final});\n      this.setState({loading:false});\n    });\n    }\n  // renderData2=()=>{\n  //   ipfs.get(\"/ipfs/\"+this.state.postData,(error,result)=>{\n  //     var tempContent=result[0].content;\n  //     var postData=JSON.parse(tempContent);\n  //     console.log(postData);\n  //     this.setState({displayData:postData});\n  //     ///\n  //     var str = this.state.PostOwnerFullName;\n  //     var array = str.split(\" \");\n  //     var array1=array[0];\n  //     var array2=array[1];\n  //     var array1=array1.substring(0,1);\n  //     var array2=array2.substring(0,1);\n  //     var final =array1+array2;\n  //     console.log(final);\n  //     //signatureText\n  //     this.setState({ signatureText:final});\n  //   });\n  // }\n\n\n\n    displayData2=()=>{\n\n\n\n      var dataArray=[];\n      for(var i=0;i<this.state.groupInformationListFromBlockChain.length;i++){\n        console.log(this.state.groupInformationListFromBlockChain[i]);\n        if(this.state.groupInformationListFromBlockChain[i].groupEmailId==this.state.PostOwnerEmailId){\n          dataArray.push(this.state.groupInformationListFromBlockChain[i]);\n        }\n      }\n      console.log(dataArray);\n      let myMap = new Map();\n      var max=-1;\n      for(var i=0;i<dataArray.length;i++){\n       var value=dataArray[i].groupVersion;\n       console.log(value);\n       value=value.toString();\n       myMap.set(value,dataArray[i]);\n       console.log(value);\n       if(value>max){\n         max=value;\n       }\n      }\n      console.log(\"lastest group version is\");\n      console.log(max);\n      console.log(myMap.get(max));\n      var lastestGroupDetailHash= myMap.get(max);\n      console.log(lastestGroupDetailHash);\n\n\n\n      if(max!=-1){\n        console.log(\"in if\");\n        var groupHash=lastestGroupDetailHash.groupHash;\n        console.log(groupHash);\n        var taken=0;\n        ipfs.get(\"/ipfs/\"+groupHash,(error,result)=>{\n          console.log(error);\n          var content=result[0].content;\n           var groupData=JSON.parse(content);\n           console.log(groupData);\n          var dataArray=groupData.groupDetails\n          for(var i=0;i<dataArray.length;i++){\n            if(dataArray[i].emailId==this.state.currentUserEmailId){\n              taken=1;\n              console.log(taken);\n              this.setState({renderCondition:1});\n             // this.decryptedData();\n            }\n          }\n          console.log(this.state.originalPostContentForFriendList);\n          for(var i=0;i<this.state.originalPostContentForFriendList.friendList.length;i++){\n            console.log(this.state.originalPostContentForFriendList.friendList[i]);\n              if(this.state.originalPostContentForFriendList.friendList[i].name===this.state.currentUserName){\n                console.log(this.state.originalPostContentForFriendList.friendList[i].name)\n                this.setState({renderConditionFirst:1});\n              }\n          }\n          //this.state.postUserPostIPFSData\n          this.setState({loading:\"false\"})\n          if(taken==1){ \n            ipfs.get(\"/ipfs/\"+this.state.PostOwnerData.postHash,(error,result)=>{\n              var tempContent=result[0].content;\n              console.log(tempContent);\n              var tempgroupdata=JSON.parse(tempContent);\n              console.log(tempgroupdata);\n              this.setState({postUserGroupIPFSData:tempgroupdata});\n              //console.log(this.state.postUserPostIPFSData);\n              this.decryptedData();\n            });\n          }\n\n\n        });\n      //   ipfs.get(\"/ipfs/\"+this.state.PostOwnerData.postHash,(error,result)=>{\n      //     //console.log(result[0].path);\n      //     var content=result[0].content;\n          \n      //     var posterdata=JSON.parse(content);\n      //     console.log(posterdata);\n      //     this.setState({postUserPostIPFSData:posterdata});\n      //     var dataArray=posterdata.sessionKeyDetails;\n          \n      //     for(var i=0;i<dataArray.length;i++){\n      //       if(dataArray[i].emailId==this.state.currentUserEmailId){\n      //         taken=1;\n      //         console.log(taken);\n      //         this.setState({renderCondition:1});\n      //       }\n      //     }\n          // if(taken==1){ \n          //   ipfs.get(\"/ipfs/\"+groupHash,(error,result)=>{\n          //     var tempContent=result[0].content;\n          //     var tempgroupdata=JSON.parse(tempContent);\n          //     this.setState({postUserGroupIPFSData:tempgroupdata});\n          //     this.decryptedData();\n          //   });\n          // }\n      // })\n      }\n    }\n\n\n    checkEvent = (event) => {\n     \n      var data = event.detail;\n      console.log(data);\n      this.setState({chromeExtensionData:event});\n      console.log(\"Nv Enter:\", event);\n      console.log(this.state.chromeExtensionData);\n      }\n\n\n    decryptedData=()=>{\n      console.log(this.state.PostOwnerData);\n      if(this.state.PostOwnerData.image=='yes'){\n        this.setState({imageData:\"yes\"});\n      }\n      else if(this.state.PostOwnerData.video=='yes'){\n        this.setState({videoData:\"yes\"});\n      }\n      console.log(this.state.chromeExtensionData.detail.privateKeyData)\n      var stringPrivateKeyData=this.state.chromeExtensionData.detail.privateKeyData;\n      var jsonPrivateKeyData=JSON.parse(stringPrivateKeyData);\n      console.log(jsonPrivateKeyData);\n      var h=jsonPrivateKeyData;\n      var sequenceNumber;\n      var FinalPrivateKey;\n      console.log(jsonPrivateKeyData.no1);\n      for (var key in jsonPrivateKeyData) {\n        console.log(key);\n       \n        console.log(jsonPrivateKeyData[key])\n        console.log(this.state.currentUserName);\n        console.log(this.state.currentUserEmailId==jsonPrivateKeyData[key]);\n        if(this.state.currentUserEmailId==jsonPrivateKeyData[key]){\n          console.log(\"match found\");\n          var no=key.substring(7,key.length);\n          var privateKey=\"privateKey\";\n          var result=privateKey+no;\n          console.log(result);\n          FinalPrivateKey=jsonPrivateKeyData[result];\n          break;\n        }\n\n        // console.log(this.state.userListEmailIdSet.has(jsonPrivateKeyData[key]));\n        // if(this.state.userListEmailIdSet.has(jsonPrivateKeyData[key])){\n        //   console.log(key);\n        //   var no=key.substring(7,key.length);\n        //   sequenceNumber=no;\n        //   console.log(no);\n        // }\n      }\n      console.log(FinalPrivateKey);\n      console.log(this.state.postUserPostIPFSData);\n      console.log(this.state.postUserGroupIPFSData);\n      var temp;\n      for(var i=0;i<this.state.userInformationListFromBlockChain.length;i++){\n        if(this.state.userInformationListFromBlockChain[i].userEmailId==this.state.currentUserEmailId){\n          console.log(this.state.userInformationListFromBlockChain[i])\n          temp=this.state.userInformationListFromBlockChain[i];\n          break;\n        }\n      }\n      console.log(temp);\n      console.log(temp.publickey);\n      var gg=temp.publickey.toString();\n      console.log(gg);\n      \n      //var ciphertext = CryptoJS.AES.encrypt(groupKey,FinalPrivateKey).toString();\n      //console.log(ciphertext);\n      // console.log(this.state.postUserGroupIPFSData.commonGroupKey);\n      // var groupKey =this.state.postUserGroupIPFSData.commonGroupKey.toString();\n      //  var bytes  = CryptoJS.AES.decrypt(groupKey,gg);\n      //  console.log(bytes);\n      //  var originalText = bytes.toString(CryptoJS.enc.Utf8);\n     \n      //  console.log(originalText );\n      //  console.log(\"end\");\n      \n      // console.log(\"-----------------------\");\n      console.log(this.state.postUserGroupIPFSData);\n       var tempPostHash=this.state.postUserPostIPFSData.postHash;\n       console.log(tempPostHash);\n\n      console.log(this.state.postUserGroupIPFSData);\n     for(var i=0;i<this.state.userInformationListFromBlockChain.length;i++){\n      console.log(this.state.userInformationListFromBlockChain[i].use);\n\n        if(this.state.userInformationListFromBlockChain[i].userEmailId==this.state.PostOwnerEmailId){\n          this.setState({PostOwnerPublicKey:this.state.userInformationListFromBlockChain[i].publickey})\n        }\n     }\n     console.log(this.state.PostOwnerPublicKey);\n     const cryptr = new Cryptr(this.state.PostOwnerPublicKey);\n\n     console.log(this.state.postUserGroupIPFSData.digitalSignature)\n     //const decryptedString = cryptr.decrypt(this.state.postUserGroupIPFSData.digitalSignature);\n    //  const decryptedString = cryptr.decrypt(this.state.postUserGroupIPFSData.digitalSignature);\n    // console.log(decryptedString);\n\n      ipfs.get(\"/ipfs/\"+this.state.PostOwnerData.postHash,(error,result)=>{\n        var tempContent=result[0].content;\n        var postData=JSON.parse(tempContent);\n        console.log(postData);\n        this.setState({postData:postData.postTextHash});\n        var ipfsLink=\"https://ipfs.infura.io/ipfs/\";\n        var gart=postData.postPicHash;\n        var result1=ipfsLink+gart;\n        this.setState({postImage:result1})\n        this.renderData()\n      });\n\n\n    }\n    renderData=()=>{\n     \n      ipfs.get(\"/ipfs/\"+this.state.postData,(error,result)=>{\n        var tempContent=result[0].content;\n        var postData=JSON.parse(tempContent);\n        console.log(postData);\n        this.setState({displayData:postData});\n        ///\n        var str = this.state.PostOwnerFullName;\n        var array = str.split(\" \");\n        var array1=array[0];\n        var array2=array[1];\n        var array1=array1.substring(0,1);\n        var array2=array2.substring(0,1);\n        var final =array1+array2;\n        console.log(final);\n        //signatureText\n        this.setState({ signatureText:final});\n      });\n    }\n\n\n    async  loadData(){\n        console.log(\"in load data\");\n        var url =window.location.href;\n        var secondUrl=url.substring(48,url.length);\n        console.log(secondUrl);\n        var secondUr=url.substring(48,url.length);\n        var firstHalfName=url.substring(30,45);\n        console.log(firstHalfName);\n        var dataToParse= url.substring(30,url.length);\n        console.log(dataToParse);\n        this.setState({dataToParse:dataToParse})\n    }\n\n      async loadWeb3(){\n        if(window.ethereum){\n          window.web3 = new Web3(window.ethereum);\n          await window.ethereum.enable();\n        }\n        if(window.web3){\n          window.web3 = new Web3(window.web3.currentProvider);\n        }\n        else{\n          window.alert(\"Use Metamask\");\n        } \n      }\n\n      async loadBlockChainData(){\n        const web3_2 = window.web3;\n        const accounts =  await web3_2.eth.getAccounts();\n        this.setState({account:accounts[0]});\n        const networkId = await web3_2.eth.net.getId();\n        const networkdata= Meme.networks[networkId];\n        if(networkdata){\n          const abi =Meme.abi;\n          const address = networkdata.address;\n          //fetch the contract \n          const contract = web3_2.eth.Contract(abi,address);\n          console.log(contract);\n          this.setState({contract:contract});\n          console.log(contract.methods);\n        //  const MemeHash =await contract.methods.get().call();\n          this.state.userListEmailIdSet=new Set();\n        var tt= await this.state.contract.methods.userCount().call();\n        var userCount=await tt;\n        for(var i=1;i<=userCount;i++){\n          const userInformationListFromBlockChain= await this.state.contract.methods.userInformation(i).call();\n          this.state.userListEmailIdSet.add(userInformationListFromBlockChain.userEmailId);  \n          this.setState({\n            userInformationListFromBlockChain:[...this.state.userInformationListFromBlockChain, userInformationListFromBlockChain]\n          })\n        }\n        console.log(this.state.userInformationListFromBlockChain);\n\n        // ipfs.get(\"/ipfs/\"+t,(error,result)=>{\n        //     console.log(result[0].path);\n        //     content=result[0].content;\n        //   })\n\n\n         tt= await this.state.contract.methods.groupCount().call();\n          var groupCount=await tt;\n          groupCount=groupCount.toString();\n          console.log(\"group Count\");\n          console.log(groupCount);\n          for(var i=1;i<=groupCount;i++){\n            const groupInformationListFromBlockChain= await this.state.contract.methods.groupInformation(i).call();\n            console.log(groupInformationListFromBlockChain)\n              this.setState({\n                groupInformationListFromBlockChain:[...this.state.groupInformationListFromBlockChain, groupInformationListFromBlockChain]\n             })\n          }\n          tt= await this.state.contract.methods.postCount().call();\n          var postCount=await tt;\n          for(var i=1;i<=postCount;i++){\n            const postInformation= await this.state.contract.methods.postInformation(i).call();\n            console.log(postInformation);\n            if(this.state.dataToParse.includes(postInformation.uuid)){\n                this.setState({PostOwnerEmailId:postInformation.postedEmailId})\n                this.setState({PostOwnerData:postInformation});\n            }\n            this.setState({\n                postInformation:[...this.state.postInformation,  postInformation]\n            })\n          }\n        \n          \n          var count=0;\n        for(var i=0;i<this.state.userInformationListFromBlockChain.length;i++){\n\n            var userHash = this.state.userInformationListFromBlockChain[i].userHash;\n            console.log(userHash);\n                    ipfs.get(\"/ipfs/\"+userHash,(error,result)=>{\n\n                    //console.log(result[0].path);\n                    var content=result[0].content;\n                    console.log(content);\n                    var userData=JSON.parse(content);\n                    this.setState({\n                        userData:[...this.state.userData, userData]\n                      })\n                    count++;\n                    if(count==this.state.userInformationListFromBlockChain.length){\n                        console.log(\"in if\");\n                        this.displayData()\n                    }\n                })\n              \n        }\n\n\n        }\n        else{\n          window.alert(\"Smart contract not deployed to detected the network\");\n        }\n      }\n      addFriend=()=>{\n        console.log(\"on button Click\");        \n        console.log(\"inside open\");\n        console.log(this.state.userInformationListFromBlockChain);\n        console.log(\"(((()))\");\n        console.log(this.state.groupInformationListFromBlockChain);\n       // this.GetInformation1();\n        this.CheckValue();\n       //this.friend1();\n        //this.friend2();\n         \n      }\n\n      GetInformation1=()=>{\n        console.log(\"Hello Inside the function\");\n        this.CheckValue();\n      }\n      pausecomp=(millis)=>{\n        console.log(\"in checking time\");\n        var date = new Date();\n        var curDate = null;\n        do { curDate = new Date(); }\n        while(curDate-date < millis);\n        alert(\"Hello\");\n        this.CheckValue();\n\n       }\n    \n      CheckValue=()=>{\n        console.log(this.state.postOwnerHashValue);\n\n        ipfs.get(\"/ipfs/\"+this.state.postOwnerHashValue,(error,result)=>{\n          //console.log(result[0].path);\n          var content=result[0].content;\n          console.log(content);\n          var userData=JSON.parse(content);\n          console.log(userData);\n          this.setState({postOwnerProfilePic:userData.profilePicHash})\n          this.CheckValue2();\n      })\n        console.log(this.state.currentUserValue)\n      }\n      \n      CheckValue2=()=>{\n        ipfs.get(\"/ipfs/\"+this.state.currentUserValue,(error,result)=>{\n          //console.log(result[0].path);\n          var content=result[0].content;\n          console.log(content);\n          var userData=JSON.parse(content);\n          console.log(userData);\n          this.setState({currentUserProfilePic:userData.profilePicHash})\n          this.friend1();\n          //this.friend2();\n          console.log(this.state.postOwnerProfilePic);\n          console.log(this.state.currentUserProfilePic);\n      })\n      }\n\n      friend1=()=>{\n        console.log(\"adding in friend 1\");\n        console.log(this.state.currentUserName);\n        console.log(\"Current Username\");\n        console.log(this.state.currentUserEmailId);\n        console.log(this.state.groupInformationListFromBlockChain);\n        var dataArray=[];\n\n        for(var i=0;i<this.state.groupInformationListFromBlockChain.length;i++){\n          if(this.state.groupInformationListFromBlockChain[i].groupEmailId==this.state.currentUserEmailId){\n            dataArray.push(this.state.groupInformationListFromBlockChain[i]);\n          }\n        }\n  \n        let myMap = new Map();\n        var max=-1;\n        for(var i=0;i<dataArray.length;i++){\n         var value=dataArray[i].groupVersion;\n         console.log(value);\n         value=value.toString();\n         myMap.set(value,dataArray[i]);\n         console.log(value);\n         if(value>max){\n           max=value;\n         }\n        }\n\n\n\n\n        console.log(\"lastest group version is\");\n        console.log(max);\n        console.log(myMap.get(max));\n        var lastestGroupDetailHash= myMap.get(max);\n        console.log(lastestGroupDetailHash);\n        ///\n        var currentgroupId=lastestGroupDetailHash.groupId;\n        console.log(currentgroupId);\n        this.setState({currentUserLastestGroupId:currentgroupId});\n        console.log(this.state.postOwnerProfilePic);\n\n        var userObj={\n          name:this.state.currentUserName,\n          emailId:this.state.currentUserEmailId,\n          profilePicHash:this.state.currentUserProfilePic,\n          userId:currentgroupId\n        }\n        this.setState({currentUserObj:userObj});\n        console.log(userObj);\n\n        //\n        ipfs.get(\"/ipfs/\"+lastestGroupDetailHash.groupHash,(error,result)=>{\n          //console.log(result[0].path);\n          var content=result[0].content;\n          console.log(content);\n          var userData=JSON.parse(content);\n          console.log(userData);\n          this.setState({currentUserFinalData:userData});\n          this.friend2();\n      })\n      }\n\n\n      friend2=()=>{\n        console.log(\"adding in friend 2\"); \n        console.log(this.state.PostOwnerFullName);\n        var dataArray=[];\n        //\n        for(var i=0;i<this.state.groupInformationListFromBlockChain.length;i++){\n          if(this.state.groupInformationListFromBlockChain[i].groupEmailId==this.state.PostOwnerEmailId){\n            dataArray.push(this.state.groupInformationListFromBlockChain[i]);\n          }\n        }\n  \n        let myMap = new Map();\n        var max=-1;\n        for(var i=0;i<dataArray.length;i++){\n         var value=dataArray[i].groupVersion;\n         console.log(value);\n         value=value.toString();\n         myMap.set(value,dataArray[i]);\n         console.log(value);\n         if(value>max){\n           max=value;\n         }\n        }\n        console.log(\"lastest group version is\");\n        console.log(max);\n        console.log(myMap.get(max));\n        var lastestGroupDetailHash= myMap.get(max);\n        console.log(lastestGroupDetailHash);\n        var currentgroupId=lastestGroupDetailHash.groupId;\n        console.log(currentgroupId);\n\n        this.setState({postOwnerLastestGroupId:currentgroupId});\n\n        ///\n        var userObj={\n          name:this.state.PostOwnerFullName,\n          emailId:this.state.PostOwnerEmailId,\n          profilePicHash:this.state.postOwnerProfilePic,\n          userId:currentgroupId,\n          userHash:this.state.postOwnerHashValue\n        }\n        this.setState({postUserObj:userObj});\n        console.log(userObj);\n        ipfs.get(\"/ipfs/\"+lastestGroupDetailHash.groupHash,(error,result)=>{\n          //console.log(result[0].path);\n          var content=result[0].content;\n          console.log(content);\n          var userData=JSON.parse(content);\n          console.log(userData);\n          this.setState({postUserFinalData:userData});\n          this.lastFunction();\n      })\n      \n      }\n\n      lastFunction=()=>{\n        console.log(this.state.postUserObj);\n        console.log(this.state.currentUserObj);\n        console.log(this.state.currentUserFinalData);\n        \n        console.log(this.state.postUserFinalData);\n        this.state.currentUserFinalData.request.push(this.state.postUserObj);\n        this.state.postUserFinalData.requestNotAccepted.push(this.state.currentUserObj);\n\n        console.log(this.state.currentUserFinalData);\n        console.log(this.state.postUserFinalData);\n\n        var originalContentString = Buffer.from(JSON.stringify(this.state.postUserFinalData));\n        console.log(this.state.postOwnerLastestGroupId.toString());\n        // The json is change to string format \n        let userContent= {\n          content:originalContentString\n      }\n      ///\n      ipfs.add(userContent,(error,results)=>{\n\n        var groupHashAddress=results[0].hash;\n        console.log(groupHashAddress);\n        //string memory _postedByEmailId,string memory _postHash, uint _uniquePostId ,string memory _currentDateAndTime\n      this.state.contract.methods.changeGroupInformation(this.state.postOwnerLastestGroupId.toString(),groupHashAddress).send({from: this.state.account}).then((r)=>{\n        console.log(r);\n      });\n    \n    });\n\n/////\nconsole.log(this.state.currentUserLastestGroupId.toString())\n\noriginalContentString = Buffer.from(JSON.stringify(this.state.currentUserFinalData));\nconsole.log(this.state.postOwnerLastestGroupId);\n// The json is change to string format \n userContent= {\n  content:originalContentString\n}\n///\nipfs.add(userContent,(error,results)=>{\n\nvar groupHashAddress=results[0].hash;\nconsole.log(groupHashAddress);\n//string memory _postedByEmailId,string memory _postHash, uint _uniquePostId ,string memory _currentDateAndTime\nthis.state.contract.methods.changeGroupInformation(this.state.currentUserLastestGroupId.toString(),groupHashAddress).send({from: this.state.account}).then((r)=>{\nconsole.log(r);\n});\n\n});\n\n\n    }\n\n\n      render(){\n        var cardStyle2={\n        \n          padding:\"10px 10px 10px 10px\",\n          display:\"flex\",\n          flexDirection:\"column\",\n          alignItems:\"center\",\n          textAlign:\"center\"\n         // width:\"1000px \n      }\n      var cardStyle={\n      \n          padding:\"10px 10px 10px 10px\",\n          display:\"flex\",\n          flexDirection:\"column\",\n          alignItems:\"center\",\n         // width:\"1000px \n      }\n      var addPost= {\n          float: \"right\",\n          background: \"#365899\",\n          border: \"none\",\n          color: \"#fff\",\n          fontWeight: \"bold\",\n          //padding: \"10px 15px\",\n          //borderRadius: \"6px\"\n        }\n        var username= {\n          margin:\"15px 0\",\n          padding:\"15px 10px\",\n          width:\"100%\",\n          outline:\"none\",\n          border:\"1px solid #bbb\",\n          borderRadius:\"20px\",\n          display:\"inline-block\",\n          fontSize:\"20px\"\n          \n        }\n      var card={\n        boxShadow:\"0px 0px 0.5px rgba(10,10,10,.3)\",\n        alignItems:\"center\",\n        position:\"relative\",\n        userSelect:\"none\",\n        overflow:\"hidden\",\n        transition:\"all .5s ease\",\n        padding:\"10px\",\n        width:\"1200px\",\n        height:\"100%\",\n        maxWidth:\"100%\",\n        backgroundColor:\"white\",\n        marginBottom:\"10px\",\n        fontSize:\"14px\",\n        borderRadius:\"3px\",\n        borderStyle: \"solid\",\n        borderColor: \"#365899\"\n      }\n      var card2={\n          boxShadow:\"0px 0px 0.5px rgba(10,10,10,.3)\",\n          alignItems:\"center\",\n          position:\"relative\",\n          userSelect:\"none\",\n          overflow:\"hidden\",\n          transition:\"all .5s ease\",\n          padding:\"10px\",\n          width:\"950px\",\n          height:\"280px\",\n          maxWidth:\"100%\",\n          backgroundColor:\"white\",\n          marginBottom:\"10px\",\n          fontSize:\"14px\",\n          borderRadius:\"3px\",\n        }\n        var info={\n          display:\"flex\",\n          alignItems:\"center\",\n          height:\"40px\"\n        }\n        var photo={\n          height:\"40px\",\n          width:\"40px\",\n          backgroundColor:\"gray\",\n          opacity:\".8\",\n          borderRadius:\"100%\"\n        }\n      \n        var name={\n          \n            fontWeight:\"bold\",\n            color:\"rgb(66, 103, 178)\",\n            opacity:\".9\",\n            paddingLeft:\"20px\",\n        }\n\n\n        const mystyle = {\n          textAlign: \"center\",\n          font: \"inherit\",\n          border: \"2px solid #365899\",\n          padding: \"13px 12px\",\n          fontSize: \"15px\",\n          boxShadow: \"0 1px 1px #DDD\",\n          width: \" 700px\",\n          outline: \"none\",\n          display: \"block\",\n          color: \"#788585\",\n          margin: \"0 auto 20px\",\n          height:\"50px\"\n          // color: \"white\",\n          // backgroundColor: \"DodgerBlue\",\n          // padding: \"10px\",\n          // fontFamily: \"Arial\",\n          // cursor: \"pointer\"\n         \n        };\n        const ReactHeading= {\n        // {textAlign: \"center\",\n        //  padding: \"50px\",\n        // textTransform: \"uppercase\",\n         //color: \"DodgerBlue\",\n        //  color:\"#365899\",\n        fontSize: \"25px\",\n        textTransform: \"uppercase\",\n       \n        textAlign: \"center\",\n        marginBottom: \"15px\",\n        paddingBottom:\"20px\",\n        fontFamily:\"RalewayBold,Arial,sans-serif\"\n      }\n      const cardBorder={\n        padding: \"10px\",\n        margin:\"10px\",\n        border: \"2px solid #365899\",\n        \n        }\n        \n        var bottomRight ={\n          position: \"absolute\",\n          \n          marginTop:\"234px\",\n          right: \"4px\",\n          display:\"inline-block\",\n\t        zIndex: \"100\"\n        }\n        var tagLine={\n          fontSize: \"20px\"\n        }\n        var signature ={\n            marginLeft:\"623px\",\n            fontFamily: \"cursive\",\n            fontSize: \"20px\",\n            color: \"#00664b\"\n        }\n        let imageStyle={\n          position: \"relative\",\n          maxWidth: \"800px\",\n          margin: \"0 auto\",\n          cursor: \"none\"\n    }\n    let text={\n      position: \"absolute\",\n      bottom: \"0\",\n      background: \"rgb(0, 0, 0)\",\n      background: \"rgba(0, 0, 0, 0.5\",\n      color: \"#f1f1f1\", \n     // width: \"100%\" ,\n      padding: \"9px\",\n      marginLeft:\"720px\",\n      border: \"3px solid #a6a6a6\",\n      // borderRadius: \"20px\"\n      fontFamily: \"cursive\",\n      textShadow: \"2px 2px 4px #000000\",\n      fontSize: \"19px\",\n      pointerEvents : \"none\"\n    }\n    let border={\n      border: \"5px solid rgb(54, 88, 153)\",\n      marginLeft:\"300px\",\n      marginRight:\"300px\",\n      paddingBottom:\"50px\",\n      paddingTop:\"30px\"\n    }\n\n\n\nconst renderAuthButton2 =()=>{\n\n  if(this.state.loading==\"true\"){\n    console.log(\"in true if\")\n    return(\n      <div  style={{textAlign:\"center\"}}>\n        Loading.....\n      </div>\n    )\n  }\n  else{\n    if(this.state.vCondition==0){\n      return(\n        <div>\n                  <div className=\"container\">\n              <div className=\"text-center \">\n                  <h4 style={name}>You are not a friend when the post was publish</h4>\n                <hr></hr>\n                <div style={border}>\n                <div  style={cardStyle}>\n                \n                  <div style={info}>\n                      <img style={photo} src='https://www.gstatic.com/tv/thumb/persons/509114/509114_v9_ba.jpg' ></img>\n                      <div style={name}><h4> {this.state.PostOwnerFullName}</h4></div>\n                    </div>\n                    <h4>Want to see the post add {this.state.PostOwnerFullName} </h4>\n                    <Button variant=\"primary\"  onClick={this.addFriend} >Add Friend</Button>\n                    {/* <button type=\"button\"  onClick={this.addFriend()}   >Click Me!</button> */}\n                  </div>\n                </div>\n              </div>       \n            </div>\n        </div>\n      )\n    }\n    else if(this.state.vCondition==1){\n      if(this.state.imageData==\"yes\"){\n        return(\n    \n    //       <div className=\"row\">\n    //       <div className=\"col-2\">\n    //           Hello World\n    //        </div>\n    //        <div className=\"col-8\">In second div\n    //         <div style={cardStyle}>\n    //             <div style={card} expand=\"false\">\n    //                <div style={info}>\n    //                <img style={photo} src='https://www.gstatic.com/tv/thumb/persons/509114/509114_v9_ba.jpg' ></img>\n    //                    <div style={name}><h4> {this.state.PostOwnerFullName}</h4></div>\n    //                    <h3></h3>\n    //                </div>\n    //                <br></br>\n                  \n    //               <p style={{fontSize:\"19px\",paddingLeft:\"7px\" }}>{this.state.displayData} <span>{this.state.signatureText}</span></p>\n    //                <hr></hr>\n                  \n    //                    <br></br>\n                     \n    //                <img src={this.state.postImage}  style={{height: \"100%\",  width:\"700px\",marginLeft:\"150px\" }}/>\n    //                <p style={bottomRight}>Bottom Right</p>\n                \n                   \n    //             </div>\n    //        </div> \n    //        </div>\n    //        <div  className=\"col-2\">\n    //            In third div\n    //        </div>\n    // </div>  \n    \n    <div>\n    {/* <h2>In About Component</h2> */}\n    <div style={border}>\n    <div className=\"container\">\n    <div style={info}>\n    <img style={photo} src='https://www.gstatic.com/tv/thumb/persons/509114/509114_v9_ba.jpg' ></img>\n     <div style={name}><h4> {this.state.PostOwnerFullName}</h4></div>\n    \n    </div>\n    <hr></hr>\n    <p style={tagLine}>\n    {this.state.displayData}\n     <span style={signature}>{this.state.signatureText}</span>\n    </p>\n    <hr style={{width:\"40px\",textAlign:\"left\",marginLeft:\"730px\",marginTop:\"-15px\",  position:\"relative\",borderTop: \"7px solid\" }}></hr> \n    </div>\n    \n    <div className=\"container\" style={imageStyle}>\n    <img src={this.state.postImage} style={{height:'700px', width:\"100%\"}} alt=\"Notebook\" />\n    <div style={text}>\n        <p>{this.state.signatureText}</p>\n    </div>\n    </div>\n    </div>\n    </div>\n    \n    \n        )\n      }\n      else if(this.state.videoData==\"yes\"){\n        return(\n    \n                   \n                  \n          //\n          <div className=\"row\">\n          <div className=\"col-2\">\n              video Player\n           </div>\n           <div className=\"col-8\">In second div\n            <div style={cardStyle}>\n                <div style={card} expand=\"false\">\n                   <div style={info}>\n                   <img style={photo} src='https://www.gstatic.com/tv/thumb/persons/509114/509114_v9_ba.jpg' ></img>\n                       <div style={name}><h4> {this.state.PostOwnerFullName}</h4></div>\n                       <h3></h3>\n                   </div>\n                   <br></br>\n                  \n                  {/* <p style={{fontSize:\"19px\",paddingLeft:\"7px\" }}>{this.state.displayData} <span>{this.state.signatureText}</span></p> */}\n                  <p style={tagLine}>\n    {this.state.displayData}\n     <span style={signature}>{this.state.signatureText}</span>\n    </p>\n    <hr style={{width:\"40px\",textAlign:\"left\",marginLeft:\"730px\",marginTop:\"-15px\",  position:\"relative\",borderTop: \"7px solid\" }}></hr> \n                   <hr></hr>\n                  \n                       <br></br>\n                   {/* <img src={this.state.postImage}  style={{height: \"100%\",  width:\"700px\",marginLeft:\"150px\" }}></img> */}\n                   <div style={{height: \"100%\",  width:\"700px\",marginLeft:\"150px\" }}>\n                   <Player\n                        playsInline\n                        poster=\"/assets/poster.png\"\n                        src=\"https://ipfs.infura.io/ipfs/QmTJcgraP6MR8gamSVgjyDWKeR2naRVzMNmaZnZ7PKQNxY\"\n                        />\n                   </div>\n                 \n                   <div class=\"bottomRight\">Bottom Right</div>\n                   <hr></hr>\n                   \n                </div>\n           </div> \n           </div>\n           <div  className=\"col-2\">\n               In third div\n           </div>\n    </div> \n    \n          //\n          \n        )\n      }\n      \n    }\n  }\n}\n\n\n\n  const renderAuthButton = ()=>{\n\n\n\n   if(this.state.loading==\"true\"){\n      console.log(\"in true if\")\n      return(\n        <div  style={{textAlign:\"center\"}}>\n          Loading.....\n        </div>\n      )\n    }\nelse{\n  console.log(\"%%%%%%%%%\")\n  console.log(\"in else\");\n  console.log(\"%%%%%%%%%\")\n  console.log(\"in true else if\")\n\n  if(this.state.renderConditionFirst==1){\n    /////\n    console.log(this.state.imageData);\n  console.log(this.state.videoData);\n  console.log(\"in true else if /////////////\");\n  if(this.state.imageData==\"yes\"){\n    return(\n\n//       <div className=\"row\">\n//       <div className=\"col-2\">\n//           Hello World\n//        </div>\n//        <div className=\"col-8\">In second div\n//         <div style={cardStyle}>\n//             <div style={card} expand=\"false\">\n//                <div style={info}>\n//                <img style={photo} src='https://www.gstatic.com/tv/thumb/persons/509114/509114_v9_ba.jpg' ></img>\n//                    <div style={name}><h4> {this.state.PostOwnerFullName}</h4></div>\n//                    <h3></h3>\n//                </div>\n//                <br></br>\n              \n//               <p style={{fontSize:\"19px\",paddingLeft:\"7px\" }}>{this.state.displayData} <span>{this.state.signatureText}</span></p>\n//                <hr></hr>\n              \n//                    <br></br>\n                 \n//                <img src={this.state.postImage}  style={{height: \"100%\",  width:\"700px\",marginLeft:\"150px\" }}/>\n//                <p style={bottomRight}>Bottom Right</p>\n            \n               \n//             </div>\n//        </div> \n//        </div>\n//        <div  className=\"col-2\">\n//            In third div\n//        </div>\n// </div>  \n\n<div>\n{/* <h2>In About Component</h2> */}\n<div style={border}>\n<div className=\"container\">\n<div style={info}>\n<img style={photo} src='https://www.gstatic.com/tv/thumb/persons/509114/509114_v9_ba.jpg' ></img>\n <div style={name}><h4> {this.state.PostOwnerFullName}</h4></div>\n\n</div>\n<hr></hr>\n<p style={tagLine}>\n{this.state.displayData}\n <span style={signature}>{this.state.signatureText}</span>\n</p>\n<hr style={{width:\"40px\",textAlign:\"left\",marginLeft:\"730px\",marginTop:\"-15px\",  position:\"relative\",borderTop: \"7px solid\" }}></hr> \n</div>\n\n<div className=\"container\" style={imageStyle}>\n<img src={this.state.postImage} style={{height:'700px', width:\"100%\"}} alt=\"Notebook\" />\n<div style={text}>\n    <p>{this.state.signatureText}</p>\n</div>\n</div>\n</div>\n</div>\n\n\n    )\n  }\n  else if(this.state.videoData==\"yes\"){\n    return(\n\n               \n              \n      //\n      <div className=\"row\">\n      <div className=\"col-2\">\n          video Player\n       </div>\n       <div className=\"col-8\">In second div\n        <div style={cardStyle}>\n            <div style={card} expand=\"false\">\n               <div style={info}>\n               <img style={photo} src='https://www.gstatic.com/tv/thumb/persons/509114/509114_v9_ba.jpg' ></img>\n                   <div style={name}><h4> {this.state.PostOwnerFullName}</h4></div>\n                   <h3></h3>\n               </div>\n               <br></br>\n              \n              {/* <p style={{fontSize:\"19px\",paddingLeft:\"7px\" }}>{this.state.displayData} <span>{this.state.signatureText}</span></p> */}\n              <p style={tagLine}>\n{this.state.displayData}\n <span style={signature}>{this.state.signatureText}</span>\n</p>\n<hr style={{width:\"40px\",textAlign:\"left\",marginLeft:\"730px\",marginTop:\"-15px\",  position:\"relative\",borderTop: \"7px solid\" }}></hr> \n               <hr></hr>\n              \n                   <br></br>\n               {/* <img src={this.state.postImage}  style={{height: \"100%\",  width:\"700px\",marginLeft:\"150px\" }}></img> */}\n               <div style={{height: \"100%\",  width:\"700px\",marginLeft:\"150px\" }}>\n               <Player\n                    playsInline\n                    poster=\"/assets/poster.png\"\n                    src=\"https://ipfs.infura.io/ipfs/QmTJcgraP6MR8gamSVgjyDWKeR2naRVzMNmaZnZ7PKQNxY\"\n                    />\n               </div>\n             \n               <div class=\"bottomRight\">Bottom Right</div>\n               <hr></hr>\n               \n            </div>\n       </div> \n       </div>\n       <div  className=\"col-2\">\n           In third div\n       </div>\n</div> \n\n      //\n      \n    )\n  }\n  else{\n    return(\n      <div>\n                <div className=\"container\">\n            <div className=\"text-center \">\n                <h4 style={name}>You are not a friend when the post was publish</h4>\n              <hr></hr>\n              <div style={border}>\n              <div  style={cardStyle}>\n              \n                <div style={info}>\n                    <img style={photo} src='https://www.gstatic.com/tv/thumb/persons/509114/509114_v9_ba.jpg' ></img>\n                    <div style={name}><h4> {this.state.PostOwnerFullName}</h4></div>\n                  </div>\n                  <h4>Want to see the post add {this.state.PostOwnerFullName} </h4>\n                  <Button variant=\"primary\"  onClick={this.addFriend} >Add Friend</Button>\n                  {/* <Button variant=\"primary\"  onClick={this.CheckValue} >Add Friend2</Button> */}\n                  {/* <button type=\"button\"  onClick={this.addFriend()}   >Click Me!</button> */}\n                </div>\n              </div>\n            </div>       \n          </div>\n      </div>\n    )\n  }\n\n\n    ////\n  }\n//////////////\nelse if(this.state.renderCondition==1){\n  /////\n  console.log(this.state.imageData);\nconsole.log(this.state.videoData);\nconsole.log(\"in true else if 2/////////////\");\nif(this.state.imageData==\"yes\"){\n  return(\n\n//       <div className=\"row\">\n//       <div className=\"col-2\">\n//           Hello World\n//        </div>\n//        <div className=\"col-8\">In second div\n//         <div style={cardStyle}>\n//             <div style={card} expand=\"false\">\n//                <div style={info}>\n//                <img style={photo} src='https://www.gstatic.com/tv/thumb/persons/509114/509114_v9_ba.jpg' ></img>\n//                    <div style={name}><h4> {this.state.PostOwnerFullName}</h4></div>\n//                    <h3></h3>\n//                </div>\n//                <br></br>\n            \n//               <p style={{fontSize:\"19px\",paddingLeft:\"7px\" }}>{this.state.displayData} <span>{this.state.signatureText}</span></p>\n//                <hr></hr>\n            \n//                    <br></br>\n               \n//                <img src={this.state.postImage}  style={{height: \"100%\",  width:\"700px\",marginLeft:\"150px\" }}/>\n//                <p style={bottomRight}>Bottom Right</p>\n          \n             \n//             </div>\n//        </div> \n//        </div>\n//        <div  className=\"col-2\">\n//            In third div\n//        </div>\n// </div>  \n\n<div>\n{/* <h2>In About Component</h2> */}\n<div style={border}>\n<div className=\"container\">\n<div style={info}>\n<img style={photo} src='https://www.gstatic.com/tv/thumb/persons/509114/509114_v9_ba.jpg' ></img>\n<div style={name}><h4> {this.state.PostOwnerFullName}</h4></div>\n\n</div>\n<hr></hr>\n<p style={tagLine}>\n{this.state.displayData}\n<span style={signature}>{this.state.signatureText}</span>\n</p>\n<hr style={{width:\"40px\",textAlign:\"left\",marginLeft:\"730px\",marginTop:\"-15px\",  position:\"relative\",borderTop: \"7px solid\" }}></hr> \n</div>\n\n<div className=\"container\" style={imageStyle}>\n<img src={this.state.postImage} style={{height:'700px', width:\"100%\"}} alt=\"Notebook\" />\n<div style={text}>\n  <p>{this.state.signatureText}</p>\n</div>\n</div>\n</div>\n</div>\n\n\n  )\n}\nelse if(this.state.videoData==\"yes\"){\n  return(\n\n             \n            \n    //\n    <div className=\"row\">\n    <div className=\"col-2\">\n        video Player\n     </div>\n     <div className=\"col-8\">In second div\n      <div style={cardStyle}>\n          <div style={card} expand=\"false\">\n             <div style={info}>\n             <img style={photo} src='https://www.gstatic.com/tv/thumb/persons/509114/509114_v9_ba.jpg' ></img>\n                 <div style={name}><h4> {this.state.PostOwnerFullName}</h4></div>\n                 <h3></h3>\n             </div>\n             <br></br>\n            \n            {/* <p style={{fontSize:\"19px\",paddingLeft:\"7px\" }}>{this.state.displayData} <span>{this.state.signatureText}</span></p> */}\n            <p style={tagLine}>\n{this.state.displayData}\n<span style={signature}>{this.state.signatureText}</span>\n</p>\n<hr style={{width:\"40px\",textAlign:\"left\",marginLeft:\"730px\",marginTop:\"-15px\",  position:\"relative\",borderTop: \"7px solid\" }}></hr> \n             <hr></hr>\n            \n                 <br></br>\n             {/* <img src={this.state.postImage}  style={{height: \"100%\",  width:\"700px\",marginLeft:\"150px\" }}></img> */}\n             <div style={{height: \"100%\",  width:\"700px\",marginLeft:\"150px\" }}>\n             <Player\n                  playsInline\n                  poster=\"/assets/poster.png\"\n                  src=\"https://ipfs.infura.io/ipfs/QmTJcgraP6MR8gamSVgjyDWKeR2naRVzMNmaZnZ7PKQNxY\"\n                  />\n             </div>\n           \n             <div class=\"bottomRight\">Bottom Right</div>\n             <hr></hr>\n             \n          </div>\n     </div> \n     </div>\n     <div  className=\"col-2\">\n         In third div\n     </div>\n</div> \n\n    //\n    \n  )\n}\n\n\n  ////\n}\n\n\n///////////////\n  else{\n    return (\n      <div>\n        <div className=\"container\">\n            <div className=\"text-center \">\n                <h4 style={name}>You are not a friend when the post was publish</h4>\n              <hr></hr>\n              <div style={border}>\n              <div  style={cardStyle}>\n              \n                <div style={info}>\n                    <img style={photo} src='https://www.gstatic.com/tv/thumb/persons/509114/509114_v9_ba.jpg' ></img>\n                    <div style={name}><h4> {this.state.PostOwnerFullName}</h4></div>\n                  </div>\n                  <h4>Want to see the post add {this.state.PostOwnerFullName} </h4>\n                  <Button variant=\"primary\" onClick={this.addFriend} >Add Friend</Button>\n                  {/* <button type=\"button\"  onClick={this.addFriend()}   >Click Me!</button> */}\n                \n                </div>\n              </div>\n            </div>       \n          </div>\n\n      {/* <div style={cardStyle}>\n            <div style={card} expand=\"false\">\n               <div style={info}>\n               <img style={photo} src='https://www.gstatic.com/tv/thumb/persons/509114/509114_v9_ba.jpg' ></img>\n                   <div style={name}><h4> {this.state.PostOwnerFullName}</h4></div>\n               </div>\n               <br></br>\n              \n            <p style={{fontSize:\"19px\",paddingLeft:\"7px\" }}>{this.state.displayData}</p>\n               <hr></hr>\n                   <br></br>\n               <img src={this.state.postImage}  style={{height: \"100%\",  width:\"900px\",marginLeft:\"200px\" }}></img>\n               <hr></hr>\n               \n            </div>\n       </div>  */}\n\n         </div>\n    )\n  }\n\n}\n\n  }\n  console.log(this.state.viewPostPersonfullName);\n  console.log(this.state.PostOwnerFullName)\nconst viewName=()=>{\n  if(this.state.currentUserName==''){\n    return(\n      <div>\n        {/* <h2 style={ReactHeading}>Hello {this.state.currentUserName}</h2> */}\n        <h2 style={ReactHeading}>You Are not register on the app</h2>\n      </div>\n    )\n  }\n  else{\n    return (\n      <h2 style={ReactHeading}>{this.state.currentUserName}</h2>\n    )\n  }\n}\n\n\n\n\n        return(\n          \n            <div>\n              {/* <link rel=\"stylesheet\" href=\"/css/video-react.css\" />\n          <link rel=\"stylesheet\" href=\"https://video-react.github.io/assets/video-react.css\" />\n                In View Post \n                <h2>Hello {this.state.currentUserName}</h2>\n                <h3>{this.state.currentUserEmailId}</h3>\n\n                <hr></hr>\n                <h3>Posted By</h3>\n                <h2>{this.state.PostOwnerFullName}</h2>\n                <h2>{this.state.PostOwnerEmailId}</h2> */}\n\n\n              <div>\n                <div className=\"container text-center \">\n                  <br></br>\n                  <h2 style={ReactHeading}>Hello</h2>\n                   {viewName()}\n               </div>\n               <br>\n               </br>\n               <br>\n               </br>\n               {/* {renderAuthButton()} */}\n               {renderAuthButton2()}\n                    <hr></hr>\n                    <div style={{textAlign:\"center\"}}>\n                    \n                    </div> \n              </div>\n\n            </div>\n        );\n    }\n\n\n}\nexport default viewPost;"]},"metadata":{},"sourceType":"module"}