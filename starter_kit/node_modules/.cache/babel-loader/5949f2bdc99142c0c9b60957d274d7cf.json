{"ast":null,"code":"import _regeneratorRuntime from \"/Users/rutvikpatel/Desktop/Project/BlockChainApp/BlockChainWithIPFS/starter_kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/rutvikpatel/Desktop/Project/BlockChainApp/BlockChainWithIPFS/starter_kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/rutvikpatel/Desktop/Project/BlockChainApp/BlockChainWithIPFS/starter_kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rutvikpatel/Desktop/Project/BlockChainApp/BlockChainWithIPFS/starter_kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/rutvikpatel/Desktop/Project/BlockChainApp/BlockChainWithIPFS/starter_kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rutvikpatel/Desktop/Project/BlockChainApp/BlockChainWithIPFS/starter_kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/rutvikpatel/Desktop/Project/BlockChainApp/BlockChainWithIPFS/starter_kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/rutvikpatel/Desktop/Project/BlockChainApp/BlockChainWithIPFS/starter_kit/src/components/checkRequest.js\";\nimport React, { Component, useState } from 'react';\nimport Web3 from 'web3';\nimport Meme from '../abis/Meme.json';\nimport { Form, InputGroup, Button, Container, Row, Col, FormGroup, FormControl, ControlLabel, Navbar, Card, ButtonToolbar, ListGroup, ListGroupItem } from \"react-bootstrap\";\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport ReactSearchBox from 'react-search-box';\n\nvar ipfsClient = require('ipfs-http-client');\n\nvar ipfs = ipfsClient({\n  host: 'ipfs.infura.io',\n  port: '5001',\n  protocol: 'https'\n});\n\nvar checkRequest =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(checkRequest, _Component);\n\n  function checkRequest(props) {\n    var _this;\n\n    _classCallCheck(this, checkRequest);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(checkRequest).call(this, props));\n\n    _this.check = function () {\n      console.log(_this.state.fullName);\n      console.log(_this.state.userEmailId);\n      console.log(_this.state.userJsonResultOfParticularUserFromIPFS);\n      console.log(_this.state.totalUser);\n      console.log(_this.state.userBlockchainResultOfParticularUser);\n      console.log(_this.state.totalUserName);\n      console.log(_this.state.hasError); //console.log(this.state.)\n    };\n\n    _this.mainPage = function () {\n      console.log(_this.state.userJsonResultOfParticularUserFromIPFS);\n      console.log(_this.state.requestedFriendName);\n    };\n\n    _this.updateSearch = function (event) {\n      //  console.log(event.target.value);\n      _this.setState({\n        search: event.target.value.substr(0, 20)\n      });\n    };\n\n    _this.addFriend = function (dataParse) {\n      //console.log(this.state.userHash);\n      var userHash;\n      var userId;\n\n      for (var i = 0; i < _this.state.totalUser.length; i++) {\n        if (_this.state.totalUser[i].userEmailId == dataParse.emailId) {\n          console.log(\"Same\");\n          console.log(_this.state.totalUser[i].userHash);\n          userHash = _this.state.totalUser[i].userHash;\n          userId = _this.state.totalUser[i].userId.toString();\n          break;\n        }\n      }\n\n      ipfs.get(\"/ipfs/\" + userHash, function (error, result) {\n        console.log(\"Information of friend to add\");\n        console.log(dataParse);\n        console.log(dataParse.emailId);\n        var uint8array = new TextEncoder(\"utf-8\").encode(\"¢\");\n        var UserStringResult = new TextDecoder(\"utf-8\").decode(result[0].content);\n        var userJsonResult = JSON.parse(UserStringResult);\n        console.log(\"Friend to be add information\");\n        console.log(userJsonResult);\n        var obj = {\n          userId: _this.state.userBlockchainResultOfParticularUser.userId,\n          name: _this.state.fullName,\n          emailId: _this.state.userEmailId\n        };\n        userJsonResult.requestNotAccepted.push(obj);\n        console.log(userJsonResult);\n        var originalContentString = Buffer.from(JSON.stringify(userJsonResult)); // The json is change to string format \n\n        var userContent = {\n          content: originalContentString\n        };\n        ipfs.add(userContent, function (error, results) {\n          console.log(results);\n          var userInformationHash = results[0].hash;\n          console.log(results[0].hash);\n          console.log(userId);\n\n          _this.state.contract.methods.changeUserInformation(userId, userInformationHash).send({\n            from: _this.state.account\n          }).then(function (r) {\n            console.log(r);\n          });\n        }); // userJsonResult.requestNotAccepted=obj\n      });\n      ipfs.get(\"/ipfs/\" + _this.state.userBlockchainResultOfParticularUser.userHash, function (error, result) {\n        console.log(\"Current User Information\");\n        console.log(_this.state.userEmailId);\n        console.log(_this.state.userBlockchainResultOfParticularUser.userHash);\n        var uint8array = new TextEncoder(\"utf-8\").encode(\"¢\");\n        var UserStringResult = new TextDecoder(\"utf-8\").decode(result[0].content);\n        var userJsonResult = JSON.parse(UserStringResult);\n        console.log(\"current fiend information\");\n        console.log(userJsonResult);\n        var obj = {\n          userId: userId,\n          name: dataParse.name,\n          emailId: dataParse.emailId\n        };\n        userJsonResult.request.push(obj);\n        console.log(userJsonResult);\n\n        _this.setState({\n          userJsonResultOfParticularUserFromIPFS: userJsonResult\n        });\n\n        console.log(_this.state.userJsonResultOfParticularUserFromIPFS);\n        var originalContentString = Buffer.from(JSON.stringify(userJsonResult)); // The json is change to string format \n\n        var userContent = {\n          content: originalContentString\n        };\n        ipfs.add(userContent, function (error, results) {\n          console.log(results);\n          var userInformationHash = results[0].hash;\n          console.log(results[0].hash);\n          console.log(_this.state.userBlockchainResultOfParticularUser.userId);\n          var id = _this.state.userBlockchainResultOfParticularUser.userId;\n\n          _this.state.contract.methods.changeUserInformation(id, userInformationHash).send({\n            from: _this.state.account\n          }).then(function (r) {\n            console.log(r);\n          });\n        });\n      });\n    };\n\n    _this.acceptFriendRequest = function (dataParse) {\n      console.log(dataParse);\n      var userHash;\n\n      for (var i = 0; i < _this.state.totalUser.length; i++) {\n        if (dataParse.emailId == _this.state.totalUser[i].userEmailId) {\n          console.log(\"same\");\n          console.log(_this.state.totalUser[i].userHash);\n          userHash = _this.state.totalUser[i].userHash;\n        }\n      }\n\n      console.log(userHash);\n      ipfs.get(\"/ipfs/\" + userHash, function (error, result) {\n        console.log(\"Information of friend to add\");\n        var uint8array = new TextEncoder(\"utf-8\").encode(\"¢\");\n        var UserStringResult = new TextDecoder(\"utf-8\").decode(result[0].content);\n        var userJsonResult = JSON.parse(UserStringResult);\n        console.log(\"Friend to be add information\");\n        console.log(userJsonResult.request);\n        var obj = [];\n\n        for (var i = 0; i < userJsonResult.request.length; i++) {\n          console.log(userJsonResult.request[i]);\n\n          if (_this.state.name == userJsonResult.request[i].name) {} else {\n            obj.push(userJsonResult.request[i].name);\n          }\n        } // userJsonResult.requestNotAccepted=obj\n\n      });\n      ipfs.get(\"/ipfs/\" + _this.state.userBlockchainResultOfParticularUser.userHash, function (error, result) {\n        console.log(\"Information user of group owner \");\n        var uint8array = new TextEncoder(\"utf-8\").encode(\"¢\");\n        var UserStringResult = new TextDecoder(\"utf-8\").decode(result[0].content);\n        var userJsonResult = JSON.parse(UserStringResult);\n        console.log(\"Friend to be add information\");\n        console.log(userJsonResult);\n        console.log(userJsonResult.requestNotAccepted);\n\n        for (var i = 0; i < userJsonResult.requestNotAccepted.length; i++) {\n          console.log(userJsonResult.requestNotAccepted[i]);\n\n          if (dataParse.name) {} else {}\n        } // userJsonResult.requestNotAccepted=obj\n\n      });\n    };\n\n    _this.pausecomp = function (millis) {\n      var date = new Date();\n      var curDate = null;\n\n      do {\n        curDate = new Date();\n      } while (curDate - date < millis);\n    };\n\n    _this.state = {\n      account: '',\n      buffer: null,\n      contract: null,\n      search: '',\n      requestedFriendName: [],\n      userEmailId: '',\n      fullName: '',\n      userJsonResultOfParticularUserFromIPFS: null,\n      totalUser: null,\n      profilePicHash: '',\n      userNameList: null,\n      userBlockchainResultOfParticularUser: null,\n      hasError: false\n    };\n    return _this;\n  }\n\n  _createClass(checkRequest, [{\n    key: \"componentWillMount\",\n    value: function () {\n      var _componentWillMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.loadData();\n\n              case 2:\n                _context.next = 4;\n                return this.getName();\n\n              case 4:\n                _context.next = 6;\n                return this.loadNameList();\n\n              case 6:\n                _context.next = 8;\n                return this.loadWeb3();\n\n              case 8:\n                _context.next = 10;\n                return this.loadBlockChainData();\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentWillMount() {\n        return _componentWillMount.apply(this, arguments);\n      }\n\n      return componentWillMount;\n    }()\n  }, {\n    key: \"loadNameList\",\n    value: function () {\n      var _loadNameList = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                console.log(this.state.totalUserName);\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function loadNameList() {\n        return _loadNameList.apply(this, arguments);\n      }\n\n      return loadNameList;\n    }()\n  }, {\n    key: \"loadData\",\n    value: function () {\n      var _loadData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                this.setState({\n                  fullName: this.props.location.fullName\n                });\n                this.setState({\n                  userEmailId: this.props.location.userEmailId\n                });\n                this.setState({\n                  userJsonResultOfParticularUserFromIPFS: this.props.location.userJsonResultOfParticularUserFromIPFS\n                });\n                this.setState({\n                  userInformationListFromBlockChain: this.props.location.userInformationListFromBlockChain\n                });\n                this.setState({\n                  totalUser: this.props.location.totalUser\n                });\n                this.setState({\n                  userBlockchainResultOfParticularUser: this.props.location.userBlockchainResultOfParticularUser\n                });\n\n              case 6:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function loadData() {\n        return _loadData.apply(this, arguments);\n      }\n\n      return loadData;\n    }()\n  }, {\n    key: \"getName\",\n    value: function () {\n      var _getName = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4() {\n        var requestedFriendName, i;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                console.log(this.state.userJsonResultOfParticularUserFromIPFS);\n                requestedFriendName = this.state.userJsonResultOfParticularUserFromIPFS.requestNotAccepted;\n                console.log(requestedFriendName);\n\n                for (i = 0; i < this.state.userJsonResultOfParticularUserFromIPFS.requestNotAccepted.length; i++) {\n                  console.log(this.state.userJsonResultOfParticularUserFromIPFS.requestNotAccepted[i]);\n                  this.state.requestedFriendName.push(this.state.userJsonResultOfParticularUserFromIPFS.requestNotAccepted[i]);\n                }\n\n              case 4:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function getName() {\n        return _getName.apply(this, arguments);\n      }\n\n      return getName;\n    }()\n  }, {\n    key: \"loadWeb3\",\n    value: function () {\n      var _loadWeb = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5() {\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                if (!window.ethereum) {\n                  _context5.next = 4;\n                  break;\n                }\n\n                window.web3 = new Web3(window.ethereum);\n                _context5.next = 4;\n                return window.ethereum.enable();\n\n              case 4:\n                if (window.web3) {\n                  window.web3 = new Web3(window.web3.currentProvider);\n                } else {\n                  window.alert(\"Use Metamask\");\n                }\n\n              case 5:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      function loadWeb3() {\n        return _loadWeb.apply(this, arguments);\n      }\n\n      return loadWeb3;\n    }()\n  }, {\n    key: \"loadBlockChainData\",\n    value: function () {\n      var _loadBlockChainData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee6() {\n        var web3_2, accounts, networkId, networkdata, abi, address, contract;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                //console.log(\"load Blockchain load data\");\n                web3_2 = window.web3;\n                _context6.next = 3;\n                return web3_2.eth.getAccounts();\n\n              case 3:\n                accounts = _context6.sent;\n                // console.log(accounts);\n                this.setState({\n                  account: accounts[0]\n                }); // console.log(this.state);\n\n                _context6.next = 7;\n                return web3_2.eth.net.getId();\n\n              case 7:\n                networkId = _context6.sent;\n                // console.log(networkId);\n                networkdata = Meme.networks[networkId];\n\n                if (networkdata) {\n                  abi = Meme.abi;\n                  address = networkdata.address; //fetch the contract \n\n                  contract = web3_2.eth.Contract(abi, address); //console.log(contract);\n\n                  this.setState({\n                    contract: contract\n                  }); // console.log(contract.methods);\n                  //  const MemeHash =await contract.methods.get().call();\n                } else {\n                  window.alert(\"Smart contract not deployed to detected the network\");\n                }\n\n              case 10:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function loadBlockChainData() {\n        return _loadBlockChainData.apply(this, arguments);\n      }\n\n      return loadBlockChainData;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var list = this.state.requestedFriendName.map(function (people) {\n        return React.createElement(Card, {\n          style: {\n            padding: \"50px\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 282\n          },\n          __self: this\n        }, React.createElement(Card.Title, {\n          style: {\n            color: \"#639407\",\n            fontWeight: \"1200\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 283\n          },\n          __self: this\n        }, people.name), React.createElement(Card.Body, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 284\n          },\n          __self: this\n        }, React.createElement(Card.Link, {\n          style: {\n            color: \"#2c9fbf\",\n            fontWeight: \"bold\",\n            cursor: \"pointer\"\n          },\n          onClick: function onClick() {\n            return _this2.acceptFriendRequest(people);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 285\n          },\n          __self: this\n        }, \"Accept\"), React.createElement(Card.Link, {\n          style: {\n            color: \"red\",\n            fontWeight: \"bold\",\n            cursor: \"pointer\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 286\n          },\n          __self: this\n        }, \"Reject\")));\n      });\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        variant: \"primary\",\n        type: \"button\",\n        onClick: this.mainPage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      }, \"Main Page\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"container text-center \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302\n        },\n        __self: this\n      }, React.createElement(Jumbotron, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304\n        },\n        __self: this\n      }, \"Hello,\", this.state.fullName, \" \"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"primary\",\n        onClick: this.check,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307\n        },\n        __self: this\n      }))), React.createElement(Navbar, {\n        bg: \"light\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310\n        },\n        __self: this\n      }, React.createElement(Navbar.Brand, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312\n        },\n        __self: this\n      }, \"Search Friend\"))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"Search Friend By Name\",\n        value: this.state.search,\n        onChange: this.updateSearch,\n        style: {\n          height: \"40px\",\n          width: \"990px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319\n        },\n        __self: this\n      }), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320\n        },\n        __self: this\n      }), list));\n    }\n  }], [{\n    key: \"getDerivedStateFromError\",\n    value: function getDerivedStateFromError(error) {\n      // Update state so the next render will show the fallback UI.\n      return {\n        hasError: true\n      };\n    }\n  }]);\n\n  return checkRequest;\n}(Component);\n\nexport default checkRequest;","map":{"version":3,"sources":["/Users/rutvikpatel/Desktop/Project/BlockChainApp/BlockChainWithIPFS/starter_kit/src/components/checkRequest.js"],"names":["React","Component","useState","Web3","Meme","Form","InputGroup","Button","Container","Row","Col","FormGroup","FormControl","ControlLabel","Navbar","Card","ButtonToolbar","ListGroup","ListGroupItem","Jumbotron","ReactSearchBox","ipfsClient","require","ipfs","host","port","protocol","checkRequest","props","check","console","log","state","fullName","userEmailId","userJsonResultOfParticularUserFromIPFS","totalUser","userBlockchainResultOfParticularUser","totalUserName","hasError","mainPage","requestedFriendName","updateSearch","event","setState","search","target","value","substr","addFriend","dataParse","userHash","userId","i","length","emailId","toString","get","error","result","uint8array","TextEncoder","encode","UserStringResult","TextDecoder","decode","content","userJsonResult","JSON","parse","obj","name","requestNotAccepted","push","originalContentString","Buffer","from","stringify","userContent","add","results","userInformationHash","hash","contract","methods","changeUserInformation","send","account","then","r","request","id","acceptFriendRequest","pausecomp","millis","date","Date","curDate","buffer","profilePicHash","userNameList","loadData","getName","loadNameList","loadWeb3","loadBlockChainData","location","userInformationListFromBlockChain","window","ethereum","web3","enable","currentProvider","alert","web3_2","eth","getAccounts","accounts","net","getId","networkId","networkdata","networks","abi","address","Contract","list","map","people","padding","color","fontWeight","cursor","height","width"],"mappings":"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","sourcesContent":["import React, { Component,useState } from 'react';\nimport Web3 from 'web3';\nimport Meme from '../abis/Meme.json';\nimport { Form,InputGroup, Button, Container,Row,Col,FormGroup, FormControl, ControlLabel,Navbar,Card,ButtonToolbar,ListGroup,ListGroupItem } from \"react-bootstrap\";\nimport Jumbotron from 'react-bootstrap/Jumbotron'\nimport ReactSearchBox from 'react-search-box'\nvar ipfsClient = require('ipfs-http-client');\nvar ipfs = ipfsClient({host:'ipfs.infura.io',port:'5001',protocol: 'https' }) ;\n\n\nclass checkRequest  extends Component{\n\n    constructor(props){\n        super(props);\n         \n        this.state={\n          account:'',\n          buffer:null,\n          contract:null,\n          search:'',\n          requestedFriendName:[],\n          userEmailId:'',\n          fullName:'',\n          userJsonResultOfParticularUserFromIPFS:null,\n          totalUser:null,\n          profilePicHash:'',\n          userNameList:null,\n          userBlockchainResultOfParticularUser:null,\n          hasError: false \n        };       \n      }\n\n\n\n\n      async componentWillMount(){\n        //this.pausecomp(8500);\n        //this.pausecomp(4500);\n        await this.loadData();\n        //await this.check();\n        await this.getName();\n        await this.loadNameList();\n        await this.loadWeb3()\n        await this.loadBlockChainData();\n      }\n      async loadNameList(){\n        console.log(this.state.totalUserName);\n      }\n      async loadData(){\n       \n        this.setState({fullName:this.props.location.fullName});\n        this.setState({userEmailId:this.props.location.userEmailId});\n        this.setState({userJsonResultOfParticularUserFromIPFS:this.props.location.userJsonResultOfParticularUserFromIPFS});\n        this.setState({userInformationListFromBlockChain:this.props.location.userInformationListFromBlockChain});\n        this.setState({totalUser:this.props.location.totalUser});\n        this.setState({userBlockchainResultOfParticularUser:this.props.location.userBlockchainResultOfParticularUser});\n       \n     }\n     check=()=>{\n      console.log(this.state.fullName);\n      console.log(this.state.userEmailId)\n      console.log(this.state.userJsonResultOfParticularUserFromIPFS);\n      console.log(this.state.totalUser);\n      console.log(this.state.userBlockchainResultOfParticularUser);\n      console.log(this.state.totalUserName);\n      console.log(this.state.hasError);\n      //console.log(this.state.)\n     }\n     async getName(){\n       console.log(this.state.userJsonResultOfParticularUserFromIPFS);\n       var requestedFriendName= this.state.userJsonResultOfParticularUserFromIPFS.requestNotAccepted;\n       console.log(requestedFriendName);\n       for(var i=0;i<this.state.userJsonResultOfParticularUserFromIPFS.requestNotAccepted.length;i++){\n        console.log(this.state.userJsonResultOfParticularUserFromIPFS.requestNotAccepted[i]);\n        this.state.requestedFriendName.push(this.state.userJsonResultOfParticularUserFromIPFS.requestNotAccepted[i]);\n       }\n     }\n     mainPage=()=>{\n       console.log(this.state.userJsonResultOfParticularUserFromIPFS);\n       console.log(this.state.requestedFriendName);\n     }\n\n     async loadWeb3(){\n        if(window.ethereum){\n          window.web3 = new Web3(window.ethereum);\n          await window.ethereum.enable();\n        }\n        if(window.web3){\n          window.web3 = new Web3(window.web3.currentProvider);\n        }\n        else{\n          window.alert(\"Use Metamask\");\n        } \n      }\n      static getDerivedStateFromError(error) {\n        // Update state so the next render will show the fallback UI.\n        return { hasError: true };\n      }\n      async loadBlockChainData(){\n        //console.log(\"load Blockchain load data\");\n        const web3_2 = window.web3;\n        const accounts =  await web3_2.eth.getAccounts();\n       // console.log(accounts);\n        this.setState({account:accounts[0]});\n       // console.log(this.state);\n        const networkId = await web3_2.eth.net.getId();\n       // console.log(networkId);\n        const networkdata= Meme.networks[networkId];\n        if(networkdata){\n          const abi =Meme.abi;\n          const address = networkdata.address;\n          //fetch the contract \n          const contract = web3_2.eth.Contract(abi,address);\n          //console.log(contract);\n          this.setState({contract:contract});\n         // console.log(contract.methods);\n        //  const MemeHash =await contract.methods.get().call();\n        }\n        else{\n          window.alert(\"Smart contract not deployed to detected the network\");\n        }\n      }\n\n \n      updateSearch=(event)=>{\n     //  console.log(event.target.value);\n       this.setState({search:event.target.value.substr(0,20)})      \n      }\n      addFriend=(dataParse)=>{\n        \n        //console.log(this.state.userHash);\n        var userHash;\n        var userId;\n        for(var i=0;i<this.state.totalUser.length;i++){\n          if(this.state.totalUser[i].userEmailId==dataParse.emailId){\n            console.log(\"Same\");\n            console.log(this.state.totalUser[i].userHash);\n            userHash=this.state.totalUser[i].userHash;\n            userId= this.state.totalUser[i].userId.toString();\n            break;\n          }\n        }\n        ipfs.get(\"/ipfs/\"+userHash,(error,result)=>{        \n          console.log(\"Information of friend to add\");\n          console.log(dataParse);\n          console.log(dataParse.emailId);\n          var uint8array = new TextEncoder(\"utf-8\").encode(\"¢\");\n          var UserStringResult = new TextDecoder(\"utf-8\").decode(result[0].content);\n          var userJsonResult = JSON.parse(UserStringResult);\n          console.log(\"Friend to be add information\");\n          console.log(userJsonResult);\n          var obj={\n            userId:this.state.userBlockchainResultOfParticularUser.userId,\n            name:this.state.fullName,\n            emailId:this.state.userEmailId\n          }\n          userJsonResult.requestNotAccepted.push(obj);\n          console.log(userJsonResult);\n          var originalContentString = Buffer.from(JSON.stringify(userJsonResult));\n          // The json is change to string format \n          const userContent= {\n            content:originalContentString\n        }\n        ipfs.add(userContent,(error,results)=>{\n          console.log(results);\n          var userInformationHash= results[0].hash;\n          console.log(results[0].hash);  \n          console.log(userId);          \n             this.state.contract.methods.changeUserInformation(userId,userInformationHash).send({from: this.state.account}).then((r)=>{\n                console.log(r);\n            });\n        });\n         // userJsonResult.requestNotAccepted=obj\n\n          });\n\n       \n        \n        ipfs.get(\"/ipfs/\"+this.state.userBlockchainResultOfParticularUser.userHash,(error,result)=>{   \n          console.log(\"Current User Information\");\n          console.log(this.state.userEmailId);\n          console.log(this.state.userBlockchainResultOfParticularUser.userHash);     \n          var uint8array = new TextEncoder(\"utf-8\").encode(\"¢\");\n          var UserStringResult = new TextDecoder(\"utf-8\").decode(result[0].content);\n          var userJsonResult = JSON.parse(UserStringResult);\n          console.log(\"current fiend information\");\n          console.log(userJsonResult);\n          var obj={\n            userId:userId,\n            name:dataParse.name,\n            emailId:dataParse.emailId\n          }\n          userJsonResult.request.push(obj);\n          console.log(userJsonResult);\n          this.setState({userJsonResultOfParticularUserFromIPFS:userJsonResult})\n          console.log(this.state.userJsonResultOfParticularUserFromIPFS);\n          var originalContentString = Buffer.from(JSON.stringify(userJsonResult));\n          // The json is change to string format \n          const userContent= {\n            content:originalContentString\n        }\n        ipfs.add(userContent,(error,results)=>{\n          console.log(results);\n          var userInformationHash= results[0].hash;\n          console.log(results[0].hash);  \n          console.log(this.state.userBlockchainResultOfParticularUser.userId); \n          var id= this.state.userBlockchainResultOfParticularUser.userId;\n             this.state.contract.methods.changeUserInformation(id,userInformationHash).send({from: this.state.account}).then((r)=>{\n                console.log(r);\n            });\n          });\n        });\n\n\n      }\n     \n      acceptFriendRequest=(dataParse)=>{\n        console.log(dataParse);\n        var userHash;\n        for(var i=0;i<this.state.totalUser.length;i++){\n            if(dataParse.emailId==this.state.totalUser[i].userEmailId){\n                console.log(\"same\");\n                console.log(this.state.totalUser[i].userHash);\n                userHash=this.state.totalUser[i].userHash;\n            }\n        }\n        console.log(userHash);\n        ipfs.get(\"/ipfs/\"+userHash,(error,result)=>{        \n          console.log(\"Information of friend to add\");\n          var uint8array = new TextEncoder(\"utf-8\").encode(\"¢\");\n          var UserStringResult = new TextDecoder(\"utf-8\").decode(result[0].content);\n          var userJsonResult = JSON.parse(UserStringResult);\n          console.log(\"Friend to be add information\");\n          console.log(userJsonResult.request);\n          var obj=[];\n          for(var i=0;i<userJsonResult.request.length;i++){\n            console.log(userJsonResult.request[i]);\n            if(this.state.name==userJsonResult.request[i].name){\n            }\n            else{\n              obj.push(userJsonResult.request[i].name);\n            }\n          }\n         // userJsonResult.requestNotAccepted=obj\n          });\n\n          ipfs.get(\"/ipfs/\"+this.state.userBlockchainResultOfParticularUser.userHash,(error,result)=>{        \n            console.log(\"Information user of group owner \");\n            \n            var uint8array = new TextEncoder(\"utf-8\").encode(\"¢\");\n            var UserStringResult = new TextDecoder(\"utf-8\").decode(result[0].content);\n            var userJsonResult = JSON.parse(UserStringResult);\n            console.log(\"Friend to be add information\");\n            console.log(userJsonResult);\n            console.log(userJsonResult.requestNotAccepted);\n            for(var i=0;i<userJsonResult.requestNotAccepted.length;i++){\n              console.log(userJsonResult.requestNotAccepted[i]);\n              if(dataParse.name){\n\n              }\n              else{\n\n              }\n            }\n           // userJsonResult.requestNotAccepted=obj\n            });\n\n\n\n      }\n\n      pausecomp=(millis)=>{\n        var date = new Date();\n        var curDate = null;\n        do { curDate = new Date(); }\n        while(curDate-date < millis);\n       }\n       \n       render(){\n    \n        let list = this.state.requestedFriendName.map(people => \n          <Card    style={{padding: \"50px\" }} >\n         <Card.Title style={{color: \"#639407\", fontWeight: \"1200\"  }} >{people.name}</Card.Title>\n          <Card.Body>\n            <Card.Link   style={{color:\"#2c9fbf\", fontWeight: \"bold\",cursor: \"pointer\"  }}  onClick={() => this.acceptFriendRequest(people)}>Accept</Card.Link>\n            <Card.Link   style={{color:\"red\", fontWeight: \"bold\",cursor: \"pointer\"  }} >Reject</Card.Link>\n          </Card.Body>\n        </Card>\n        );\n\n       \n   \n        return(\n          <div className=\"container\">\n\n              <br></br>\n              <br></br>\n              <button variant=\"primary\" type=\"button\" onClick={this.mainPage}>Main Page</button>\n              <br></br>\n              <br></br>\n              <br></br>\n            <div className=\"container text-center \">\n            <Jumbotron>\n                   <h1>Hello,{this.state.fullName} </h1>\n                  <p></p>\n                   <p>\n                  <Button variant=\"primary\" onClick={this.check}></Button>\n                  </p>\n             </Jumbotron>\n            <Navbar bg=\"light\">\n               <Navbar.Brand >\n               <h1>Search Friend</h1>\n                 </Navbar.Brand>\n             </Navbar>\n             <br></br>\n             <br></br>\n             <input type =\"text\" placeholder=\"Search Friend By Name\" value={this.state.search} onChange={this.updateSearch} style={{height: \"40px\",  width:\"990px\",  }} />\n            <br></br>\n            <br></br>\n             <hr></hr> \n              { list }\n          {/* {list2} */}\n                </div>\n          </div>\n               );\n              }\n            }\n\n\nexport default checkRequest ;"]},"metadata":{},"sourceType":"module"}