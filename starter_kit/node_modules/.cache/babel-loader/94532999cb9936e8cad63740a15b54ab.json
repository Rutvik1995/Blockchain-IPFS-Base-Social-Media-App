{"ast":null,"code":"import _toConsumableArray from \"/Users/rutvikpatel/Desktop/Project/Github6/starter_kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"/Users/rutvikpatel/Desktop/Project/Github6/starter_kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/rutvikpatel/Desktop/Project/Github6/starter_kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/Users/rutvikpatel/Desktop/Project/Github6/starter_kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/rutvikpatel/Desktop/Project/Github6/starter_kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rutvikpatel/Desktop/Project/Github6/starter_kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/rutvikpatel/Desktop/Project/Github6/starter_kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rutvikpatel/Desktop/Project/Github6/starter_kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/rutvikpatel/Desktop/Project/Github6/starter_kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/rutvikpatel/Desktop/Project/Github6/starter_kit/src/components/MainPage2.js\";\nimport React, { Component } from 'react';\nimport Web3 from 'web3';\nimport Meme from '../abis/Meme.json';\nimport { Button, Navbar, Nav, ListGroup, Modal, Card } from \"react-bootstrap\";\nimport { MDBInput } from 'mdbreact';\nimport ReactDOM from 'react-dom';\nimport Files from 'react-files';\nimport sha256 from 'crypto-js/sha256';\nimport hmacSHA512 from 'crypto-js/hmac-sha512';\nimport Base64 from 'crypto-js/enc-base64';\n\nvar Cryptr = require('cryptr');\n\nvar CryptoJS = require(\"crypto-js\");\n\nvar ipfsClient = require('ipfs-http-client');\n\nvar ipfs = ipfsClient({\n  host: 'ipfs.infura.io',\n  port: '5001',\n  protocol: 'https'\n});\n;\n\nvar MainPage2 =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MainPage2, _Component);\n\n  function MainPage2(props) {\n    var _this$state;\n\n    var _this;\n\n    _classCallCheck(this, MainPage2);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MainPage2).call(this, props));\n\n    _this.loadData = function () {\n      console.log(\"in load data\");\n\n      _this.setState({\n        fullName: _this.props.location.fullName\n      });\n\n      _this.setState({\n        userEmailId: _this.props.location.userEmailId\n      });\n\n      _this.setState({\n        userJsonResultOfParticularUserFromIPFS: _this.props.location.userJsonResultOfParticularUserFromIPFS\n      });\n\n      _this.setState({\n        userInformationListFromBlockChain: _this.props.location.userInformationListFromBlockChain\n      });\n\n      _this.setState({\n        totalUser: _this.props.location.totalUser\n      });\n\n      _this.setState({\n        userBlockchainResultOfParticularUser: _this.props.location.userBlockchainResultOfParticularUser\n      });\n    };\n\n    _this.check = function () {\n      console.log(_this.state.fullName);\n      console.log(_this.state.userEmailId);\n      console.log(_this.state.userJsonResultOfParticularUserFromIPFS);\n      console.log(_this.state.totalUser);\n      console.log(_this.state.userBlockchainResultOfParticularUser); // //console.log(this.state.totalUserName);\n\n      console.log(_this.state.hasError);\n      console.log(_this.state.totalUser);\n      document.addEventListener('csEvent', _this.checkEvent);\n    };\n\n    _this.checkValue = function () {\n      // console.log(this.props.location.TotalUser);\n      // console.log(this.props.location.fullName);\n      //console.log()\n      console.log(_this.state.fullName);\n      console.log(_this.state.userEmailId);\n      console.log(_this.state.userJsonResultOfParticularUserFromIPFS);\n      console.log(_this.state.totalUser);\n      console.log(_this.state.userBlockchainResultOfParticularUser);\n      console.log(\"Orginal Value\");\n      console.log(_this.props.location.userBlockchainResultOfParticularUser);\n    };\n\n    _this.addFriend = function () {\n      console.log(\"In create Account\");\n\n      _this.props.history.push({\n        pathname: '/AddFriend',\n        data: _this.state.currentEmailId,\n        name: _this.props.location.name // your data array of objects\n\n      });\n    };\n\n    _this.addPost = function () {\n      _this.props.history.push({\n        pathname: '/addPost',\n        data: _this.state.currentEmailId,\n        name: _this.props.location.name // your data array of objects\n\n      });\n    };\n\n    _this.checkFriendRequest = function () {\n      console.log(\"In check friend request\");\n      console.log(_this.state.userEmailId);\n      console.log(_this.state.fullName);\n      console.log(_this.state.userJsonResultOfParticularUserFromIPFS);\n      console.log(_this.state.totalUser);\n      console.log(_this.state.userBlockchainResultOfParticularUser);\n\n      _this.props.history.push({\n        pathname: '/checkRequest2',\n        userEmailId: _this.state.userEmailId,\n        fullName: _this.state.fullName,\n        userJsonResultOfParticularUserFromIPFS: _this.state.userJsonResultOfParticularUserFromIPFS,\n        totalUser: _this.state.totalUser,\n        userBlockchainResultOfParticularUser: _this.state.userBlockchainResultOfParticularUser\n      });\n    };\n\n    _this.openTimeline = function () {\n      console.log(\"In check friend request\");\n      var t = \"adv\";\n\n      _this.props.history.push({\n        pathname: '/Timeline',\n        data: _this.state.currentEmailId,\n        name: _this.props.location.name // your data array of objects\n\n      });\n    };\n\n    _this.postRead = function () {\n      var url = \"QmYah59VfHQTNPnhk1f5hwnVqkxRC6CB9xvMjzLro9VBsw\";\n\n      _this.props.history.push({\n        pathname: '/postReader/' + url // data: this.state.currentEmailId,\n        //name: this.props.location.name   // your data array of objects\n\n      });\n    };\n\n    _this.feed = function () {\n      _this.props.history.push({\n        pathname: '/Feed',\n        data: _this.state.currentEmailId,\n        name: _this.props.location.name // your data array of objects\n\n      });\n    };\n\n    _this.searchFriends = function () {\n      console.log(\"in people\");\n\n      _this.props.history.push({\n        pathname: '/searchFriends2',\n        userEmailId: _this.state.userEmailId,\n        fullName: _this.state.fullName,\n        userJsonResultOfParticularUserFromIPFS: _this.state.userJsonResultOfParticularUserFromIPFS,\n        totalUser: _this.state.totalUser,\n        userBlockchainResultOfParticularUser: _this.state.userBlockchainResultOfParticularUser\n      });\n    };\n\n    _this.friend = function () {\n      _this.props.history.push({\n        pathname: '/friend',\n        data: _this.state.currentEmailId,\n        name: _this.props.location.name // your data array of objects\n\n      });\n    };\n\n    _this.signOut = function () {\n      _this.props.history.push({\n        pathname: '/login' // your data array of objects\n\n      });\n    };\n\n    _this.addProfilePic = function () {\n      // this.props.history.push({\n      //   pathname: '/addProfilePic',\n      //   userEmailId: this.state.userEmailId,\n      //   fullName:  this.state. fullName,\n      //   userJsonResultOfParticularUserFromIPFS:this.state.userJsonResultOfParticularUserFromIPFS,\n      //   totalUser:this.state.totalUser,\n      //   userBlockchainResultOfParticularUser:this.state.userBlockchainResultOfParticularUser\n      // })\n      _this.setState({\n        profilePicModal: true\n      });\n    };\n\n    _this.openPostModel = function () {\n      console.log(\"inside open\");\n\n      _this.setState({\n        showModal: true\n      });\n    };\n\n    _this.closePostModel = function () {\n      console.log(\"inside close\");\n\n      _this.setState({\n        showModal: false\n      });\n    };\n\n    _this.closeProfilPicModel = function () {\n      console.log(\"inside close\");\n\n      _this.setState({\n        profilePicModal: false\n      });\n    };\n\n    _this.getPostLink = function () {\n      _this.setState({\n        showModal: true\n      });\n    };\n\n    _this.captureProfilePicFile = function (event) {\n      console.log(ipfs);\n      event.preventDefault();\n      console.log(\"file is capture\");\n      console.log(event);\n      console.log(event.target.files[0]);\n      var file = event.target.files[0];\n      var reader = new window.FileReader();\n      reader.readAsArrayBuffer(file);\n\n      reader.onloadend = function () {\n        console.log(reader.result);\n\n        _this.setState({\n          profilePicBuffer: Buffer(reader.result)\n        });\n\n        console.log(\"buffer\", Buffer(reader.result));\n      }; //process the file inside here \n\n    };\n\n    _this.capturePostFile = function (event) {\n      console.log(ipfs);\n      event.preventDefault();\n      console.log(\"file is capture\");\n      console.log(event); //type\n\n      console.log(event.target.files[0]);\n      var str = event.target.files[0].type;\n      var array = str.split('/');\n      var array1 = array[0];\n\n      if (array1 == 'video') {\n        console.log(array1); ///\n\n        _this.setState({\n          videoSet: \"yes\"\n        });\n\n        console.log(_this.state.videoSet); ///\n      } else if (array1 == 'image') {\n        console.log(array1);\n\n        _this.setState({\n          photoSet: \"yes\"\n        });\n\n        console.log(_this.state.photoSet);\n      }\n\n      var file = event.target.files[0];\n      var reader = new window.FileReader();\n      reader.readAsArrayBuffer(file);\n\n      reader.onloadend = function () {\n        console.log(reader.result);\n\n        _this.setState({\n          postPicBuffer: Buffer(reader.result)\n        });\n\n        console.log(\"buffer\", Buffer(reader.result));\n        console.log(_this.state.videoSet);\n        console.log(_this.state.photoSet);\n      };\n    };\n\n    _this.uploadProfilePic = function () {\n      console.log(_this.state.groupInformationPassParameter);\n      console.log(\"uploadProfilePic\"); // event.preventDefault();\n\n      console.log(\"in submit event\");\n      var file = {\n        content: _this.state.profilePicBuffer //content:this.\n\n      };\n      var t;\n      ipfs.add(file, function (error, results) {\n        //Do Stuff here\n        console.log(\"IPFS RESULT\", results[0].hash);\n        var hash = results[0].hash;\n        t = results[0].hash;\n        var url = \"https://ipfs.infura.io/ipfs/\";\n        var url2 = t;\n        var third = url + url2;\n        console.log(third);\n        _this.state.userJsonResultOfParticularUserFromIPFS.profilePicHash = third;\n        console.log(_this.state.userJsonResultOfParticularUserFromIPFS.profilePicHash);\n\n        _this.setState({\n          urlhash: t\n        });\n\n        if (error) {\n          console.log(error);\n          return;\n        }\n\n        var content;\n        ipfs.get(\"/ipfs/\" + t, function (error, result) {\n          console.log(result[0].path);\n          content = result[0].content;\n        }); //Step 2 is to store file on blockchain\n\n        _this.filesrc = \"http://localhost:8080/ipfs/\" + hash;\n        console.log(\"https://ipfs.infura.io/ipfs/\" + hash);\n        console.log(_this.filesrc);\n\n        _this.setState({\n          profilePicHash: hash\n        });\n\n        var userId = _this.state.userBlockchainResultOfParticularUser.userId;\n        var myObj = _this.state.userJsonResultOfParticularUserFromIPFS;\n        console.log(myObj);\n        var originalContentString = Buffer.from(JSON.stringify(myObj)); // The json is change to string format \n\n        var userContent = {\n          content: originalContentString\n        };\n        ipfs.add(userContent, function (error, results) {\n          console.log(results);\n          var userInformationHash = results[0].hash; // this.setState({userJsonResultOfParticularUserFromIPFS:userInformationHash});\n          //console.log(this.state.userJsonResultOfParticularUserFromIPFS);\n\n          console.log(results[0].hash);\n\n          _this.setState({\n            IPFSuserInformationHash: results[0].hash\n          });\n\n          _this.state.userBlockchainResultOfParticularUser.userHash = results[0].hash;\n          console.log(userId);\n\n          _this.state.contract.methods.changeUserInformation(userId, userInformationHash).send({\n            from: _this.state.account\n          }).then(function (r) {\n            console.log(r);\n          });\n\n          _this.state.userBlockchainResultOfParticularUser.userHash = userInformationHash;\n          console.log(_this.state.userBlockchainResultOfParticularUser.userHash);\n        });\n      });\n    };\n\n    _this.makeid = function (length) {\n      var result = '';\n      var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\n      var charactersLength = characters.length;\n\n      for (var i = 0; i < length; i++) {\n        result += characters.charAt(Math.floor(Math.random() * charactersLength));\n      }\n\n      return result;\n    };\n\n    _this.makeUUID = function (length) {\n      var result = '';\n      var characters = 'abcdefghijklmnopqrstuvwxyz';\n      var charactersLength = characters.length;\n\n      for (var i = 0; i < length; i++) {\n        result += characters.charAt(Math.floor(Math.random() * charactersLength));\n      }\n\n      return result;\n    };\n\n    _this.getFriendsInform = function () {\n      console.log(_this.state.groupInformationPassParameter);\n\n      _this.props.history.push({\n        pathname: '/timeline',\n        userEmailId: _this.state.userEmailId,\n        fullName: _this.state.fullName,\n        userJsonResultOfParticularUserFromIPFS: _this.state.userJsonResultOfParticularUserFromIPFS,\n        totalUser: _this.state.totalUser,\n        userBlockchainResultOfParticularUser: _this.state.userBlockchainResultOfParticularUser\n      });\n    };\n\n    _this.getFriends = function () {\n      console.log(_this.state.userJsonResultOfParticularUserFromIPFS);\n      var arrayData = _this.state.userJsonResultOfParticularUserFromIPFS.friend;\n\n      for (var i = 0; i < arrayData.length; i++) {\n        console.log(arrayData[i]);\n      }\n\n      console.log(_this.state.groupInformationListFromBlockChain);\n      var myMap = new Map();\n      var max = -1;\n\n      for (var i = 0; i < _this.state.groupInformationListFromBlockChain.length; i++) {\n        var value = _this.state.groupInformationListFromBlockChain[i].groupVersion;\n        value = value.toString();\n        myMap.set(value, _this.state.groupInformationListFromBlockChain[i]);\n        console.log(value);\n\n        if (value > max) {\n          max = value;\n        }\n      }\n\n      console.log(\"lastest group version is\");\n      console.log(max);\n      console.log(myMap.get(max));\n      var lastestGroupDetailHash = myMap.get(max);\n      var t = lastestGroupDetailHash.groupHash;\n      var content;\n      ipfs.get(\"/ipfs/\" + t, function (error, result) {\n        console.log(result[0].path);\n        content = result[0].content;\n        console.log(content);\n        var groupData = JSON.parse(content);\n        console.log(groupData);\n\n        _this.setState({\n          groupInformationPassParameter: groupData\n        });\n\n        console.log(_this.state.groupInformationPassParameter);\n      });\n    };\n\n    _this.about = function () {\n      console.log(\"outside the loop\");\n\n      _this.setState({\n        photoSet: \"yes\"\n      });\n    };\n\n    _this.about2 = function () {\n      console.log(\"outside the loop\");\n      console.log(_this.state.groupInformationPassParameter);\n\n      _this.setState({\n        videoSet: \"yes\"\n      });\n    };\n\n    _this.about3 = function () {\n      document.getElementById(\"postTextArea\").readOnly = true;\n      console.log(_this.state.chromeExtensionData);\n      var message = _this.state.chromeExtensionData.detail;\n      var stringPrivateKeyData = message.privateKeyData;\n      console.log(stringPrivateKeyData);\n      var jsonPrivateKeyData = JSON.parse(stringPrivateKeyData);\n      console.log(jsonPrivateKeyData);\n\n      for (var key in jsonPrivateKeyData) {\n        console.log(key);\n        console.log(jsonPrivateKeyData[key]);\n        var FinalPrivateKey;\n\n        if (_this.state.userEmailId == jsonPrivateKeyData[key]) {\n          console.log(\"in if \");\n          console.log(key);\n          console.log(\"match found\");\n          var no = key.substring(7, key.length);\n          var privateKey = \"privateKey\";\n          var result = privateKey + no;\n          console.log(result);\n          FinalPrivateKey = jsonPrivateKeyData[result];\n          console.log(FinalPrivateKey);\n\n          _this.setState({\n            privateKey: FinalPrivateKey\n          });\n\n          var postText = document.getElementById(\"postTextArea\").value;\n          console.log(postText);\n          var hashDigest = sha256(postText);\n\n          _this.setState({\n            postTextHashHashDigesh: hashDigest\n          });\n\n          console.log(hashDigest);\n          var cryptr = new Cryptr(FinalPrivateKey);\n          var encryptedString = cryptr.encrypt(postText);\n          console.log(encryptedString);\n\n          _this.setState({\n            postTextDigitalSignature: encryptedString\n          });\n\n          break;\n        }\n      } //\n\n\n      var str = _this.state.fullName;\n      var array = str.split(\" \");\n      var array1 = array[0];\n      var array2 = array[1];\n      var array1 = array1.substring(0, 1);\n      var array2 = array2.substring(0, 1);\n      var final = array1 + array2;\n      console.log(final); //signatureText\n\n      _this.setState({\n        signatureText: final\n      });\n\n      console.log(_this.state.chromeExtensionData);\n    };\n\n    _this.checkEvent = function (event) {\n      var data = event.detail;\n      console.log(data);\n\n      _this.setState({\n        chromeExtensionData: event\n      });\n\n      console.log(\"Nv Enter:\", event);\n      console.log(_this.state.chromeExtensionData);\n    };\n\n    _this.actuallyPost = function () {\n      console.log(\"This is actually post \");\n      console.log(_this.state.groupInformationPassParameter);\n      console.log(_this.state.groupInformationPassParameter.friend);\n      var friendList = _this.state.groupInformationPassParameter.friend;\n      console.log(\"////////////////\");\n      console.log(friendList);\n      console.log(\"////////////////\");\n      var postText = document.getElementById(\"postTextArea\").value;\n\n      var sessionKey = _this.makeid(20);\n\n      console.log(postText);\n      var postTextHash;\n      var postPicHash;\n      var postHash; //This is the the data which is enter by the user \n\n      var userInformationHash;\n      var originalContentString = Buffer.from(JSON.stringify(postText)); // The json is change to string format \n\n      var userContent = {\n        content: originalContentString\n      };\n      ipfs.add(userContent, function (error, results) {\n        console.log(results);\n        userInformationHash = results[0].hash;\n        console.log(results[0].hash);\n        postTextHash = results[0].hash;\n        console.log(postTextHash);\n        var file = {\n          content: _this.state.postPicBuffer //content:this.\n\n        };\n        var t;\n        ipfs.add(file, function (error, results) {\n          //Do Stuff here\n          console.log(\"IPFS RESULT\", results[0].hash);\n          var hash = results[0].hash;\n          t = results[0].hash;\n          var url = \"https://ipfs.infura.io/ipfs/\";\n          var url2 = t;\n          var third = url + url2;\n          postPicHash = results[0].hash;\n          console.log(\"third\");\n          console.log(third);\n\n          if (error) {\n            console.log(error);\n            return;\n          }\n\n          var content;\n          ipfs.get(\"/ipfs/\" + t, function (error, result) {\n            console.log(result[0].path);\n            content = result[0].content;\n          }); //Step 2 is to store file on blockchain\n\n          _this.filesrc = \"http://localhost:8080/ipfs/\" + hash;\n          console.log(\"https://ipfs.infura.io/ipfs/\" + hash);\n          var myObj = {\n            \"postTextHash\": postTextHash,\n            \"postPicHash\": postPicHash,\n            \"digitalSignature\": _this.state.postTextDigitalSignature\n          }; //This is the the data which is enter by the user \n\n          console.log(myObj);\n          console.log(_this.state.chromeExtensionData);\n          var originalContentString = Buffer.from(JSON.stringify(myObj)); // The json is change to string format \n\n          var userContent = {\n            content: originalContentString\n          };\n          var today = new Date();\n          var date = today.getMonth() + 1 + '-' + today.getDate() + '-' + today.getFullYear();\n          var message = \" I have just create a new post at \";\n          var final1 = message + date;\n          var message2 = \". Just the section down bellow to view the post\";\n          var final2 = final1 + message2;\n\n          _this.setState({\n            captionSetter: final2\n          });\n\n          ipfs.add(userContent, function (error, results) {\n            var _userObj;\n\n            console.log(results);\n            postHash = results[0].hash;\n            console.log(postHash);\n            var localPostHash = results[0].hash;\n            console.log(_this.state.fullName);\n            console.log(_this.state.userBlockchainResultOfParticularUser);\n            console.log(_this.state.userJsonResultOfParticularUserFromIPFS);\n            console.log(sessionKey);\n            console.log(\"this is encrypted posh hahs\");\n            var encryptedPostHash = CryptoJS.AES.encrypt(postHash, sessionKey).toString();\n            var bytes = CryptoJS.AES.decrypt(encryptedPostHash, sessionKey);\n            var originalText = bytes.toString(CryptoJS.enc.Utf8);\n            console.log(originalText); // 'my message'\n\n            var arrayData = _this.state.groupInformationPassParameter.groupDetails;\n            console.log(arrayData);\n            console.log(arrayData == undefined);\n\n            var uuid = _this.makeUUID(40);\n\n            console.log(_this.state.photoSet);\n            console.log(_this.state.videoSet);\n            console.log(friendList);\n            var userObj = (_userObj = {\n              postOwner: _this.state.fullName,\n              postHash: results[0].hash,\n              sessionKey: sessionKey,\n              encryptedPostHash: encryptedPostHash,\n              groupVersion: _this.state.groupInformationPassParameter.groupVersion,\n              sessionKeyDetails: [],\n              postUUID: uuid,\n              image: _this.state.photoSet,\n              video: _this.state.videoSet\n            }, _defineProperty(_userObj, \"groupVersion\", _this.state.currentGroupVersion), _defineProperty(_userObj, \"friendList\", friendList), _userObj);\n\n            _this.setState({\n              videoSet: \"no\"\n            });\n\n            _this.setState({\n              photoSet: \"no\"\n            });\n\n            console.log(\"Checking the data\");\n            console.log(userObj);\n            console.log(\"------\");\n\n            if (arrayData == undefined) {\n              userObj.groupVersion = 0;\n            } else {\n              for (var i = 0; i < arrayData.length; i++) {\n                console.log(arrayData[i]);\n                var encryptedUserSession = CryptoJS.AES.encrypt(sessionKey, arrayData[i].encryptedGroupkey).toString();\n                var usr = {\n                  emailId: arrayData[i].emailId,\n                  encryptedUserSession: encryptedUserSession,\n                  userHash: arrayData[i].userHash\n                };\n                console.log(usr);\n                userObj.sessionKeyDetails.push(usr);\n              }\n            }\n\n            console.log(\"Json data\");\n            console.log(userObj);\n\n            _this.setState({\n              signatureText: ''\n            });\n\n            window.open(\"http://localhost:8888/Facebook-sdk/facebooksdk/?url?=http://localhost:3000/MainPage/\" + uuid, \"_blank\"); // uuid=1;\n            // var date =  new Date();\n            // var stringData=date.toString();\n            //////\n            // this.state.contract.methods.createPost(this.state.userEmailId,userInformationHash).send({from: this.state.account}).then((r)=>{\n            //   console.log(r);\n\n            console.log(userObj);\n            var tempData = _this.state.groupInformationPassParameter;\n            tempData.postData.push(userObj);\n            console.log(tempData);\n            var originalContentString = Buffer.from(JSON.stringify(tempData)); // The json is change to string format \n\n            var userContent = {\n              content: originalContentString\n            };\n            ipfs.add(userContent, function (error, results) {\n              var groupHashAddress = results[0].hash;\n              console.log(groupHashAddress); //string memory _postedByEmailId,string memory _postHash, uint _uniquePostId ,string memory _currentDateAndTime\n\n              _this.state.contract.methods.changeGroupInformation(_this.state.currentGrooupId, groupHashAddress).send({\n                from: _this.state.account\n              }).then(function (r) {\n                console.log(r);\n              });\n\n              document.getElementById(\"postTextArea\").readOnly = true;\n            }); ///////\n          }); // var userObj={\n          //   postOwner:this.state.fullName,\n          //   postHash:postHash,\n          //   sessionKey:sessionKey,\n          // }\n        });\n      });\n    };\n\n    console.log(props);\n    _this.state = (_this$state = {\n      account: '',\n      buffer: null,\n      contract: null,\n      userEmailId: '',\n      fullName: '',\n      userJsonResultOfParticularUserFromIPFS: null,\n      userBlockchainResultOfParticularUser: null,\n      totalUser: null,\n      isVisible: false,\n      showModal: false,\n      profilePicModal: false\n    }, _defineProperty(_this$state, \"buffer\", null), _defineProperty(_this$state, \"profilePicBuffer\", ''), _defineProperty(_this$state, \"postPicBuffer\", ''), _defineProperty(_this$state, \"groupInformationListFromBlockChain\", []), _defineProperty(_this$state, \"groupInformationPassParameter\", ''), _defineProperty(_this$state, \"currentGroupVersion\", ''), _defineProperty(_this$state, \"videoSet\", 'no'), _defineProperty(_this$state, \"photoSet\", 'no'), _defineProperty(_this$state, \"signatureText\", ''), _defineProperty(_this$state, \"chromeExtensionData\", ''), _defineProperty(_this$state, \"postTextHashHashDigesh\", ''), _defineProperty(_this$state, \"postTextDigitalSignature\", ''), _defineProperty(_this$state, \"currentGrooupId\", 0), _defineProperty(_this$state, \"editTextArea\", true), _defineProperty(_this$state, \"captionSetter\", ''), _this$state);\n    return _this;\n  }\n\n  _createClass(MainPage2, [{\n    key: \"componentWillMount\",\n    value: function () {\n      var _componentWillMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.loadData();\n\n              case 2:\n                _context.next = 4;\n                return this.check();\n\n              case 4:\n                _context.next = 6;\n                return this.loadWeb3();\n\n              case 6:\n                _context.next = 8;\n                return this.loadBlockChainData();\n\n              case 8:\n                document.addEventListener('csEvent', this.checkEvent);\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentWillMount() {\n        return _componentWillMount.apply(this, arguments);\n      }\n\n      return componentWillMount;\n    }()\n  }, {\n    key: \"updateModal\",\n    value: function updateModal(isVisible) {\n      this.state.isVisible = isVisible;\n      this.forceUpdate();\n    }\n  }, {\n    key: \"loadWeb3\",\n    value: function () {\n      var _loadWeb = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!window.ethereum) {\n                  _context2.next = 4;\n                  break;\n                }\n\n                window.web3 = new Web3(window.ethereum);\n                _context2.next = 4;\n                return window.ethereum.enable();\n\n              case 4:\n                if (window.web3) {\n                  window.web3 = new Web3(window.web3.currentProvider);\n                } else {\n                  window.alert(\"Use Metamask\");\n                }\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function loadWeb3() {\n        return _loadWeb.apply(this, arguments);\n      }\n\n      return loadWeb3;\n    }()\n  }, {\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                document.addEventListener('csEvent', this.checkEvent);\n\n              case 1:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"loadBlockChainData\",\n    value: function () {\n      var _loadBlockChainData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4() {\n        var _this2 = this;\n\n        var web3_2, accounts, networkId, networkdata, abi, address, contract, tt, groupCount, i, groupInformationListFromBlockChain, arrayData, myMap, max, value, lastestGroupDetailHash, t, content;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                web3_2 = window.web3;\n                _context4.next = 3;\n                return web3_2.eth.getAccounts();\n\n              case 3:\n                accounts = _context4.sent;\n                this.setState({\n                  account: accounts[0]\n                });\n                _context4.next = 7;\n                return web3_2.eth.net.getId();\n\n              case 7:\n                networkId = _context4.sent;\n                networkdata = Meme.networks[networkId];\n\n                if (!networkdata) {\n                  _context4.next = 55;\n                  break;\n                }\n\n                abi = Meme.abi;\n                address = networkdata.address; //fetch the contract \n\n                contract = web3_2.eth.Contract(abi, address);\n                console.log(contract);\n                this.setState({\n                  contract: contract\n                });\n                console.log(contract.methods); //  const MemeHash =await contract.methods.get().call();\n\n                _context4.next = 18;\n                return this.state.contract.methods.groupCount().call();\n\n              case 18:\n                tt = _context4.sent;\n                _context4.next = 21;\n                return tt;\n\n              case 21:\n                groupCount = _context4.sent;\n                groupCount = groupCount.toString();\n                console.log(\"group Count\");\n                console.log(groupCount);\n                i = 1;\n\n              case 26:\n                if (!(i <= groupCount)) {\n                  _context4.next = 35;\n                  break;\n                }\n\n                _context4.next = 29;\n                return this.state.contract.methods.groupInformation(i).call();\n\n              case 29:\n                groupInformationListFromBlockChain = _context4.sent;\n                console.log(groupInformationListFromBlockChain);\n\n                if (groupInformationListFromBlockChain.groupEmailId == this.state.userEmailId) {\n                  this.setState({\n                    groupInformationListFromBlockChain: [].concat(_toConsumableArray(this.state.groupInformationListFromBlockChain), [groupInformationListFromBlockChain])\n                  });\n                }\n\n              case 32:\n                i++;\n                _context4.next = 26;\n                break;\n\n              case 35:\n                ////\n                console.log(this.state.userJsonResultOfParticularUserFromIPFS);\n                arrayData = this.state.userJsonResultOfParticularUserFromIPFS.friend;\n\n                for (i = 0; i < arrayData.length; i++) {\n                  console.log(arrayData[i]);\n                }\n\n                console.log(this.state.groupInformationListFromBlockChain);\n                myMap = new Map();\n                max = -1;\n\n                for (i = 0; i < this.state.groupInformationListFromBlockChain.length; i++) {\n                  value = this.state.groupInformationListFromBlockChain[i].groupVersion;\n                  value = value.toString();\n                  myMap.set(value, this.state.groupInformationListFromBlockChain[i]);\n                  console.log(value);\n\n                  if (value > max) {\n                    max = value;\n                  }\n                }\n\n                this.setState({\n                  currentGroupVersion: max\n                });\n                console.log(\"lastest group version is\");\n                console.log(max);\n                console.log(myMap.get(max));\n                lastestGroupDetailHash = myMap.get(max);\n                console.log(lastestGroupDetailHash);\n                console.log(\"0------------------------------\");\n                console.log(lastestGroupDetailHash.groupId.toString());\n                this.setState({\n                  currentGrooupId: lastestGroupDetailHash.groupId.toString()\n                });\n                console.log(\"0------------------------------\");\n\n                if (max != -1) {\n                  t = lastestGroupDetailHash.groupHash;\n                  ipfs.get(\"/ipfs/\" + t, function (error, result) {\n                    console.log(result[0].path);\n                    content = result[0].content;\n                    console.log(content);\n                    var groupData = JSON.parse(content);\n                    console.log(groupData);\n\n                    _this2.setState({\n                      groupInformationPassParameter: groupData\n                    });\n\n                    console.log(_this2.state.groupInformationPassParameter);\n                  });\n                }\n\n                _context4.next = 56;\n                break;\n\n              case 55:\n                window.alert(\"Smart contract not deployed to detected the network\");\n\n              case 56:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function loadBlockChainData() {\n        return _loadBlockChainData.apply(this, arguments);\n      }\n\n      return loadBlockChainData;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var mystyle = {\n        padding: \"20px\",\n        fontFamily: \"Arial\",\n        cursor: \"pointer\",\n        borderStyle: \"solid\",\n        borderColor: \"#365899\",\n        fontSize: \"20px\",\n        textAlign: \"center\"\n      };\n\n      var mystyle2 = _defineProperty({\n        padding: \"10px\",\n        fontFamily: \"Arial\",\n        cursor: \"pointer\",\n        borderStyle: \"solid\",\n        color: \"while\",\n        backgroundColor: \"#365899\"\n      }, \"color\", \"#fff\");\n\n      var mystyle3 = {\n        paddingLeft: \"20px\"\n      };\n      var cardStyle = {\n        padding: \"10px 10px 10px 10px\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\" // width:\"1000px \n\n      };\n      var cardStyle2 = {\n        padding: \"10px 10px 10px 10px\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        textAlign: \"center\" // width:\"1000px \n\n      };\n      var card = {\n        boxShadow: \"0px 0px 0.5px rgba(10,10,10,.3)\",\n        alignItems: \"center\",\n        position: \"relative\",\n        userSelect: \"none\",\n        overflow: \"hidden\",\n        transition: \"all .5s ease\",\n        padding: \"10px\",\n        width: \"850px\",\n        height: \"280px\",\n        maxWidth: \"100%\",\n        backgroundColor: \"white\",\n        marginBottom: \"10px\",\n        fontSize: \"14px\",\n        borderRadius: \"3px\",\n        borderStyle: \"solid\",\n        borderColor: \"#365899\"\n      };\n      var card2 = {\n        boxShadow: \"0px 0px 0.5px rgba(10,10,10,.3)\",\n        alignItems: \"center\",\n        position: \"relative\",\n        userSelect: \"none\",\n        overflow: \"hidden\",\n        transition: \"all .5s ease\",\n        padding: \"10px\",\n        width: \"950px\",\n        height: \"280px\",\n        maxWidth: \"100%\",\n        backgroundColor: \"white\",\n        marginBottom: \"10px\",\n        fontSize: \"14px\",\n        borderRadius: \"3px\"\n      };\n      var info = {\n        display: \"flex\",\n        alignItems: \"center\",\n        height: \"40px\"\n      };\n      var photo = {\n        height: \"40px\",\n        width: \"40px\",\n        backgroundColor: \"gray\",\n        opacity: \".8\",\n        borderRadius: \"100%\"\n      };\n      var name = {\n        fontWeight: \"bold\",\n        color: \"rgb(66, 103, 178)\",\n        opacity: \".9\",\n        paddingLeft: \"20px\"\n      };\n      var username = {\n        margin: \"15px 0\",\n        padding: \"15px 10px\",\n        width: \"100%\",\n        outline: \"none\",\n        border: \"1px solid #bbb\",\n        borderRadius: \"20px\",\n        display: \"inline-block\",\n        fontSize: \"20px\"\n      };\n      var textAreaStyle = {\n        border: \"1px solid #bbb\",\n        borderRadius: \"20px\",\n        display: \"inline-block\",\n        fontSize: \"20px\",\n        color: \"rgb(66, 103, 178)\",\n        width: \"600px\"\n      };\n      var addPost = {\n        float: \"right\",\n        background: \"#365899\",\n        border: \"none\",\n        color: \"#fff\",\n        fontWeight: \"bold\" //padding: \"10px 15px\",\n        //borderRadius: \"6px\"\n\n      };\n      var modalPost = {\n        background: \"#365899\",\n        border: \"none\",\n        color: \"#fff\",\n        fontWeight: \"bold\" //padding: \"10px 15px\",\n        //borderRadius: \"6px\"\n\n      };\n      var modalBorder = {\n        borderStyle: \"solid\",\n        borderColor: \"#365899\"\n      };\n      var fileUpload = {\n        fontSize: \"20px\",\n        height: \"40px\",\n        color: \"blue\",\n        background: \"#365899\",\n        borderStyle: \"solid\",\n        borderColor: \"#365899\"\n      };\n      var signatureSession = {\n        marginTop: \"220px\",\n        position: \"absolute\"\n      };\n      var postSignature = {\n        fontFamily: \"cursive\",\n        fontSize: \"24px\",\n        color: \"#00664b\",\n        marginLeft: \"590px\"\n      };\n      var signatureButton = {\n        marginLeft: \"-20px\"\n      };\n      var modalStyle = {\n        overlay: {\n          backgroundColor: \"rgba(0, 0, 0,0.5)\"\n        }\n      }; // console.log(\"hello in main page\");\n      // console.log(this.props);\n      // console.log(this.props.location.data['emailId'])\n      // console.log(\"just checking\");\n      // var t = 'Rutvik';\n      //this.setState({displayEmailId:this.props.location.data['emailId']})\n      //console.log(this.state.name);\n\n      console.log(\"Name state object \" + this.state.fullName);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 960\n        },\n        __self: this\n      }, React.createElement(\"link\", {\n        href: \"https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\",\n        rel: \"stylesheet\",\n        integrity: \"sha384-wvfXpqpZZVQGK6TAh5PVlGOfQNHSoD2xbE+QkPxCAFlNEevoEH3Sl0sibVcOQVnN\",\n        crossorigin: \"anonymous\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 961\n        },\n        __self: this\n      }), React.createElement(\"nav\", {\n        className: \"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 962\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        className: \"navbar-brand col-sm-3 col-md-2 mr-0 text-center\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 963\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 967\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 968\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 969\n        },\n        __self: this\n      }))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 972\n        },\n        __self: this\n      }), React.createElement(Navbar, {\n        bg: \"light\",\n        expand: \"lg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 973\n        },\n        __self: this\n      }, React.createElement(Navbar.Brand, {\n        href: \"#home\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 974\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: this.state.userJsonResultOfParticularUserFromIPFS.profilePicHash,\n        style: {\n          height: \"100%\",\n          width: \"70px\"\n        },\n        alt: \"\",\n        className: \"img-responsive\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 974\n        },\n        __self: this\n      })), React.createElement(Navbar.Toggle, {\n        \"aria-controls\": \"basic-navbar-nav\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 975\n        },\n        __self: this\n      }), React.createElement(Navbar.Collapse, {\n        id: \"basic-navbar-nav\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 976\n        },\n        __self: this\n      }, React.createElement(Nav, {\n        className: \"mr-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 977\n        },\n        __self: this\n      }, React.createElement(Nav.Link, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 978\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"primary\",\n        style: {\n          background: \"#365899\"\n        },\n        onClick: this.checkFriendRequest,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 978\n        },\n        __self: this\n      }, \" \", React.createElement(\"span\", {\n        className: \"fa fa-id-badge\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 978\n        },\n        __self: this\n      }), \"   Check Request\")), React.createElement(Nav.Link, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 979\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"outline-secondary\",\n        onClick: this.searchFriends,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 979\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \" fa fa-search\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 979\n        },\n        __self: this\n      }), \"  Search Friend\"))), React.createElement(Button, {\n        variant: \"primary\",\n        style: {\n          marginRight: \"10px\",\n          background: \"#365899\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 981\n        },\n        __self: this\n      }, this.state.fullName), React.createElement(Button, {\n        Button: true,\n        variant: \"light\",\n        onClick: this.signOut,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 986\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        class: \"fa fa-sign-out\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 986\n        },\n        __self: this\n      }), \" Log Out\"))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 991\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 992\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 993\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: mystyle3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 994\n        },\n        __self: this\n      }, React.createElement(ListGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 995\n        },\n        __self: this\n      }, React.createElement(ListGroup.Item, {\n        style: mystyle2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 996\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 997\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 999\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        style: photo,\n        src: this.state.userJsonResultOfParticularUserFromIPFS.profilePicHash,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1000\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1002\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        style: {\n          fontSize: \"20px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1003\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1003\n        },\n        __self: this\n      }, this.state.fullName))))), React.createElement(ListGroup.Item, {\n        style: mystyle,\n        onClick: this.addProfilePic,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1010\n        },\n        __self: this\n      }, \"Add Profile Pic\"), React.createElement(ListGroup.Item, {\n        style: mystyle,\n        onClick: this.getFriendsInform,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1012\n        },\n        __self: this\n      }, \"Friends\")))), React.createElement(\"div\", {\n        className: \"col-7\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1016\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: cardStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1017\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: card,\n        expand: \"false\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1018\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: info,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1019\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        style: photo,\n        src: this.state.userJsonResultOfParticularUserFromIPFS.profilePicHash,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1020\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        style: name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1021\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1021\n        },\n        __self: this\n      }, this.state.fullName))), React.createElement(\"input\", {\n        type: \"text\",\n        style: username,\n        name: \"username\",\n        placeholder: \"what's on your mind,\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1023\n        },\n        __self: this\n      }), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1024\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1025\n        },\n        __self: this\n      }, React.createElement(Button, {\n        style: addPost,\n        id: \"addPost\",\n        onClick: this.openPostModel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1026\n        },\n        __self: this\n      }, \"Add Post\"))))))), React.createElement(Modal, {\n        show: this.state.profilePicModal,\n        onHide: this.closeProfilPicModel,\n        size: \"lg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1040\n        },\n        __self: this\n      }, React.createElement(Modal.Header, {\n        closeButton: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1041\n        },\n        __self: this\n      }, React.createElement(Modal.Title, {\n        style: {\n          color: \"#205663\",\n          paddingLeft: \"310px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1042\n        },\n        __self: this\n      }, \"Add Profile Picture\")), React.createElement(Modal.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1044\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: cardStyle2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1045\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: card2,\n        expand: \"false\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1046\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: info,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1047\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        style: photo,\n        src: this.state.userJsonResultOfParticularUserFromIPFS.profilePicHash,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1048\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        style: name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1049\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1049\n        },\n        __self: this\n      }, this.state.fullName)), React.createElement(\"div\", {\n        style: {\n          textAlign: \"center\",\n          marginTop: \"280px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1050\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: this.state.userJsonResultOfParticularUserFromIPFS.profilePicHash,\n        style: {\n          height: \"100%\",\n          width: \"300px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1051\n        },\n        __self: this\n      }))))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1058\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"file\",\n        onChange: this.captureProfilePicFile,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1059\n        },\n        __self: this\n      })), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1062\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        style: {\n          textAlign: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1063\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: \"LogIn2\",\n        onClick: this.uploadProfilePic,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1064\n        },\n        __self: this\n      }, \"Upload\"))), React.createElement(Modal.Footer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1070\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.closeProfilPicModel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1071\n        },\n        __self: this\n      }, \"Done\"))), React.createElement(Modal, {\n        show: this.state.showModal,\n        onHide: this.closePostModel,\n        stye: modalBorder,\n        size: \"lg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1082\n        },\n        __self: this\n      }, React.createElement(Modal.Header, {\n        closeButton: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1083\n        },\n        __self: this\n      }, React.createElement(Modal.Title, {\n        style: {\n          textAlign: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1084\n        },\n        __self: this\n      }, \" Create Post\")), React.createElement(Modal.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1086\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: cardStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1087\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: card2,\n        expand: \"false\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1088\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: info,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1089\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        style: photo,\n        src: this.state.userJsonResultOfParticularUserFromIPFS.profilePicHash,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1090\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        style: name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1091\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1091\n        },\n        __self: this\n      }, this.state.fullName))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1093\n        },\n        __self: this\n      }), React.createElement(\"textarea\", {\n        style: textAreaStyle,\n        class: \"cstTextarea\",\n        id: \"postTextArea\",\n        rows: \"4\",\n        cols: \"50\",\n        placeholder: \"what's on you\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1095\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        class: \" clearfix\",\n        style: signatureSession,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1105\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"float-left\",\n        style: signatureButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1106\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        class: \"btn btn-primary btn-sm\",\n        onClick: this.about3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1107\n        },\n        __self: this\n      }, \"Add Signature\")), React.createElement(\"div\", {\n        class: \"float-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1109\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        style: postSignature,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1110\n        },\n        __self: this\n      }, this.state.signatureText))), React.createElement(\"hr\", {\n        style: {\n          width: \"40px\",\n          textAlign: \"left\",\n          marginLeft: \"710px\",\n          marginTop: \"-15px\",\n          position: \"relative\",\n          borderTop: \"7px solid\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1113\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1124\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"file\",\n        onChange: this.capturePostFile,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1125\n        },\n        __self: this\n      })), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1128\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        style: name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1130\n        },\n        __self: this\n      }, this.state.captionSetter), React.createElement(\"div\", {\n        style: {\n          textAlign: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1134\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: \"LogIn2\",\n        alt: \"#\",\n        onClick: this.actuallyPost,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1137\n        },\n        __self: this\n      }, \"Post\"))), React.createElement(Modal.Footer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1143\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.closePostModel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1144\n        },\n        __self: this\n      }, \"Done\"))));\n    }\n  }]);\n\n  return MainPage2;\n}(Component);\n\nexport default MainPage2;","map":{"version":3,"sources":["/Users/rutvikpatel/Desktop/Project/Github6/starter_kit/src/components/MainPage2.js"],"names":["React","Component","Web3","Meme","Button","Navbar","Nav","ListGroup","Modal","Card","MDBInput","ReactDOM","Files","sha256","hmacSHA512","Base64","Cryptr","require","CryptoJS","ipfsClient","ipfs","host","port","protocol","MainPage2","props","loadData","console","log","setState","fullName","location","userEmailId","userJsonResultOfParticularUserFromIPFS","userInformationListFromBlockChain","totalUser","userBlockchainResultOfParticularUser","check","state","hasError","document","addEventListener","checkEvent","checkValue","addFriend","history","push","pathname","data","currentEmailId","name","addPost","checkFriendRequest","openTimeline","t","postRead","url","feed","searchFriends","friend","signOut","addProfilePic","profilePicModal","openPostModel","showModal","closePostModel","closeProfilPicModel","getPostLink","captureProfilePicFile","event","preventDefault","target","files","file","reader","window","FileReader","readAsArrayBuffer","onloadend","result","profilePicBuffer","Buffer","capturePostFile","str","type","array","split","array1","videoSet","photoSet","postPicBuffer","uploadProfilePic","groupInformationPassParameter","content","add","error","results","hash","url2","third","profilePicHash","urlhash","get","path","filesrc","userId","myObj","originalContentString","from","JSON","stringify","userContent","userInformationHash","IPFSuserInformationHash","userHash","contract","methods","changeUserInformation","send","account","then","r","makeid","length","characters","charactersLength","i","charAt","Math","floor","random","makeUUID","getFriendsInform","getFriends","arrayData","groupInformationListFromBlockChain","myMap","Map","max","value","groupVersion","toString","set","lastestGroupDetailHash","groupHash","groupData","parse","about","about2","about3","getElementById","readOnly","chromeExtensionData","message","detail","stringPrivateKeyData","privateKeyData","jsonPrivateKeyData","key","FinalPrivateKey","no","substring","privateKey","postText","hashDigest","postTextHashHashDigesh","cryptr","encryptedString","encrypt","postTextDigitalSignature","array2","final","signatureText","actuallyPost","friendList","sessionKey","postTextHash","postPicHash","postHash","today","Date","date","getMonth","getDate","getFullYear","final1","message2","final2","captionSetter","localPostHash","encryptedPostHash","AES","bytes","decrypt","originalText","enc","Utf8","groupDetails","undefined","uuid","userObj","postOwner","sessionKeyDetails","postUUID","image","video","currentGroupVersion","encryptedUserSession","encryptedGroupkey","usr","emailId","open","tempData","postData","groupHashAddress","changeGroupInformation","currentGrooupId","buffer","isVisible","loadWeb3","loadBlockChainData","forceUpdate","ethereum","web3","enable","currentProvider","alert","web3_2","eth","getAccounts","accounts","net","getId","networkId","networkdata","networks","abi","address","Contract","groupCount","call","tt","groupInformation","groupEmailId","groupId","mystyle","padding","fontFamily","cursor","borderStyle","borderColor","fontSize","textAlign","mystyle2","color","backgroundColor","mystyle3","paddingLeft","cardStyle","display","flexDirection","alignItems","cardStyle2","card","boxShadow","position","userSelect","overflow","transition","width","height","maxWidth","marginBottom","borderRadius","card2","info","photo","opacity","fontWeight","username","margin","outline","border","textAreaStyle","float","background","modalPost","modalBorder","fileUpload","signatureSession","marginTop","postSignature","marginLeft","signatureButton","modalStyle","overlay","marginRight","borderTop"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Web3 from 'web3';\nimport Meme from '../abis/Meme.json';\nimport { Button,Navbar,Nav,ListGroup,Modal,Card } from \"react-bootstrap\";\nimport { MDBInput } from 'mdbreact';\nimport ReactDOM from 'react-dom'\nimport Files from 'react-files'\nimport sha256 from 'crypto-js/sha256';\nimport hmacSHA512 from 'crypto-js/hmac-sha512';\nimport Base64 from 'crypto-js/enc-base64';\nconst Cryptr = require('cryptr');\nvar CryptoJS = require(\"crypto-js\");\n\nvar ipfsClient = require('ipfs-http-client');\nvar ipfs = ipfsClient({host:'ipfs.infura.io',port:'5001',protocol: 'https' }) ;;\n\n\nclass MainPage2  extends Component{\n\n  \n    constructor(props){\n        super(props);\n        console.log(props);\n        this.state={\n          account:'',\n          buffer:null,\n          contract:null,\n          userEmailId:'',\n          fullName:'',\n          userJsonResultOfParticularUserFromIPFS:null,\n          userBlockchainResultOfParticularUser:null,\n          totalUser:null,\n          isVisible: false,\n          showModal:false,\n          profilePicModal:false,\n          buffer:null,\n          profilePicBuffer:'',\n          postPicBuffer:'',\n          groupInformationListFromBlockChain:[],\n          groupInformationPassParameter:'',\n          currentGroupVersion:'',\n          videoSet:'no',\n          photoSet:'no',\n          signatureText:'',\n          chromeExtensionData:'',\n          postTextHashHashDigesh:'',\n          postTextDigitalSignature:'',\n          currentGrooupId:0,\n          editTextArea:true,\n          captionSetter:''\n        };       \n      }\n\n      async componentWillMount(){\n        await this.loadData();\n        await this.check();\n        await this.loadWeb3()\n        await this.loadBlockChainData();\n        document.addEventListener('csEvent', this.checkEvent);\n      }\n\n      updateModal(isVisible) {\n        this.state.isVisible = isVisible;\n        this.forceUpdate();\n      }\n      loadData=()=>{\n        console.log(\"in load data\");\n       this.setState({fullName:this.props.location.fullName});\n       this.setState({userEmailId:this.props.location.userEmailId});\n       this.setState({userJsonResultOfParticularUserFromIPFS:this.props.location.userJsonResultOfParticularUserFromIPFS});\n       this.setState({userInformationListFromBlockChain:this.props.location.userInformationListFromBlockChain});\n       this.setState({totalUser:this.props.location.totalUser});\n       this.setState({userBlockchainResultOfParticularUser:this.props.location.userBlockchainResultOfParticularUser});\n    }\n\n    check=()=>{\n       console.log(this.state.fullName);\n       console.log(this.state.userEmailId)\n       console.log(this.state.userJsonResultOfParticularUserFromIPFS);\n       console.log(this.state.totalUser);\n       console.log(this.state.userBlockchainResultOfParticularUser);\n      // //console.log(this.state.totalUserName);\n       console.log(this.state.hasError);\n      console.log(this.state.totalUser);\n      document.addEventListener('csEvent', this.checkEvent);\n\n    }\n      async loadWeb3(){\n        if(window.ethereum){\n          window.web3 = new Web3(window.ethereum);\n          await window.ethereum.enable();\n        }\n        if(window.web3){\n          window.web3 = new Web3(window.web3.currentProvider);\n        }\n        else{\n          window.alert(\"Use Metamask\");\n        } \n      }\n\n      async componentDidMount(){\n        document.addEventListener('csEvent', this.checkEvent);\n      }\n\n\n\n      async loadBlockChainData(){\n        const web3_2 = window.web3;\n        const accounts =  await web3_2.eth.getAccounts();\n        this.setState({account:accounts[0]});\n        const networkId = await web3_2.eth.net.getId();\n        const networkdata= Meme.networks[networkId];\n        if(networkdata){\n          const abi =Meme.abi;\n          const address = networkdata.address;\n          //fetch the contract \n          const contract = web3_2.eth.Contract(abi,address);\n          console.log(contract);\n          this.setState({contract:contract});\n          console.log(contract.methods);\n        //  const MemeHash =await contract.methods.get().call();\n\n\n          var tt= await this.state.contract.methods.groupCount().call();\n          var groupCount=await tt;\n          groupCount=groupCount.toString();\n          console.log(\"group Count\");\n          console.log(groupCount);\n          for(var i=1;i<=groupCount;i++){\n            const groupInformationListFromBlockChain= await this.state.contract.methods.groupInformation(i).call();\n            console.log(groupInformationListFromBlockChain)\n            if(groupInformationListFromBlockChain.groupEmailId==this.state.userEmailId){\n              this.setState({\n                groupInformationListFromBlockChain:[...this.state.groupInformationListFromBlockChain, groupInformationListFromBlockChain]\n             })\n            }\n            \n          }\n          ////\n\n          console.log(this.state.userJsonResultOfParticularUserFromIPFS);\n          var arrayData=this.state.userJsonResultOfParticularUserFromIPFS.friend;\n          for(var i=0;i<arrayData.length;i++){\n           console.log(arrayData[i]);\n          }\n          console.log(this.state.groupInformationListFromBlockChain)\n          let myMap = new Map();\n          var max=-1;\n          for(var i=0;i<this.state.groupInformationListFromBlockChain.length;i++){\n            \n           var value=this.state.groupInformationListFromBlockChain[i].groupVersion;\n           value=value.toString();\n           myMap.set(value,this.state.groupInformationListFromBlockChain[i]);\n           console.log(value);\n           if(value>max){\n             max=value;\n           }\n          }\n          this.setState({currentGroupVersion:max});\n          console.log(\"lastest group version is\");\n          console.log(max);\n          console.log(myMap.get(max));\n          var lastestGroupDetailHash= myMap.get(max);\n          console.log(lastestGroupDetailHash);\n          console.log(\"0------------------------------\");\n         console.log(lastestGroupDetailHash.groupId.toString());\n         this.setState({currentGrooupId:lastestGroupDetailHash.groupId.toString()});\n         console.log(\"0------------------------------\");\n         if(max!=-1){\n          var t= lastestGroupDetailHash.groupHash;\n          var content;\n          ipfs.get(\"/ipfs/\"+t,(error,result)=>{\n            console.log(result[0].path);\n            content=result[0].content;\n            console.log(content);\n           var groupData=JSON.parse(content);\n           console.log(groupData);\n           \n           this.setState({ groupInformationPassParameter:groupData})\n           console.log(this.state.groupInformationPassParameter);\n          })\n         }\n\n\n\n\n\n        }\n        else{\n          window.alert(\"Smart contract not deployed to detected the network\");\n        }\n      }\n      checkValue=()=>{\n        // console.log(this.props.location.TotalUser);\n        // console.log(this.props.location.fullName);\n        //console.log()\n        console.log(this.state. fullName);\n        console.log(this.state.userEmailId);\n        console.log(this.state.userJsonResultOfParticularUserFromIPFS);\n        console.log(this.state.totalUser);\n        console.log(this.state.userBlockchainResultOfParticularUser);\n        console.log(\"Orginal Value\");\n        console.log(this.props.location.userBlockchainResultOfParticularUser);\n      }\n\n      addFriend=()=>{\n       console.log(\"In create Account\");\n          this.props.history.push({\n            pathname: '/AddFriend',\n            data: this.state.currentEmailId,\n            name: this.props.location.name   // your data array of objects\n          })\n\n      }\n      addPost=()=>{\n        this.props.history.push({\n          pathname: '/addPost',\n          data: this.state.currentEmailId,\n          name: this.props.location.name   // your data array of objects\n        })\n      }\n      checkFriendRequest=()=>{\n        console.log(\"In check friend request\");\n        console.log(this.state.userEmailId);\n        console.log(this.state.fullName);\n        console.log(this.state.userJsonResultOfParticularUserFromIPFS);\n        console.log(this.state.totalUser);\n        console.log(this.state.userBlockchainResultOfParticularUser);\n           this.props.history.push({\n             pathname: '/checkRequest2',\n             userEmailId: this.state.userEmailId,\n             fullName:  this.state. fullName,\n             userJsonResultOfParticularUserFromIPFS:this.state.userJsonResultOfParticularUserFromIPFS,\n             totalUser:this.state.totalUser,\n             userBlockchainResultOfParticularUser:this.state.userBlockchainResultOfParticularUser\n           })\n \n       }\n       openTimeline=()=>{\n        console.log(\"In check friend request\");\n        var t=\"adv\";\n        this.props.history.push({\n          pathname: '/Timeline',\n          data: this.state.currentEmailId,\n          name: this.props.location.name   // your data array of objects\n        })\n       }\n       postRead=()=>{\n         var url =\"QmYah59VfHQTNPnhk1f5hwnVqkxRC6CB9xvMjzLro9VBsw\";\n        this.props.history.push({\n          pathname: '/postReader/'+url,\n         // data: this.state.currentEmailId,\n          //name: this.props.location.name   // your data array of objects\n        })\n       }\n\n       feed=()=>{\n\n        this.props.history.push({\n          pathname: '/Feed',\n          data: this.state.currentEmailId,\n          name: this.props.location.name   // your data array of objects\n        })\n       }\n\n       \n       searchFriends=()=>{\n        console.log(\"in people\");\n        this.props.history.push({\n          pathname: '/searchFriends2',\n          userEmailId: this.state.userEmailId,\n          fullName:  this.state. fullName,\n          userJsonResultOfParticularUserFromIPFS:this.state.userJsonResultOfParticularUserFromIPFS,\n          totalUser:this.state.totalUser,\n          userBlockchainResultOfParticularUser:this.state.userBlockchainResultOfParticularUser\n        })\n       }\n\n       friend=()=>{\n        this.props.history.push({\n          pathname: '/friend',\n          data: this.state.currentEmailId,\n          name: this.props.location.name   // your data array of objects\n        })\n       }\n       signOut=()=>{\n        this.props.history.push({\n          pathname: '/login',\n           // your data array of objects\n        })\n       }\n       addProfilePic=()=>{\n        // this.props.history.push({\n        //   pathname: '/addProfilePic',\n        //   userEmailId: this.state.userEmailId,\n        //   fullName:  this.state. fullName,\n        //   userJsonResultOfParticularUserFromIPFS:this.state.userJsonResultOfParticularUserFromIPFS,\n        //   totalUser:this.state.totalUser,\n        //   userBlockchainResultOfParticularUser:this.state.userBlockchainResultOfParticularUser\n        // })\n\n        this.setState({profilePicModal : true });\n     \n       }\n       openPostModel=()=>{\n         console.log(\"inside open\");\n         this.setState({ showModal: true });\n       }\n       closePostModel=()=>{\n        console.log(\"inside close\");\n        this.setState({ showModal: false });\n       }\n       closeProfilPicModel=()=>{\n        console.log(\"inside close\");\n        this.setState({ profilePicModal: false });\n       }\n       getPostLink=()=>{\n        this.setState({ showModal: true });\n      }\n      captureProfilePicFile=(event)=>{\n        console.log(ipfs );\n        event.preventDefault();\n        console.log(\"file is capture\");\n        console.log(event);\n        console.log(event.target.files[0]);\n        var file = event.target.files[0];\n        var reader = new window.FileReader();\n        reader.readAsArrayBuffer(file);  \n        reader.onloadend = ()=>{\n          console.log(reader.result);\n          this.setState({profilePicBuffer:Buffer(reader.result)})\n          console.log(\"buffer\",Buffer(reader.result));\n        }\n        //process the file inside here \n    }\n\n\n  \n\n    capturePostFile=(event)=>{\n    \n      console.log(ipfs );\n        event.preventDefault();\n        console.log(\"file is capture\");\n        console.log(event);\n        //type\n        console.log(event.target.files[0]);\n        var str = event.target.files[0].type;\n        var array = str.split('/');\n        var array1=array[0];\n        if(array1=='video'){\n          console.log(array1);\n          ///\n          this.setState({videoSet:\"yes\"});\n          console.log(this.state.videoSet);\n          ///\n        }\n        else if(array1=='image'){\n          console.log(array1);\n          this.setState({photoSet:\"yes\"});\n          console.log(this.state.photoSet);\n        }\n        var file = event.target.files[0];\n        var reader = new window.FileReader();\n        reader.readAsArrayBuffer(file);  \n        reader.onloadend = ()=>{\n          console.log(reader.result);\n          this.setState({postPicBuffer:Buffer(reader.result)})\n          console.log(\"buffer\",Buffer(reader.result));\n          console.log(this.state.videoSet);\n          console.log(this.state.photoSet);\n        }   \n       \n    }\n\n    uploadProfilePic=()=>{\n        console.log(this.state.groupInformationPassParameter);\n      console.log(\"uploadProfilePic\");\n     // event.preventDefault();\n      console.log(\"in submit event\");\n      const file = {\n         content: this.state.profilePicBuffer\n         //content:this.\n      }\n      var t;\n      ipfs.add(file,(error,results)=>{\n          //Do Stuff here\n         console.log(\"IPFS RESULT\",results[0].hash);\n          var hash=results[0].hash;\n          t=results[0].hash;\n          var url =\"https://ipfs.infura.io/ipfs/\";\n          var url2=t;\n          var third=url+url2;\n          console.log(third);\n          this.state.userJsonResultOfParticularUserFromIPFS.profilePicHash=third;\n          console.log(this.state.userJsonResultOfParticularUserFromIPFS.profilePicHash);\n          this.setState({urlhash:t});\n          if(error){\n            console.log(error);\n            return;\n          }\n          var content;\n          ipfs.get(\"/ipfs/\"+t,(error,result)=>{\n            console.log(result[0].path);\n            content=result[0].content;\n          })\n   \n          //Step 2 is to store file on blockchain\n          this.filesrc=\"http://localhost:8080/ipfs/\"+hash;\n          console.log(\"https://ipfs.infura.io/ipfs/\"+hash);\n          console.log(this.filesrc);\n          this.setState({profilePicHash:hash});\n\n          var userId=   this.state.userBlockchainResultOfParticularUser.userId;\n          var myObj=this.state.userJsonResultOfParticularUserFromIPFS;\n          console.log(myObj);\n          var originalContentString = Buffer.from(JSON.stringify(myObj));\n            // The json is change to string format \n            const userContent= {\n              content:originalContentString\n          }\n          \n          ipfs.add(userContent,(error,results)=>{\n            console.log(results);\n            var userInformationHash= results[0].hash;\n           // this.setState({userJsonResultOfParticularUserFromIPFS:userInformationHash});\n          //console.log(this.state.userJsonResultOfParticularUserFromIPFS);\n            console.log(results[0].hash);\n            this.setState({IPFSuserInformationHash:results[0].hash});   \n            this.state.userBlockchainResultOfParticularUser.userHash=results[0].hash;\n            console.log(userId);          \n               this.state.contract.methods.changeUserInformation(userId,userInformationHash).send({from: this.state.account}).then((r)=>{\n                  console.log(r);\n              });  \n              this.state.userBlockchainResultOfParticularUser.userHash=userInformationHash;\n              console.log(this.state.userBlockchainResultOfParticularUser.userHash);\n          });\n\n        })\n    }\n\n\n\n    makeid=(length)=>{\n      var result           = '';\n      var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\n      var charactersLength = characters.length;\n      for ( var i = 0; i < length; i++ ) {\n         result += characters.charAt(Math.floor(Math.random() * charactersLength));\n      }\n      return result;\n   }\n   makeUUID=(length)=>{\n    var result           = '';\n    var characters       = 'abcdefghijklmnopqrstuvwxyz';\n    var charactersLength = characters.length;\n    for ( var i = 0; i < length; i++ ) {\n       result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n }\n\n\n getFriendsInform=()=>{\n  console.log(this.state.groupInformationPassParameter);\n  this.props.history.push({\n    pathname: '/timeline',\n    userEmailId: this.state.userEmailId,\n    fullName:  this.state. fullName,\n    userJsonResultOfParticularUserFromIPFS:this.state.userJsonResultOfParticularUserFromIPFS,\n    totalUser:this.state.totalUser,\n    userBlockchainResultOfParticularUser:this.state.userBlockchainResultOfParticularUser\n  })\n\n }\n\n\n   getFriends=()=>{\n     console.log(this.state.userJsonResultOfParticularUserFromIPFS);\n     var arrayData=this.state.userJsonResultOfParticularUserFromIPFS.friend;\n     for(var i=0;i<arrayData.length;i++){\n      console.log(arrayData[i]);\n     }\n     console.log(this.state.groupInformationListFromBlockChain)\n     let myMap = new Map();\n     var max=-1;\n     for(var i=0;i<this.state.groupInformationListFromBlockChain.length;i++){\n       \n      var value=this.state.groupInformationListFromBlockChain[i].groupVersion;\n      value=value.toString();\n      myMap.set(value,this.state.groupInformationListFromBlockChain[i]);\n      console.log(value);\n      if(value>max){\n        max=value;\n      }\n     }\n     console.log(\"lastest group version is\");\n     console.log(max);\n     console.log(myMap.get(max));\n     var lastestGroupDetailHash= myMap.get(max);\n\n    var t= lastestGroupDetailHash.groupHash;\n     var content;\n       ipfs.get(\"/ipfs/\"+t,(error,result)=>{\n         console.log(result[0].path);\n         content=result[0].content;\n         console.log(content);\n        var groupData=JSON.parse(content);\n        console.log(groupData);\n        \n        this.setState({ groupInformationPassParameter:groupData})\n        console.log(this.state.groupInformationPassParameter);\n       })\n       \n\n   }\n\n\n \n\n   about=()=>{\n    console.log(\"outside the loop\");\n    this.setState({photoSet:\"yes\"});\n  }\n  about2=()=>{\n    console.log(\"outside the loop\");\n    console.log(this.state.groupInformationPassParameter);\n    this.setState({videoSet:\"yes\"});\n  }\n  about3=()=>{\n    document.getElementById(\"postTextArea\").readOnly = true;\n    console.log(this.state.chromeExtensionData);\n    var message = this.state.chromeExtensionData.detail;\n    var stringPrivateKeyData=message.privateKeyData;\n    console.log(stringPrivateKeyData);\n    var jsonPrivateKeyData=JSON.parse(stringPrivateKeyData);\n    console.log(jsonPrivateKeyData);\n    for (var key in jsonPrivateKeyData) {\n      console.log(key);\n      console.log(jsonPrivateKeyData[key]);\n      var FinalPrivateKey;\n      if(this.state.userEmailId==jsonPrivateKeyData[key]){\n        console.log(\"in if \");\n        console.log(key);\n        console.log(\"match found\");\n          var no=key.substring(7,key.length);\n          var privateKey=\"privateKey\";\n          var result=privateKey+no;\n          console.log(result);\n          FinalPrivateKey=jsonPrivateKeyData[result];\n          console.log(FinalPrivateKey);\n          this.setState({privateKey: FinalPrivateKey});\n          var postText=document.getElementById(\"postTextArea\").value;\n          console.log(postText);\n\n          const hashDigest = sha256(postText);\n          this.setState({postTextHashHashDigesh:hashDigest});\n          console.log(hashDigest);\n          const cryptr = new Cryptr(FinalPrivateKey);\n          const encryptedString = cryptr.encrypt(postText);\n          console.log(encryptedString);\n          this.setState({postTextDigitalSignature:encryptedString});\n          break;\n      }\n      \n    }\n    //\n    var str = this.state.fullName;\n    var array = str.split(\" \");\n    var array1=array[0];\n    var array2=array[1];\n    var array1=array1.substring(0,1);\n    var array2=array2.substring(0,1);\n    var final =array1+array2;\n    console.log(final);\n    //signatureText\n    this.setState({ signatureText:final});\n    console.log(this.state.chromeExtensionData);\n\n  }\n\n  checkEvent = (event) => {\n    \n    var data = event.detail;\n    console.log(data);\n    this.setState({chromeExtensionData:event});\n    console.log(\"Nv Enter:\", event);\n    console.log(this.state.chromeExtensionData);\n    }\n    actuallyPost=()=>{\n        console.log(\"This is actually post \");\n        console.log(this.state.groupInformationPassParameter);\n        console.log(this.state.groupInformationPassParameter.friend);\n        var friendList=this.state.groupInformationPassParameter.friend;\n        console.log(\"////////////////\")\n        console.log(friendList);\n        console.log(\"////////////////\")\n      var postText=document.getElementById(\"postTextArea\").value;\n      var sessionKey=this.makeid(20);\n      console.log(postText);\n      var postTextHash;\n      var postPicHash;\n      var postHash;\n    //This is the the data which is enter by the user \n    var userInformationHash;\n    var originalContentString = Buffer.from(JSON.stringify(postText));\n      // The json is change to string format \n      const userContent= {\n        content:originalContentString\n    }\n    ipfs.add(userContent,(error,results)=>{\n              console.log(results);\n              userInformationHash= results[0].hash;\n              console.log(results[0].hash);\n              postTextHash=results[0].hash;\n              console.log(postTextHash)\n            const file = {\n              content: this.state.postPicBuffer\n              //content:this.\n          }\n      var t;\n      ipfs.add(file,(error,results)=>{\n       //Do Stuff here\n      console.log(\"IPFS RESULT\",results[0].hash);\n       var hash=results[0].hash;\n       t=results[0].hash;\n       var url =\"https://ipfs.infura.io/ipfs/\";\n       var url2=t;\n       var third=url+url2;\n       postPicHash=results[0].hash;\n       console.log(\"third\");\n       console.log(third);\n       if(error){\n         console.log(error);\n         return;\n       }\n       var content;\n       ipfs.get(\"/ipfs/\"+t,(error,result)=>{\n         console.log(result[0].path);\n         content=result[0].content;\n       })\n       //Step 2 is to store file on blockchain\n       this.filesrc=\"http://localhost:8080/ipfs/\"+hash;\n       console.log(\"https://ipfs.infura.io/ipfs/\"+hash);\n\n            var myObj = {\n              \"postTextHash\":postTextHash,\n              \"postPicHash\":postPicHash,\n              \"digitalSignature\":this.state.postTextDigitalSignature\n            };\n          //This is the the data which is enter by the user \n          \n          console.log(myObj);\n          console.log(this.state.chromeExtensionData);\n          var originalContentString = Buffer.from(JSON.stringify(myObj));\n            // The json is change to string format \n            const userContent= {\n              content:originalContentString\n          }\n          var today = new Date();\n          var date = (today.getMonth()+1)+'-'+today.getDate()+'-'+today.getFullYear();\n          var message = \" I have just create a new post at \";\n          var final1 = message+date;\n          var message2=\". Just the section down bellow to view the post\";\n          var final2=final1+message2;\n          this.setState({captionSetter:final2});\n          \n          ipfs.add(userContent,(error,results)=>{\n            console.log(results);\n            postHash= results[0].hash;\n            console.log(postHash);\n            var localPostHash=results[0].hash;\n            console.log(this.state.fullName);\n            console.log(this.state.userBlockchainResultOfParticularUser);\n            console.log(this.state.userJsonResultOfParticularUserFromIPFS);\n            console.log(sessionKey);\n            \n\n\n            console.log(\"this is encrypted posh hahs\");\n            var encryptedPostHash= CryptoJS.AES.encrypt(postHash, sessionKey).toString();\n            var bytes  = CryptoJS.AES.decrypt(encryptedPostHash, sessionKey);\n            var originalText = bytes.toString(CryptoJS.enc.Utf8);\n            console.log(originalText); // 'my message'\n            var arrayData=this.state.groupInformationPassParameter.groupDetails;\n            console.log(arrayData);\n            console.log(arrayData==undefined);\n            var uuid = this.makeUUID(40);\n            console.log(this.state.photoSet)\n            console.log(this.state.videoSet)\n            console.log(friendList);\n            var userObj={\n              postOwner:this.state.fullName,\n              postHash:results[0].hash,\n              sessionKey:sessionKey,\n              encryptedPostHash:encryptedPostHash,\n              groupVersion:this.state.groupInformationPassParameter.groupVersion,\n              sessionKeyDetails:[],\n              postUUID:uuid,\n              image:this.state.photoSet,\n              video:this.state.videoSet,\n              groupVersion:this.state.currentGroupVersion,\n              friendList:friendList\n            }\n            this.setState({videoSet:\"no\"});\n            this.setState({photoSet:\"no\"});\n           \n            console.log(\"Checking the data\");\n            console.log(userObj);\n            console.log(\"------\");\n            \n            if(arrayData==undefined){\n              userObj.groupVersion=0;\n            }\n            else{\n              for(var i=0;i<arrayData.length;i++){\n                console.log(arrayData[i]);\n                var encryptedUserSession= CryptoJS.AES.encrypt(sessionKey, arrayData[i].encryptedGroupkey).toString();\n                var usr={\n                  emailId:arrayData[i].emailId,\n                  encryptedUserSession:encryptedUserSession,\n                  userHash:arrayData[i].userHash\n                }\n                console.log(usr);\n                userObj.sessionKeyDetails.push(usr);\n              }\n            }\n\n            console.log(\"Json data\");\n            console.log(userObj);\n            this.setState({ signatureText:''});\n            window.open( \n              \"http://localhost:8888/Facebook-sdk/facebooksdk/?url?=http://localhost:3000/MainPage/\"+uuid, \"_blank\"); \n            // uuid=1;\n            // var date =  new Date();\n            // var stringData=date.toString();\n            //////\n\n            // this.state.contract.methods.createPost(this.state.userEmailId,userInformationHash).send({from: this.state.account}).then((r)=>{\n            //   console.log(r);\n            console.log(userObj);\n            var tempData = this.state.groupInformationPassParameter;\n             tempData.postData.push(userObj);\n             console.log(tempData);\n            var originalContentString = Buffer.from(JSON.stringify(tempData));\n            // The json is change to string format \n            const userContent= {\n              content:originalContentString\n          }\n          ipfs.add(userContent,(error,results)=>{\n\n              var groupHashAddress=results[0].hash;\n              console.log(groupHashAddress);\n              //string memory _postedByEmailId,string memory _postHash, uint _uniquePostId ,string memory _currentDateAndTime\n            this.state.contract.methods.changeGroupInformation(this.state.currentGrooupId,groupHashAddress).send({from: this.state.account}).then((r)=>{\n              console.log(r);\n            });\n            \n            document.getElementById(\"postTextArea\").readOnly = true;\n          });\n\n            ///////\n          });\n         \n          // var userObj={\n          //   postOwner:this.state.fullName,\n          //   postHash:postHash,\n          //   sessionKey:sessionKey,\n            \n          // }\n\n     })\n\n\n\n  });\n\n\n\n    }\n\n\n    render(){\n      const mystyle = {\n        padding: \"20px\",\n        fontFamily: \"Arial\",\n        cursor: \"pointer\",\n        borderStyle: \"solid\",\n        borderColor: \"#365899\",\n        fontSize:\"20px\",\n        textAlign: \"center\"\n       \n      };\n      const mystyle2 = {\n        padding: \"10px\",\n        fontFamily: \"Arial\",\n        cursor: \"pointer\",\n        borderStyle: \"solid\",\n        color:\"while\",\n        backgroundColor: \"#365899\",\n        color:\"#fff\"\n      };\n      const mystyle3={\n        paddingLeft:\"20px\"\n     }\n\n      var cardStyle={\n        \n        padding:\"10px 10px 10px 10px\",\n        display:\"flex\",\n        flexDirection:\"column\",\n        alignItems:\"center\",\n       // width:\"1000px \n    }\n    var cardStyle2={\n        \n      padding:\"10px 10px 10px 10px\",\n      display:\"flex\",\n      flexDirection:\"column\",\n      alignItems:\"center\",\n      textAlign:\"center\"\n     // width:\"1000px \n  }\n\n    var card={\n      boxShadow:\"0px 0px 0.5px rgba(10,10,10,.3)\",\n      alignItems:\"center\",\n      position:\"relative\",\n      userSelect:\"none\",\n      overflow:\"hidden\",\n      transition:\"all .5s ease\",\n      padding:\"10px\",\n      width:\"850px\",\n      height:\"280px\",\n      maxWidth:\"100%\",\n      backgroundColor:\"white\",\n      marginBottom:\"10px\",\n      fontSize:\"14px\",\n      borderRadius:\"3px\",\n      borderStyle: \"solid\",\n      borderColor: \"#365899\"\n    }\n    var card2={\n      boxShadow:\"0px 0px 0.5px rgba(10,10,10,.3)\",\n      alignItems:\"center\",\n      position:\"relative\",\n      userSelect:\"none\",\n      overflow:\"hidden\",\n      transition:\"all .5s ease\",\n      padding:\"10px\",\n      width:\"950px\",\n      height:\"280px\",\n      maxWidth:\"100%\",\n      backgroundColor:\"white\",\n      marginBottom:\"10px\",\n      fontSize:\"14px\",\n      borderRadius:\"3px\",\n     \n    }\n    var info={\n        display:\"flex\",\n        alignItems:\"center\",\n        height:\"40px\"\n      }\n      var photo={\n        height:\"40px\",\n        width:\"40px\",\n        backgroundColor:\"gray\",\n        opacity:\".8\",\n        borderRadius:\"100%\"\n      }\n    \n      var name={\n        \n          fontWeight:\"bold\",\n          color:\"rgb(66, 103, 178)\",\n          opacity:\".9\",\n          paddingLeft:\"20px\",\n      }\n      var username= {\n        margin:\"15px 0\",\n        padding:\"15px 10px\",\n        width:\"100%\",\n        outline:\"none\",\n        border:\"1px solid #bbb\",\n        borderRadius:\"20px\",\n        display:\"inline-block\",\n        fontSize:\"20px\"\n        \n      }\n      var textAreaStyle={\n        border:\"1px solid #bbb\",\n        borderRadius:\"20px\",\n        display:\"inline-block\",\n        fontSize:\"20px\",\n        color:\"rgb(66, 103, 178)\",\n        width:\"600px\"\n      }\n      var addPost= {\n        float: \"right\",\n        background: \"#365899\",\n        border: \"none\",\n        color: \"#fff\",\n        fontWeight: \"bold\",\n        //padding: \"10px 15px\",\n        //borderRadius: \"6px\"\n      }\n      var modalPost= {\n     \n        background: \"#365899\",\n        border: \"none\",\n        color: \"#fff\",\n        fontWeight: \"bold\",\n        //padding: \"10px 15px\",\n        //borderRadius: \"6px\"\n      }\n\n      var modalBorder={\n        borderStyle: \"solid\",\n        borderColor: \"#365899\"\n      }\n      var fileUpload={\n        fontSize: \"20px\",\n        height:\"40px\",\n        color:\"blue\",\n        background: \"#365899\",\n        borderStyle: \"solid\",\n        borderColor: \"#365899\"\n      }\n      var signatureSession={\n        marginTop:\"220px\",\n        position: \"absolute\"\n      }\n      \n      var postSignature ={\n        fontFamily: \"cursive\",\n        fontSize: \"24px\",\n        color: \"#00664b\",\n        marginLeft:\"590px\"\n        \n    }\n    var signatureButton={\n      marginLeft:\"-20px\"\n    }\n      const modalStyle = {\n\toverlay: {\n\t\tbackgroundColor: \"rgba(0, 0, 0,0.5)\"\n\t}\n};\n        // console.log(\"hello in main page\");\n        // console.log(this.props);\n        // console.log(this.props.location.data['emailId'])\n        // console.log(\"just checking\");\n\n        // var t = 'Rutvik';\n        //this.setState({displayEmailId:this.props.location.data['emailId']})\n        //console.log(this.state.name);\n      console.log(\"Name state object \"+this.state.fullName);\n        return(\n            <div>\n                <link href=\"https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\" rel=\"stylesheet\" integrity=\"sha384-wvfXpqpZZVQGK6TAh5PVlGOfQNHSoD2xbE+QkPxCAFlNEevoEH3Sl0sibVcOQVnN\" crossorigin=\"anonymous\"></link>\n                <nav className=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\n                    <a\n                      className=\"navbar-brand col-sm-3 col-md-2 mr-0 text-center\"\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\">\n                    <h1></h1>\n                    <p></p>\n                    <div></div>\n                    </a>\n                 </nav>\n                 <br></br>\n                <Navbar bg=\"light\" expand=\"lg\">\n                    <Navbar.Brand href=\"#home\"><img  src={this.state.userJsonResultOfParticularUserFromIPFS.profilePicHash}  style={{height: \"100%\",  width:\"70px\" }} alt=\"\" className=\"img-responsive\" /></Navbar.Brand>\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\n                        <Nav className=\"mr-auto\">\n                        <Nav.Link ><Button variant=\"primary\" style={{background:\"#365899\"}} onClick={this.checkFriendRequest}> <span className=\"fa fa-id-badge\"></span>   Check Request</Button></Nav.Link>\n                        <Nav.Link ><Button variant=\"outline-secondary\" onClick={this.searchFriends}><span className=\" fa fa-search\"></span>  Search Friend</Button></Nav.Link>\n                        </Nav>\n                    <Button variant=\"primary\"  style={{marginRight: \"10px\",background:\"#365899\" }}>\n                    \n                     {this.state.fullName}\n                     \n                     </Button>\n                    <Button Button variant=\"light\"  onClick={this.signOut} ><span class=\"fa fa-sign-out\"></span> Log Out</Button>\n                  \n                </Navbar.Collapse>\n                </Navbar>\n\n                <div>\n                    <div className=\"row\">\n                    <div className=\"col-3\">\n                      <div style={ mystyle3}>\n                      <ListGroup>\n                        <ListGroup.Item style={mystyle2}>\n                          <div className=\"row\">\n                           \n                            <div className=\"col-2\">\n                              <img style={photo}  src= {this.state.userJsonResultOfParticularUserFromIPFS.profilePicHash} ></img>\n                              </div>\n                              <div className=\"col-10\">\n                              <span style={{fontSize:\"20px\"}}><h4>{this.state.fullName}</h4></span>\n                              </div>\n                                                        \n                          </div>\n                         \n                        </ListGroup.Item>\n                         {/* <ListGroup.Item style={mystyle} onClick={this. getFriendsInform} >Friend List</ListGroup.Item>  */}\n                        <ListGroup.Item style={mystyle} onClick={this.addProfilePic} >Add Profile Pic</ListGroup.Item>\n                        {/* <ListGroup.Item style={mystyle} onClick={this.about}>About</ListGroup.Item> */}\n                        <ListGroup.Item style={mystyle}  onClick={this.getFriendsInform} >Friends</ListGroup.Item>\n                      </ListGroup>\n                      </div>\n                    </div>\n                    <div className=\"col-7\">\n                    <div style={cardStyle}>\n                        <div style={card} expand=\"false\">\n                          <div style={info}>\n                              <img style={photo} src={this.state.userJsonResultOfParticularUserFromIPFS.profilePicHash} ></img>\n                            <div style={name}><h4>{this.state.fullName}</h4></div>\n                          </div>\n                          <input type=\"text\" style={username} name=\"username\" placeholder=\"what's on your mind,\" required />  \n                          <hr></hr>\n                          <div>\n                          <Button style={addPost}  id=\"addPost\"  onClick={this.openPostModel}  >Add Post</Button>\n                          </div>\n                          \n                          {/* <button type=\"button\" id=\"addPost\" >Click Me!</button> */}\n                        </div>\n                    </div>\n                    </div>\n                  </div>\n               </div> \n\n\n   \n         \n\n          <Modal show={this.state.profilePicModal} onHide={this.closeProfilPicModel}  size=\"lg\">\n                  <Modal.Header closeButton>\n                    <Modal.Title style={{color:\"#205663\", paddingLeft:\"310px\"}}>Add Profile Picture</Modal.Title>\n                  </Modal.Header>\n                  <Modal.Body>\n                  <div style={cardStyle2}>\n                          <div style={card2} expand=\"false\">\n                            <div style={info}>\n                                <img style={photo} src={this.state.userJsonResultOfParticularUserFromIPFS.profilePicHash} ></img>\n                              <div style={name}><h4>{this.state.fullName}</h4></div>\n                              <div style={{textAlign:\"center\", marginTop:\"280px\"}} >\n                               <img src={this.state.userJsonResultOfParticularUserFromIPFS.profilePicHash}  style={{height: \"100%\",  width:\"300px\" }}></img>\n                             </div>\n                            </div>\n                          </div>\n                    </div>\n                   \n                     \n                    <div>\n                    <input type=\"file\" onChange={this.captureProfilePicFile}/> \n                    </div>\n   \n                    <hr></hr>\n                    <div style={{textAlign:\"center\"}}>\n                    <Button className=\"LogIn2\" onClick={this.uploadProfilePic}>\n                           Upload\n                    </Button>\n                    </div>\n                    \n                  </Modal.Body>\n                  <Modal.Footer>\n                  <Button onClick={this.closeProfilPicModel}>Done</Button>\n                </Modal.Footer>\n              </Modal>\n\n\n\n\n          \n\n\n\n              <Modal show={this.state.showModal} onHide={this.closePostModel} stye={modalBorder}  size=\"lg\">\n                  <Modal.Header closeButton>\n                   <Modal.Title  style={{textAlign:\"center\"}} > Create Post</Modal.Title>\n                  </Modal.Header>\n                  <Modal.Body>\n                  <div style={cardStyle}>\n                          <div style={card2} expand=\"false\">\n                            <div style={info}>\n                                <img style={photo} src={this.state.userJsonResultOfParticularUserFromIPFS.profilePicHash} ></img>\n                              <div style={name}><h4>{this.state.fullName}</h4></div>\n                            </div>\n                            <br></br>\n                            {/* <MDBInput type=\"textarea\"  id=\"postTextArea\" rows=\"5\" required />      */}\n                            <textarea style={textAreaStyle} class=\"cstTextarea\" id=\"postTextArea\" rows=\"4\" cols=\"50\" placeholder=\"what's on you\"></textarea>\n                          </div>\n                          {/* <div class=\"clearfix\" style={signatureButton}>\n                            <div class=\"pull-right\">\n                            <Button variant=\"primary\" size=\"sm\" >Add Signature</Button>\n                            <div style={postSignature}>\n                                RP\n                            </div>\n                            </div>\n                          </div> */}\n                          <div class=\" clearfix\" style={signatureSession}>\n                            <div class=\"float-left\"style={signatureButton}>\n                              <button type=\"button\" class=\"btn btn-primary btn-sm\" onClick={this.about3}  >Add Signature</button>\n                            </div>\n                            <div class=\"float-right\">\n                            <span style={postSignature}>{this.state.signatureText}</span>\n                            </div>\n                          </div>\n                           <hr style={{width:\"40px\",textAlign:\"left\",marginLeft:\"710px\",marginTop:\"-15px\",  position:\"relative\",borderTop: \"7px solid\" }}></hr> \n                          {/* //style={{textAlign:\"center\"}} */}\n                          {/* <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\" >\n                            <button type=\"button\" className=\"btn btn-primary\"  onClick={this.about}>Image</button>\n                            <button type=\"button\" className=\"btn btn-secondary\" \n        \n                            style={{backgroundColor: \"white\",borderColor:\"white\"  }}\n                            >Middle</button>\n                            <button type=\"button\" className=\"btn btn-secondary\"onClick={this.about2}>Video</button>\n                        </div> */}\n                    </div>\n                    <div>\n                    <input type=\"file\"  onChange={this.capturePostFile}/> \n                    </div>\n   \n                    <hr></hr>\n\n                    <p style={name}>\n                      {this.state.captionSetter}\n                    </p>\n\n                    <div style={{textAlign:\"center\"}}>\n\n\n                    <Button className=\"LogIn2\" alt=\"#\" onClick={this.actuallyPost}>\n                           Post\n                    </Button>\n                    </div>\n\n                  </Modal.Body>\n                  <Modal.Footer>\n                  <Button onClick={this.closePostModel}>Done</Button>\n                </Modal.Footer>\n              </Modal>\n\n\n\n            </div>\n          \n\n            \n        );\n    }\n}\n\nexport default MainPage2;"]},"metadata":{},"sourceType":"module"}