{"ast":null,"code":"import _regeneratorRuntime from \"/Users/rutvikpatel/Desktop/Project/BlockChainApp/BlockChainWithIPFS/starter_kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/rutvikpatel/Desktop/Project/BlockChainApp/BlockChainWithIPFS/starter_kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/rutvikpatel/Desktop/Project/BlockChainApp/BlockChainWithIPFS/starter_kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rutvikpatel/Desktop/Project/BlockChainApp/BlockChainWithIPFS/starter_kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/rutvikpatel/Desktop/Project/BlockChainApp/BlockChainWithIPFS/starter_kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rutvikpatel/Desktop/Project/BlockChainApp/BlockChainWithIPFS/starter_kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/rutvikpatel/Desktop/Project/BlockChainApp/BlockChainWithIPFS/starter_kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/rutvikpatel/Desktop/Project/BlockChainApp/BlockChainWithIPFS/starter_kit/src/components/MainPage.js\";\nimport React, { Component } from 'react';\nimport Web3 from 'web3';\nimport Meme from '../abis/Meme.json';\nimport { Form, Button, Container, Row, Col, FormGroup, FormControl, ControlLabel, Card, ButtonToolbar } from \"react-bootstrap\";\nimport Jumbotron from 'react-bootstrap/Jumbotron';\n\nvar ipfsClient = require('ipfs-http-client'); // var ipfs = ipfsClient({host:'infura.io',port:'5001',protocol: 'https' }) \n\n\nvar ipfs = ipfsClient({\n  host: 'ipfs.infura.io',\n  port: '5001',\n  protocol: 'https'\n});\n;\n\nvar MainPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MainPage, _Component);\n\n  function MainPage(props) {\n    var _this;\n\n    _classCallCheck(this, MainPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MainPage).call(this, props));\n\n    _this.addFriend = function () {\n      console.log(\"In create Account\");\n\n      _this.props.history.push({\n        pathname: '/AddFriend',\n        data: _this.state.currentEmailId,\n        name: _this.props.location.name // your data array of objects\n\n      });\n    };\n\n    _this.addPost = function () {\n      _this.props.history.push({\n        pathname: '/addPost',\n        data: _this.state.currentEmailId,\n        name: _this.props.location.name // your data array of objects\n\n      });\n    };\n\n    _this.checkFriendRequest = function () {\n      console.log(\"In check friend request\");\n\n      _this.props.history.push({\n        pathname: '/CheckRequest',\n        data: _this.state.currentEmailId,\n        name: _this.props.location.name // your data array of objects\n\n      });\n    };\n\n    _this.openTimeline = function () {\n      console.log(\"In check friend request\");\n      var t = \"adv\";\n\n      _this.props.history.push({\n        pathname: '/Timeline',\n        data: _this.state.currentEmailId,\n        name: _this.props.location.name // your data array of objects\n\n      });\n    };\n\n    _this.postRead = function () {\n      var url = \"QmYah59VfHQTNPnhk1f5hwnVqkxRC6CB9xvMjzLro9VBsw\";\n\n      _this.props.history.push({\n        pathname: '/postReader/' + url // data: this.state.currentEmailId,\n        //name: this.props.location.name   // your data array of objects\n\n      });\n    };\n\n    _this.feed = function () {\n      _this.props.history.push({\n        pathname: '/Feed',\n        data: _this.state.currentEmailId,\n        name: _this.props.location.name // your data array of objects\n\n      });\n    };\n\n    _this.addProfilePic = function () {\n      _this.props.history.push({\n        pathname: '/addProfile',\n        data: _this.state.currentEmailId,\n        name: _this.props.location.name // your data array of objects\n\n      });\n    };\n\n    _this.peopleOnApp = function () {\n      console.log(\"in people\");\n\n      _this.props.history.push({\n        pathname: '/peopleOnApp',\n        data: _this.state.currentEmailId,\n        name: _this.props.location.name // your data array of objects\n\n      });\n    };\n\n    _this.friend = function () {\n      _this.props.history.push({\n        pathname: '/friend',\n        data: _this.state.currentEmailId,\n        name: _this.props.location.name // your data array of objects\n\n      });\n    };\n\n    _this.signOut = function () {\n      _this.props.history.push({\n        pathname: '/SigIn' // your data array of objects\n\n      });\n    };\n\n    console.log(_this.props.location.name);\n    _this.state = {\n      account: '',\n      buffer: null,\n      contract: null,\n      userEmailId: ''\n    };\n    return _this;\n  }\n\n  _createClass(MainPage, [{\n    key: \"componentWillMount\",\n    value: function () {\n      var _componentWillMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var tempName, tempEmailId;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                console.log(\"in component will mount\");\n                console.log(this.props.location.name);\n                console.log(this.props.location.data);\n                console.log(tempEmailId);\n                tempName = this.props.location.name;\n                tempEmailId = this.props.location.data;\n                console.log(tempName);\n                console.log(tempEmailId);\n                console.log(tempEmailId);\n                this.setState({\n                  currentName: tempName\n                });\n                this.setState({\n                  currentEmailId: tempEmailId\n                });\n                _context.next = 13;\n                return this.loadWeb3();\n\n              case 13:\n                _context.next = 15;\n                return this.loadBlockChainData();\n\n              case 15:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentWillMount() {\n        return _componentWillMount.apply(this, arguments);\n      }\n\n      return componentWillMount;\n    }()\n  }, {\n    key: \"loadWeb3\",\n    value: function () {\n      var _loadWeb = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                console.log(\"hello in load web3\");\n\n                if (!window.ethereum) {\n                  _context2.next = 5;\n                  break;\n                }\n\n                window.web3 = new Web3(window.ethereum);\n                _context2.next = 5;\n                return window.ethereum.enable();\n\n              case 5:\n                if (window.web3) {\n                  window.web3 = new Web3(window.web3.currentProvider);\n                } else {\n                  window.alert(\"Use Metamask\");\n                }\n\n              case 6:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function loadWeb3() {\n        return _loadWeb.apply(this, arguments);\n      }\n\n      return loadWeb3;\n    }()\n  }, {\n    key: \"loadBlockChainData\",\n    value: function () {\n      var _loadBlockChainData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        var web3_2, accounts, networkId, networkdata, abi, address, contract;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                //console.log(\"load Blockchain load data\");\n                web3_2 = window.web3;\n                _context3.next = 3;\n                return web3_2.eth.getAccounts();\n\n              case 3:\n                accounts = _context3.sent;\n                // console.log(accounts);\n                this.setState({\n                  account: accounts[0]\n                }); // console.log(this.state);\n\n                _context3.next = 7;\n                return web3_2.eth.net.getId();\n\n              case 7:\n                networkId = _context3.sent;\n                // console.log(networkId);\n                networkdata = Meme.networks[networkId];\n\n                if (networkdata) {\n                  abi = Meme.abi;\n                  address = networkdata.address; //fetch the contract \n\n                  contract = web3_2.eth.Contract(abi, address);\n                  console.log(contract);\n                  this.setState({\n                    contract: contract\n                  });\n                  console.log(contract.methods); //  const MemeHash =await contract.methods.get().call();\n                } else {\n                  window.alert(\"Smart contract not deployed to detected the network\");\n                }\n\n              case 10:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function loadBlockChainData() {\n        return _loadBlockChainData.apply(this, arguments);\n      }\n\n      return loadBlockChainData;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      // console.log(\"hello in main page\");\n      // console.log(this.props);\n      // console.log(this.props.location.data['emailId'])\n      // console.log(\"just checking\");\n      // var t = 'Rutvik';\n      //this.setState({displayEmailId:this.props.location.data['emailId']})\n      //console.log(this.state.name);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        variant: \"primary\",\n        type: \"button\",\n        onClick: this.signOut,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, \"Sign out\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }), React.createElement(Jumbotron, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, \"Hello,\", this.state.currentName, \" \"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      })), React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, \" \", React.createElement(Button, {\n        variant: \"primary\",\n        onClick: this.addPost,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, \"Add Post\")), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"secondary\",\n        onClick: this.addFriend,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, \"Add Friend\")), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, \" \", React.createElement(Button, {\n        variant: \"success\",\n        onClick: this.openTimeline,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, \"Timeline\")), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"primary\",\n        onClick: this.addProfilePic,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, \"Add Profile Pic\"))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      })), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      })), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      })), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"primary\",\n        onClick: this.checkFriendRequest,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, \"Check Request\")), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"primary\",\n        onClick: this.peopleOnApp,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, \"Find Friends\")), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"primary\",\n        onClick: this.feed,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, \"Feeds\")), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"primary\",\n        onClick: this.friend,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, \"Friends\")))));\n    }\n  }]);\n\n  return MainPage;\n}(Component);\n\nexport default MainPage;","map":{"version":3,"sources":["/Users/rutvikpatel/Desktop/Project/BlockChainApp/BlockChainWithIPFS/starter_kit/src/components/MainPage.js"],"names":["React","Component","Web3","Meme","Form","Button","Container","Row","Col","FormGroup","FormControl","ControlLabel","Card","ButtonToolbar","Jumbotron","ipfsClient","require","ipfs","host","port","protocol","MainPage","props","addFriend","console","log","history","push","pathname","data","state","currentEmailId","name","location","addPost","checkFriendRequest","openTimeline","t","postRead","url","feed","addProfilePic","peopleOnApp","friend","signOut","account","buffer","contract","userEmailId","tempEmailId","tempName","setState","currentName","loadWeb3","loadBlockChainData","window","ethereum","web3","enable","currentProvider","alert","web3_2","eth","getAccounts","accounts","net","getId","networkId","networkdata","networks","abi","address","Contract","methods"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Web3 from 'web3';\nimport Meme from '../abis/Meme.json';\nimport { Form, Button, Container,Row,Col,FormGroup, FormControl, ControlLabel,Card,ButtonToolbar } from \"react-bootstrap\";\nimport Jumbotron from 'react-bootstrap/Jumbotron'\nvar ipfsClient = require('ipfs-http-client');\n// var ipfs = ipfsClient({host:'infura.io',port:'5001',protocol: 'https' }) \nvar ipfs = ipfsClient({host:'ipfs.infura.io',port:'5001',protocol: 'https' }) ;;\n\nclass MainPage  extends Component{\n\n  \n    constructor(props){\n        super(props);\n          console.log(this.props.location.name)\n         \n        this.state={\n          account:'',\n          buffer:null,\n          contract:null,\n          userEmailId:'',\n          \n          \n          \n       \n\n\n        };\n       \n       \n      \n      }\n   \n\n\n      async componentWillMount(){\n        console.log(\"in component will mount\");\n        console.log(this.props.location.name);\n        console.log(this.props.location.data);\n        console.log(tempEmailId);\n        const tempName =this.props.location.name;\n        const tempEmailId =this.props.location.data;\n        console.log(tempName);\n        console.log(tempEmailId);\n        console.log(tempEmailId);\n        this.setState({currentName:tempName});\n        this.setState({currentEmailId:tempEmailId});\n        await this.loadWeb3()\n        await this.loadBlockChainData();\n      }\n\n\n      async loadWeb3(){\n        console.log(\"hello in load web3\");\n        if(window.ethereum){\n          window.web3 = new Web3(window.ethereum);\n          await window.ethereum.enable();\n        }\n        if(window.web3){\n          window.web3 = new Web3(window.web3.currentProvider);\n        }\n        else{\n          window.alert(\"Use Metamask\");\n        } \n      }\n\n      async loadBlockChainData(){\n        //console.log(\"load Blockchain load data\");\n        const web3_2 = window.web3;\n        const accounts =  await web3_2.eth.getAccounts();\n       // console.log(accounts);\n        this.setState({account:accounts[0]});\n       // console.log(this.state);\n       \n        const networkId = await web3_2.eth.net.getId();\n       // console.log(networkId);\n        const networkdata= Meme.networks[networkId];\n        if(networkdata){\n          \n          const abi =Meme.abi;\n          const address = networkdata.address;\n          //fetch the contract \n          const contract = web3_2.eth.Contract(abi,address);\n          console.log(contract);\n          this.setState({contract:contract});\n          console.log(contract.methods);\n        //  const MemeHash =await contract.methods.get().call();\n        }\n        else{\n          window.alert(\"Smart contract not deployed to detected the network\");\n        }\n      }\n\n      addFriend=()=>{\n       console.log(\"In create Account\");\n          this.props.history.push({\n            pathname: '/AddFriend',\n            data: this.state.currentEmailId,\n            name: this.props.location.name   // your data array of objects\n          })\n\n      }\n      addPost=()=>{\n        this.props.history.push({\n          pathname: '/addPost',\n          data: this.state.currentEmailId,\n          name: this.props.location.name   // your data array of objects\n        })\n      }\n      checkFriendRequest=()=>{\n        console.log(\"In check friend request\");\n           this.props.history.push({\n             pathname: '/CheckRequest',\n             data: this.state.currentEmailId,\n             name: this.props.location.name   // your data array of objects\n           })\n \n       }\n       openTimeline=()=>{\n        console.log(\"In check friend request\");\n        var t=\"adv\";\n        this.props.history.push({\n          pathname: '/Timeline',\n          data: this.state.currentEmailId,\n          name: this.props.location.name   // your data array of objects\n        })\n       }\n       postRead=()=>{\n         var url =\"QmYah59VfHQTNPnhk1f5hwnVqkxRC6CB9xvMjzLro9VBsw\";\n        this.props.history.push({\n          pathname: '/postReader/'+url,\n         // data: this.state.currentEmailId,\n          //name: this.props.location.name   // your data array of objects\n        })\n       }\n\n       feed=()=>{\n\n        this.props.history.push({\n          pathname: '/Feed',\n          data: this.state.currentEmailId,\n          name: this.props.location.name   // your data array of objects\n        })\n       }\n       addProfilePic=()=>{\n        this.props.history.push({\n          pathname: '/addProfile',\n          data: this.state.currentEmailId,\n          name: this.props.location.name   // your data array of objects\n        })\n       }\n       peopleOnApp=()=>{\n        console.log(\"in people\");\n        this.props.history.push({\n          pathname: '/peopleOnApp',\n          data: this.state.currentEmailId,\n          name: this.props.location.name   // your data array of objects\n        })\n       }\n\n       friend=()=>{\n        this.props.history.push({\n          pathname: '/friend',\n          data: this.state.currentEmailId,\n          name: this.props.location.name   // your data array of objects\n        })\n       }\n       signOut=()=>{\n        this.props.history.push({\n          pathname: '/SigIn',\n           // your data array of objects\n        })\n       }\n\n    render(){\n        // console.log(\"hello in main page\");\n        // console.log(this.props);\n        // console.log(this.props.location.data['emailId'])\n        // console.log(\"just checking\");\n\n        // var t = 'Rutvik';\n        //this.setState({displayEmailId:this.props.location.data['emailId']})\n        //console.log(this.state.name);\n\n        return(\n            <div>\n                <p></p>\n                <p></p>\n                <br></br>\n                <br></br>\n                <button variant=\"primary\" type=\"button\" onClick={this.signOut}>Sign out</button>\n                <p></p> \n                <br></br>\n                  <Jumbotron>\n                   <h1>Hello,{this.state.currentName} </h1>\n                  <p>\n                  \n                  </p>\n                   <p>\n                  {/* <Button variant=\"primary\">Learn more</Button> */}\n                  </p>\n                  </Jumbotron>\n\n                  <Container>\n                    <Row>\n                      <Col> <Button variant=\"primary\" onClick={this.addPost}>Add Post</Button></Col>\n                      <Col><Button variant=\"secondary\" onClick={this.addFriend} >Add Friend</Button></Col>\n                      <Col> <Button variant=\"success\" onClick={this.openTimeline}>Timeline</Button></Col>\n                     <Col><Button variant=\"primary\" onClick={this.addProfilePic}>Add Profile Pic</Button></Col>\n                    </Row>\n                    <Row>\n                      <Col></Col>\n                      <Col><h4></h4></Col>\n                      <Col><h4></h4></Col>\n                      <Col><h4></h4></Col>\n                      <Col><h4></h4></Col>\n                    </Row>\n                    <Row>\n                      <Col><Button variant=\"primary\" onClick={this.checkFriendRequest}>Check Request</Button></Col>\n                      <Col><Button variant=\"primary\" onClick={this.peopleOnApp}>Find Friends</Button></Col>\n                      <Col><Button variant=\"primary\" onClick={this.feed}>Feeds</Button></Col>\n                      <Col><Button variant=\"primary\" onClick={this.friend}>Friends</Button></Col>\n                    </Row>\n                   \n                  </Container>\n\n            </div>\n            \n        );\n    }\n}\n\nexport default MainPage;"]},"metadata":{},"sourceType":"module"}