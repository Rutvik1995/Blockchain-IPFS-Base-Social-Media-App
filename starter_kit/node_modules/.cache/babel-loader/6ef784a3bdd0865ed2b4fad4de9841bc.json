{"ast":null,"code":"var _regeneratorRuntime = require(\"/Users/rutvikpatel/Desktop/Project/Github6/starter_kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _awaitAsyncGenerator = require(\"/Users/rutvikpatel/Desktop/Project/Github6/starter_kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/awaitAsyncGenerator\");\n\nvar _wrapAsyncGenerator = require(\"/Users/rutvikpatel/Desktop/Project/Github6/starter_kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/wrapAsyncGenerator\");\n\nvar pull = require('pull-stream/pull');\n\nmodule.exports = function (source) {\n  return _wrapAsyncGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee() {\n    var _read, sink, _ref2, end, data;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            sink = function sink(read) {\n              _read = function _read() {\n                return new Promise(function (resolve, reject) {\n                  read(null, function (end, data) {\n                    if (end === true) return resolve({\n                      end: end\n                    });\n                    if (end) return reject(end);\n                    resolve({\n                      data: data\n                    });\n                  });\n                });\n              };\n            };\n\n            pull(source, sink);\n\n          case 2:\n            if (!true) {\n              _context.next = 14;\n              break;\n            }\n\n            _context.next = 5;\n            return _awaitAsyncGenerator(_read());\n\n          case 5:\n            _ref2 = _context.sent;\n            end = _ref2.end;\n            data = _ref2.data;\n\n            if (!end) {\n              _context.next = 10;\n              break;\n            }\n\n            return _context.abrupt(\"break\", 14);\n\n          case 10:\n            _context.next = 12;\n            return data;\n\n          case 12:\n            _context.next = 2;\n            break;\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }))();\n};","map":null,"metadata":{},"sourceType":"script"}