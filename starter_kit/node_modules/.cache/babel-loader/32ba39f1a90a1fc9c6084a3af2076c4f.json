{"ast":null,"code":"import _regeneratorRuntime from \"/Users/rutvikpatel/Desktop/Project/BlockChainApp/BlockChainWithIPFS/starter_kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/rutvikpatel/Desktop/Project/BlockChainApp/BlockChainWithIPFS/starter_kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/rutvikpatel/Desktop/Project/BlockChainApp/BlockChainWithIPFS/starter_kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rutvikpatel/Desktop/Project/BlockChainApp/BlockChainWithIPFS/starter_kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/rutvikpatel/Desktop/Project/BlockChainApp/BlockChainWithIPFS/starter_kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rutvikpatel/Desktop/Project/BlockChainApp/BlockChainWithIPFS/starter_kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/rutvikpatel/Desktop/Project/BlockChainApp/BlockChainWithIPFS/starter_kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/rutvikpatel/Desktop/Project/BlockChainApp/BlockChainWithIPFS/starter_kit/src/components/MainPage.js\";\nimport React, { Component } from 'react';\nimport Web3 from 'web3';\nimport Meme from '../abis/Meme.json';\nimport { Form, Button, Container, Row, Col, FormGroup, FormControl, ControlLabel, Card, ButtonToolbar } from \"react-bootstrap\";\nimport Jumbotron from 'react-bootstrap/Jumbotron';\n\nvar ipfsClient = require('ipfs-http-client');\n\nvar ipfs = ipfsClient({\n  host: 'ipfs.infura.io',\n  port: '5001',\n  protocol: 'https'\n});\n;\n\nvar MainPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MainPage, _Component);\n\n  function MainPage(props) {\n    var _this;\n\n    _classCallCheck(this, MainPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MainPage).call(this, props));\n\n    _this.loadData = function () {\n      console.log(_this.props.location);\n      console.log(_this.props.location.TotalUser);\n      console.log(_this.props.location.fullName);\n\n      _this.setState({\n        fullName: _this.props.location.fullName\n      });\n\n      console.log(_this.state.fullName);\n\n      _this.setState({\n        userEmailId: _this.props.location.userEmailId\n      });\n\n      console.log(_this.state.userEmailId);\n\n      _this.setState({\n        userJsonResultOfParticularUserFromIPFS: _this.props.location.userJsonResultOfParticularUserFromIPFS\n      });\n\n      console.log(_this.state.userJsonResultOfParticularUserFromIPFS);\n    };\n\n    _this.checkValue = function () {\n      console.log(_this.props.location.TotalUser);\n      console.log(_this.props.location.fullName);\n      console.log(_this.state.fullName);\n      console.log(_this.state.userEmailId);\n      console.log(_this.state.userJsonResultOfParticularUserFromIPFS);\n    };\n\n    _this.addFriend = function () {\n      console.log(\"In create Account\");\n\n      _this.props.history.push({\n        pathname: '/AddFriend',\n        data: _this.state.currentEmailId,\n        name: _this.props.location.name // your data array of objects\n\n      });\n    };\n\n    _this.addPost = function () {\n      _this.props.history.push({\n        pathname: '/addPost',\n        data: _this.state.currentEmailId,\n        name: _this.props.location.name // your data array of objects\n\n      });\n    };\n\n    _this.checkFriendRequest = function () {\n      console.log(\"In check friend request\");\n\n      _this.props.history.push({\n        pathname: '/CheckRequest',\n        data: _this.state.currentEmailId,\n        name: _this.props.location.name // your data array of objects\n\n      });\n    };\n\n    _this.openTimeline = function () {\n      console.log(\"In check friend request\");\n      var t = \"adv\";\n\n      _this.props.history.push({\n        pathname: '/Timeline',\n        data: _this.state.currentEmailId,\n        name: _this.props.location.name // your data array of objects\n\n      });\n    };\n\n    _this.postRead = function () {\n      var url = \"QmYah59VfHQTNPnhk1f5hwnVqkxRC6CB9xvMjzLro9VBsw\";\n\n      _this.props.history.push({\n        pathname: '/postReader/' + url // data: this.state.currentEmailId,\n        //name: this.props.location.name   // your data array of objects\n\n      });\n    };\n\n    _this.feed = function () {\n      _this.props.history.push({\n        pathname: '/Feed',\n        data: _this.state.currentEmailId,\n        name: _this.props.location.name // your data array of objects\n\n      });\n    };\n\n    _this.addProfilePic = function () {\n      _this.props.history.push({\n        pathname: '/addProfilePic',\n        userEmailID: _this.state.userEmailId,\n        fullName: _this.state.fullName,\n        userJsonResultOfParticularUserFromIPFS: _this.state.userJsonResultOfParticularUserFromIPFS,\n        TotalUser: _this.state.userInformationListFromBlockChain\n      });\n    };\n\n    _this.peopleOnApp = function () {\n      console.log(\"in people\");\n\n      _this.props.history.push({\n        pathname: '/peopleOnApp',\n        data: _this.state.currentEmailId,\n        name: _this.props.location.name // your data array of objects\n\n      });\n    };\n\n    _this.friend = function () {\n      _this.props.history.push({\n        pathname: '/friend',\n        data: _this.state.currentEmailId,\n        name: _this.props.location.name // your data array of objects\n\n      });\n    };\n\n    _this.signOut = function () {\n      _this.props.history.push({\n        pathname: '/SigIn' // your data array of objects\n\n      });\n    };\n\n    console.log(props);\n    _this.state = {\n      account: '',\n      buffer: null,\n      contract: null,\n      TotalUser: null,\n      userEmailId: '',\n      userInformationListFromBlockChain: null,\n      fullName: '',\n      userJsonResultOfParticularUserFromIPFS: null\n    };\n    return _this;\n  }\n\n  _createClass(MainPage, [{\n    key: \"componentWillMount\",\n    value: function () {\n      var _componentWillMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.loadData();\n                _context.next = 3;\n                return this.loadWeb3();\n\n              case 3:\n                _context.next = 5;\n                return this.loadBlockChainData();\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentWillMount() {\n        return _componentWillMount.apply(this, arguments);\n      }\n\n      return componentWillMount;\n    }()\n  }, {\n    key: \"loadWeb3\",\n    value: function () {\n      var _loadWeb = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!window.ethereum) {\n                  _context2.next = 4;\n                  break;\n                }\n\n                window.web3 = new Web3(window.ethereum);\n                _context2.next = 4;\n                return window.ethereum.enable();\n\n              case 4:\n                if (window.web3) {\n                  window.web3 = new Web3(window.web3.currentProvider);\n                } else {\n                  window.alert(\"Use Metamask\");\n                }\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function loadWeb3() {\n        return _loadWeb.apply(this, arguments);\n      }\n\n      return loadWeb3;\n    }()\n  }, {\n    key: \"loadBlockChainData\",\n    value: function () {\n      var _loadBlockChainData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        var web3_2, accounts, networkId, networkdata, abi, address, contract;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                web3_2 = window.web3;\n                _context3.next = 3;\n                return web3_2.eth.getAccounts();\n\n              case 3:\n                accounts = _context3.sent;\n                this.setState({\n                  account: accounts[0]\n                });\n                _context3.next = 7;\n                return web3_2.eth.net.getId();\n\n              case 7:\n                networkId = _context3.sent;\n                networkdata = Meme.networks[networkId];\n\n                if (networkdata) {\n                  abi = Meme.abi;\n                  address = networkdata.address; //fetch the contract \n\n                  contract = web3_2.eth.Contract(abi, address);\n                  console.log(contract);\n                  this.setState({\n                    contract: contract\n                  });\n                  console.log(contract.methods); //  const MemeHash =await contract.methods.get().call();\n                } else {\n                  window.alert(\"Smart contract not deployed to detected the network\");\n                }\n\n              case 10:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function loadBlockChainData() {\n        return _loadBlockChainData.apply(this, arguments);\n      }\n\n      return loadBlockChainData;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      // console.log(\"hello in main page\");\n      // console.log(this.props);\n      // console.log(this.props.location.data['emailId'])\n      // console.log(\"just checking\");\n      // var t = 'Rutvik';\n      //this.setState({displayEmailId:this.props.location.data['emailId']})\n      //console.log(this.state.name);\n      console.log(\"Name state object \" + this.state.fullName);\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        variant: \"primary\",\n        type: \"button\",\n        onClick: this.signOut,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, \"Sign out\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }), React.createElement(Jumbotron, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, \"Hello,\", this.state.fullName, \" \"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      })), React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, \" \", React.createElement(Button, {\n        variant: \"primary\",\n        onClick: this.addPost,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, \"Add Post\")), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"secondary\",\n        onClick: this.addFriend,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, \"Add Friend\")), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, \" \", React.createElement(Button, {\n        variant: \"success\",\n        onClick: this.openTimeline,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, \"Timeline\")), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"primary\",\n        onClick: this.addProfilePic,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, \"Add Profile Pic\"))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      })), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      })), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      })), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"primary\",\n        onClick: this.checkFriendRequest,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, \"Check Request\")), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"primary\",\n        onClick: this.peopleOnApp,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, \"Find Friends\")), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"primary\",\n        onClick: this.feed,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, \"Feeds\")), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"primary\",\n        onClick: this.friend,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, \"Friends\")), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"primary\",\n        onClick: this.checkValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, \"Value\"))))));\n    }\n  }]);\n\n  return MainPage;\n}(Component);\n\nexport default MainPage;","map":{"version":3,"sources":["/Users/rutvikpatel/Desktop/Project/BlockChainApp/BlockChainWithIPFS/starter_kit/src/components/MainPage.js"],"names":["React","Component","Web3","Meme","Form","Button","Container","Row","Col","FormGroup","FormControl","ControlLabel","Card","ButtonToolbar","Jumbotron","ipfsClient","require","ipfs","host","port","protocol","MainPage","props","loadData","console","log","location","TotalUser","fullName","setState","state","userEmailId","userJsonResultOfParticularUserFromIPFS","checkValue","addFriend","history","push","pathname","data","currentEmailId","name","addPost","checkFriendRequest","openTimeline","t","postRead","url","feed","addProfilePic","userEmailID","userInformationListFromBlockChain","peopleOnApp","friend","signOut","account","buffer","contract","loadWeb3","loadBlockChainData","window","ethereum","web3","enable","currentProvider","alert","web3_2","eth","getAccounts","accounts","net","getId","networkId","networkdata","networks","abi","address","Contract","methods"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Web3 from 'web3';\nimport Meme from '../abis/Meme.json';\nimport { Form, Button, Container,Row,Col,FormGroup, FormControl, ControlLabel,Card,ButtonToolbar } from \"react-bootstrap\";\nimport Jumbotron from 'react-bootstrap/Jumbotron'\nvar ipfsClient = require('ipfs-http-client');\nvar ipfs = ipfsClient({host:'ipfs.infura.io',port:'5001',protocol: 'https' }) ;;\n\nclass MainPage  extends Component{\n\n  \n    constructor(props){\n        super(props);\n        console.log(props);\n        this.state={\n          account:'',\n          buffer:null,\n          contract:null,\n          TotalUser:null,\n          userEmailId:'',\n          userInformationListFromBlockChain:null,\n          fullName:'',\n          userJsonResultOfParticularUserFromIPFS:null\n        };       \n      }\n\n      async componentWillMount(){\n        this.loadData();\n        await this.loadWeb3()\n        await this.loadBlockChainData();\n      }\n\n      loadData=()=>{\n       console.log(this.props.location);\n       console.log(this.props.location.TotalUser);\n       console.log(this.props.location.fullName);\n       this.setState({fullName:this.props.location.fullName});\n       console.log(this.state.fullName);\n       this.setState({userEmailId:this.props.location.userEmailId});\n       console.log(this.state.userEmailId);\n       this.setState({userJsonResultOfParticularUserFromIPFS:this.props.location.userJsonResultOfParticularUserFromIPFS});\n       console.log(this.state.userJsonResultOfParticularUserFromIPFS);\n    }\n\n      async loadWeb3(){\n        if(window.ethereum){\n          window.web3 = new Web3(window.ethereum);\n          await window.ethereum.enable();\n        }\n        if(window.web3){\n          window.web3 = new Web3(window.web3.currentProvider);\n        }\n        else{\n          window.alert(\"Use Metamask\");\n        } \n      }\n\n      async loadBlockChainData(){\n        const web3_2 = window.web3;\n        const accounts =  await web3_2.eth.getAccounts();\n        this.setState({account:accounts[0]});\n        const networkId = await web3_2.eth.net.getId();\n        const networkdata= Meme.networks[networkId];\n        if(networkdata){\n          const abi =Meme.abi;\n          const address = networkdata.address;\n          //fetch the contract \n          const contract = web3_2.eth.Contract(abi,address);\n          console.log(contract);\n          this.setState({contract:contract});\n          console.log(contract.methods);\n        //  const MemeHash =await contract.methods.get().call();\n        }\n        else{\n          window.alert(\"Smart contract not deployed to detected the network\");\n        }\n      }\n      checkValue=()=>{\n        console.log(this.props.location.TotalUser);\n        console.log(this.props.location.fullName);\n        console.log(this.state.fullName);\n        console.log(this.state.userEmailId);\n        console.log(this.state.userJsonResultOfParticularUserFromIPFS);\n       \n      }\n\n      addFriend=()=>{\n       console.log(\"In create Account\");\n          this.props.history.push({\n            pathname: '/AddFriend',\n            data: this.state.currentEmailId,\n            name: this.props.location.name   // your data array of objects\n          })\n\n      }\n      addPost=()=>{\n        this.props.history.push({\n          pathname: '/addPost',\n          data: this.state.currentEmailId,\n          name: this.props.location.name   // your data array of objects\n        })\n      }\n      checkFriendRequest=()=>{\n        console.log(\"In check friend request\");\n           this.props.history.push({\n             pathname: '/CheckRequest',\n             data: this.state.currentEmailId,\n             name: this.props.location.name   // your data array of objects\n           })\n \n       }\n       openTimeline=()=>{\n        console.log(\"In check friend request\");\n        var t=\"adv\";\n        this.props.history.push({\n          pathname: '/Timeline',\n          data: this.state.currentEmailId,\n          name: this.props.location.name   // your data array of objects\n        })\n       }\n       postRead=()=>{\n         var url =\"QmYah59VfHQTNPnhk1f5hwnVqkxRC6CB9xvMjzLro9VBsw\";\n        this.props.history.push({\n          pathname: '/postReader/'+url,\n         // data: this.state.currentEmailId,\n          //name: this.props.location.name   // your data array of objects\n        })\n       }\n\n       feed=()=>{\n\n        this.props.history.push({\n          pathname: '/Feed',\n          data: this.state.currentEmailId,\n          name: this.props.location.name   // your data array of objects\n        })\n       }\n       addProfilePic=()=>{\n        this.props.history.push({\n          pathname: '/addProfilePic',\n          userEmailID: this.state.userEmailId,\n          fullName:  this.state.fullName,\n          userJsonResultOfParticularUserFromIPFS:this.state.userJsonResultOfParticularUserFromIPFS,\n          TotalUser:this.state.userInformationListFromBlockChain\n        })\n       }\n       peopleOnApp=()=>{\n        console.log(\"in people\");\n        this.props.history.push({\n          pathname: '/peopleOnApp',\n          data: this.state.currentEmailId,\n          name: this.props.location.name   // your data array of objects\n        })\n       }\n\n       friend=()=>{\n        this.props.history.push({\n          pathname: '/friend',\n          data: this.state.currentEmailId,\n          name: this.props.location.name   // your data array of objects\n        })\n       }\n       signOut=()=>{\n        this.props.history.push({\n          pathname: '/SigIn',\n           // your data array of objects\n        })\n       }\n\n    render(){\n        // console.log(\"hello in main page\");\n        // console.log(this.props);\n        // console.log(this.props.location.data['emailId'])\n        // console.log(\"just checking\");\n\n        // var t = 'Rutvik';\n        //this.setState({displayEmailId:this.props.location.data['emailId']})\n        //console.log(this.state.name);\nconsole.log(\"Name state object \"+this.state.fullName);\n        return(\n\n            <div className=\"container\">\n                            <div>\n                <p></p>\n                <p></p>\n                <br></br>\n                <br></br>\n                <button variant=\"primary\" type=\"button\" onClick={this.signOut}>Sign out</button>\n                <p></p> \n                <br></br>\n                  <Jumbotron>\n                   <h1>Hello,{this.state.fullName} </h1>\n                  <p>\n                  \n                  </p>\n                   <p>\n                  {/* <Button variant=\"primary\">Learn more</Button> */}\n                  </p>\n                  </Jumbotron>\n\n          \n\n\n                  <Container>\n                    <Row>\n                      <Col> <Button variant=\"primary\" onClick={this.addPost}>Add Post</Button></Col>\n                      <Col><Button variant=\"secondary\" onClick={this.addFriend} >Add Friend</Button></Col>\n                      <Col> <Button variant=\"success\" onClick={this.openTimeline}>Timeline</Button></Col>\n                     <Col><Button variant=\"primary\" onClick={this.addProfilePic}>Add Profile Pic</Button></Col>\n                    </Row>\n                    <Row>\n                      <Col></Col>\n                      <Col><h4></h4></Col>\n                      <Col><h4></h4></Col>\n                      <Col><h4></h4></Col>\n                      <Col><h4></h4></Col>\n                    </Row>\n                    <Row>\n                      <Col><Button variant=\"primary\" onClick={this.checkFriendRequest}>Check Request</Button></Col>\n                      <Col><Button variant=\"primary\" onClick={this.peopleOnApp}>Find Friends</Button></Col>\n                      <Col><Button variant=\"primary\" onClick={this.feed}>Feeds</Button></Col>\n                      <Col><Button variant=\"primary\" onClick={this.friend}>Friends</Button></Col>\n                      <Col><Button variant=\"primary\" onClick={this.checkValue}>Value</Button></Col>\n                    </Row>\n                   \n                  </Container>\n\n            </div>\n            </div>\n\n            \n        );\n    }\n}\n\nexport default MainPage;"]},"metadata":{},"sourceType":"module"}