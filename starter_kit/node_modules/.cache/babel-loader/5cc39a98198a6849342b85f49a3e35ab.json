{"ast":null,"code":"import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styled, { createGlobalStyle } from 'styled-components';\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (typeof call === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}\n\nvar commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nfunction unwrapExports(x) {\n  return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\n}\n\nfunction createCommonjsModule(fn, module) {\n  return module = {\n    exports: {}\n  }, fn(module, module.exports), module.exports;\n}\n\nvar fuse = createCommonjsModule(function (module, exports) {\n  /*!\n   * Fuse.js v3.4.5 - Lightweight fuzzy-search (http://fusejs.io)\n   * \n   * Copyright (c) 2012-2017 Kirollos Risk (http://kiro.me)\n   * All Rights Reserved. Apache Software License 2.0\n   * \n   * http://www.apache.org/licenses/LICENSE-2.0\n   */\n  !function (e, t) {\n    module.exports = t();\n  }(commonjsGlobal, function () {\n    return function (e) {\n      var t = {};\n\n      function n(r) {\n        if (t[r]) return t[r].exports;\n        var o = t[r] = {\n          i: r,\n          l: !1,\n          exports: {}\n        };\n        return e[r].call(o.exports, o, o.exports, n), o.l = !0, o.exports;\n      }\n\n      return n.m = e, n.c = t, n.d = function (e, t, r) {\n        n.o(e, t) || Object.defineProperty(e, t, {\n          enumerable: !0,\n          get: r\n        });\n      }, n.r = function (e) {\n        \"undefined\" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {\n          value: \"Module\"\n        }), Object.defineProperty(e, \"__esModule\", {\n          value: !0\n        });\n      }, n.t = function (e, t) {\n        if (1 & t && (e = n(e)), 8 & t) return e;\n        if (4 & t && \"object\" == typeof e && e && e.__esModule) return e;\n        var r = Object.create(null);\n        if (n.r(r), Object.defineProperty(r, \"default\", {\n          enumerable: !0,\n          value: e\n        }), 2 & t && \"string\" != typeof e) for (var o in e) {\n          n.d(r, o, function (t) {\n            return e[t];\n          }.bind(null, o));\n        }\n        return r;\n      }, n.n = function (e) {\n        var t = e && e.__esModule ? function () {\n          return e.default;\n        } : function () {\n          return e;\n        };\n        return n.d(t, \"a\", t), t;\n      }, n.o = function (e, t) {\n        return Object.prototype.hasOwnProperty.call(e, t);\n      }, n.p = \"\", n(n.s = 1);\n    }([function (e, t) {\n      e.exports = function (e) {\n        return Array.isArray ? Array.isArray(e) : \"[object Array]\" === Object.prototype.toString.call(e);\n      };\n    }, function (e, t, n) {\n      function r(e) {\n        return (r = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (e) {\n          return typeof e;\n        } : function (e) {\n          return e && \"function\" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? \"symbol\" : typeof e;\n        })(e);\n      }\n\n      function o(e, t) {\n        for (var n = 0; n < t.length; n++) {\n          var r = t[n];\n          r.enumerable = r.enumerable || !1, r.configurable = !0, \"value\" in r && (r.writable = !0), Object.defineProperty(e, r.key, r);\n        }\n      }\n\n      var i = n(2),\n          a = n(8),\n          s = n(0),\n          c = function () {\n        function e(t, n) {\n          var r = n.location,\n              o = void 0 === r ? 0 : r,\n              i = n.distance,\n              s = void 0 === i ? 100 : i,\n              c = n.threshold,\n              h = void 0 === c ? .6 : c,\n              l = n.maxPatternLength,\n              u = void 0 === l ? 32 : l,\n              f = n.caseSensitive,\n              d = void 0 !== f && f,\n              v = n.tokenSeparator,\n              p = void 0 === v ? / +/g : v,\n              g = n.findAllMatches,\n              y = void 0 !== g && g,\n              m = n.minMatchCharLength,\n              k = void 0 === m ? 1 : m,\n              S = n.id,\n              x = void 0 === S ? null : S,\n              b = n.keys,\n              M = void 0 === b ? [] : b,\n              _ = n.shouldSort,\n              L = void 0 === _ || _,\n              w = n.getFn,\n              A = void 0 === w ? a : w,\n              C = n.sortFn,\n              I = void 0 === C ? function (e, t) {\n            return e.score - t.score;\n          } : C,\n              O = n.tokenize,\n              j = void 0 !== O && O,\n              P = n.matchAllTokens,\n              F = void 0 !== P && P,\n              T = n.includeMatches,\n              z = void 0 !== T && T,\n              E = n.includeScore,\n              K = void 0 !== E && E,\n              $ = n.verbose,\n              J = void 0 !== $ && $;\n          !function (e, t) {\n            if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n          }(this, e), this.options = {\n            location: o,\n            distance: s,\n            threshold: h,\n            maxPatternLength: u,\n            isCaseSensitive: d,\n            tokenSeparator: p,\n            findAllMatches: y,\n            minMatchCharLength: k,\n            id: x,\n            keys: M,\n            includeMatches: z,\n            includeScore: K,\n            shouldSort: L,\n            getFn: A,\n            sortFn: I,\n            verbose: J,\n            tokenize: j,\n            matchAllTokens: F\n          }, this.setCollection(t);\n        }\n\n        var t, n;\n        return t = e, (n = [{\n          key: \"setCollection\",\n          value: function value(e) {\n            return this.list = e, e;\n          }\n        }, {\n          key: \"search\",\n          value: function value(e) {\n            var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {\n              limit: !1\n            };\n\n            this._log('---------\\nSearch pattern: \"'.concat(e, '\"'));\n\n            var n = this._prepareSearchers(e),\n                r = n.tokenSearchers,\n                o = n.fullSearcher,\n                i = this._search(r, o),\n                a = i.weights,\n                s = i.results;\n\n            return this._computeScore(a, s), this.options.shouldSort && this._sort(s), t.limit && \"number\" == typeof t.limit && (s = s.slice(0, t.limit)), this._format(s);\n          }\n        }, {\n          key: \"_prepareSearchers\",\n          value: function value() {\n            var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : \"\",\n                t = [];\n            if (this.options.tokenize) for (var n = e.split(this.options.tokenSeparator), r = 0, o = n.length; r < o; r += 1) {\n              t.push(new i(n[r], this.options));\n            }\n            return {\n              tokenSearchers: t,\n              fullSearcher: new i(e, this.options)\n            };\n          }\n        }, {\n          key: \"_search\",\n          value: function value() {\n            var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [],\n                t = arguments.length > 1 ? arguments[1] : void 0,\n                n = this.list,\n                r = {},\n                o = [];\n\n            if (\"string\" == typeof n[0]) {\n              for (var i = 0, a = n.length; i < a; i += 1) {\n                this._analyze({\n                  key: \"\",\n                  value: n[i],\n                  record: i,\n                  index: i\n                }, {\n                  resultMap: r,\n                  results: o,\n                  tokenSearchers: e,\n                  fullSearcher: t\n                });\n              }\n\n              return {\n                weights: null,\n                results: o\n              };\n            }\n\n            for (var s = {}, c = 0, h = n.length; c < h; c += 1) {\n              for (var l = n[c], u = 0, f = this.options.keys.length; u < f; u += 1) {\n                var d = this.options.keys[u];\n\n                if (\"string\" != typeof d) {\n                  if (s[d.name] = {\n                    weight: 1 - d.weight || 1\n                  }, d.weight <= 0 || d.weight > 1) throw new Error(\"Key weight has to be > 0 and <= 1\");\n                  d = d.name;\n                } else s[d] = {\n                  weight: 1\n                };\n\n                this._analyze({\n                  key: d,\n                  value: this.options.getFn(l, d),\n                  record: l,\n                  index: c\n                }, {\n                  resultMap: r,\n                  results: o,\n                  tokenSearchers: e,\n                  fullSearcher: t\n                });\n              }\n            }\n\n            return {\n              weights: s,\n              results: o\n            };\n          }\n        }, {\n          key: \"_analyze\",\n          value: function value(e, t) {\n            var n = e.key,\n                r = e.arrayIndex,\n                o = void 0 === r ? -1 : r,\n                i = e.value,\n                a = e.record,\n                c = e.index,\n                h = t.tokenSearchers,\n                l = void 0 === h ? [] : h,\n                u = t.fullSearcher,\n                f = void 0 === u ? [] : u,\n                d = t.resultMap,\n                v = void 0 === d ? {} : d,\n                p = t.results,\n                g = void 0 === p ? [] : p;\n\n            if (null != i) {\n              var y = !1,\n                  m = -1,\n                  k = 0;\n\n              if (\"string\" == typeof i) {\n                this._log(\"\\nKey: \".concat(\"\" === n ? \"-\" : n));\n\n                var S = f.search(i);\n\n                if (this._log('Full text: \"'.concat(i, '\", score: ').concat(S.score)), this.options.tokenize) {\n                  for (var x = i.split(this.options.tokenSeparator), b = [], M = 0; M < l.length; M += 1) {\n                    var _ = l[M];\n\n                    this._log('\\nPattern: \"'.concat(_.pattern, '\"'));\n\n                    for (var L = !1, w = 0; w < x.length; w += 1) {\n                      var A = x[w],\n                          C = _.search(A),\n                          I = {};\n\n                      C.isMatch ? (I[A] = C.score, y = !0, L = !0, b.push(C.score)) : (I[A] = 1, this.options.matchAllTokens || b.push(1)), this._log('Token: \"'.concat(A, '\", score: ').concat(I[A]));\n                    }\n\n                    L && (k += 1);\n                  }\n\n                  m = b[0];\n\n                  for (var O = b.length, j = 1; j < O; j += 1) {\n                    m += b[j];\n                  }\n\n                  m /= O, this._log(\"Token score average:\", m);\n                }\n\n                var P = S.score;\n                m > -1 && (P = (P + m) / 2), this._log(\"Score average:\", P);\n                var F = !this.options.tokenize || !this.options.matchAllTokens || k >= l.length;\n\n                if (this._log(\"\\nCheck Matches: \".concat(F)), (y || S.isMatch) && F) {\n                  var T = v[c];\n                  T ? T.output.push({\n                    key: n,\n                    arrayIndex: o,\n                    value: i,\n                    score: P,\n                    matchedIndices: S.matchedIndices\n                  }) : (v[c] = {\n                    item: a,\n                    output: [{\n                      key: n,\n                      arrayIndex: o,\n                      value: i,\n                      score: P,\n                      matchedIndices: S.matchedIndices\n                    }]\n                  }, g.push(v[c]));\n                }\n              } else if (s(i)) for (var z = 0, E = i.length; z < E; z += 1) {\n                this._analyze({\n                  key: n,\n                  arrayIndex: z,\n                  value: i[z],\n                  record: a,\n                  index: c\n                }, {\n                  resultMap: v,\n                  results: g,\n                  tokenSearchers: l,\n                  fullSearcher: f\n                });\n              }\n            }\n          }\n        }, {\n          key: \"_computeScore\",\n          value: function value(e, t) {\n            this._log(\"\\n\\nComputing score:\\n\");\n\n            for (var n = 0, r = t.length; n < r; n += 1) {\n              for (var o = t[n].output, i = o.length, a = 1, s = 1, c = 0; c < i; c += 1) {\n                var h = e ? e[o[c].key].weight : 1,\n                    l = (1 === h ? o[c].score : o[c].score || .001) * h;\n                1 !== h ? s = Math.min(s, l) : (o[c].nScore = l, a *= l);\n              }\n\n              t[n].score = 1 === s ? a : s, this._log(t[n]);\n            }\n          }\n        }, {\n          key: \"_sort\",\n          value: function value(e) {\n            this._log(\"\\n\\nSorting....\"), e.sort(this.options.sortFn);\n          }\n        }, {\n          key: \"_format\",\n          value: function value(e) {\n            var t = [];\n\n            if (this.options.verbose) {\n              var n = [];\n              this._log(\"\\n\\nOutput:\\n\\n\", JSON.stringify(e, function (e, t) {\n                if (\"object\" === r(t) && null !== t) {\n                  if (-1 !== n.indexOf(t)) return;\n                  n.push(t);\n                }\n\n                return t;\n              })), n = null;\n            }\n\n            var o = [];\n            this.options.includeMatches && o.push(function (e, t) {\n              var n = e.output;\n              t.matches = [];\n\n              for (var r = 0, o = n.length; r < o; r += 1) {\n                var i = n[r];\n\n                if (0 !== i.matchedIndices.length) {\n                  var a = {\n                    indices: i.matchedIndices,\n                    value: i.value\n                  };\n                  i.key && (a.key = i.key), i.hasOwnProperty(\"arrayIndex\") && i.arrayIndex > -1 && (a.arrayIndex = i.arrayIndex), t.matches.push(a);\n                }\n              }\n            }), this.options.includeScore && o.push(function (e, t) {\n              t.score = e.score;\n            });\n\n            for (var i = 0, a = e.length; i < a; i += 1) {\n              var s = e[i];\n\n              if (this.options.id && (s.item = this.options.getFn(s.item, this.options.id)[0]), o.length) {\n                for (var c = {\n                  item: s.item\n                }, h = 0, l = o.length; h < l; h += 1) {\n                  o[h](s, c);\n                }\n\n                t.push(c);\n              } else t.push(s.item);\n            }\n\n            return t;\n          }\n        }, {\n          key: \"_log\",\n          value: function value() {\n            var e;\n            this.options.verbose && (e = console).log.apply(e, arguments);\n          }\n        }]) && o(t.prototype, n), e;\n      }();\n\n      e.exports = c;\n    }, function (e, t, n) {\n      function r(e, t) {\n        for (var n = 0; n < t.length; n++) {\n          var r = t[n];\n          r.enumerable = r.enumerable || !1, r.configurable = !0, \"value\" in r && (r.writable = !0), Object.defineProperty(e, r.key, r);\n        }\n      }\n\n      var o = n(3),\n          i = n(4),\n          a = n(7),\n          s = function () {\n        function e(t, n) {\n          var r = n.location,\n              o = void 0 === r ? 0 : r,\n              i = n.distance,\n              s = void 0 === i ? 100 : i,\n              c = n.threshold,\n              h = void 0 === c ? .6 : c,\n              l = n.maxPatternLength,\n              u = void 0 === l ? 32 : l,\n              f = n.isCaseSensitive,\n              d = void 0 !== f && f,\n              v = n.tokenSeparator,\n              p = void 0 === v ? / +/g : v,\n              g = n.findAllMatches,\n              y = void 0 !== g && g,\n              m = n.minMatchCharLength,\n              k = void 0 === m ? 1 : m;\n          !function (e, t) {\n            if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n          }(this, e), this.options = {\n            location: o,\n            distance: s,\n            threshold: h,\n            maxPatternLength: u,\n            isCaseSensitive: d,\n            tokenSeparator: p,\n            findAllMatches: y,\n            minMatchCharLength: k\n          }, this.pattern = this.options.isCaseSensitive ? t : t.toLowerCase(), this.pattern.length <= u && (this.patternAlphabet = a(this.pattern));\n        }\n\n        var t, n;\n        return t = e, (n = [{\n          key: \"search\",\n          value: function value(e) {\n            if (this.options.isCaseSensitive || (e = e.toLowerCase()), this.pattern === e) return {\n              isMatch: !0,\n              score: 0,\n              matchedIndices: [[0, e.length - 1]]\n            };\n            var t = this.options,\n                n = t.maxPatternLength,\n                r = t.tokenSeparator;\n            if (this.pattern.length > n) return o(e, this.pattern, r);\n            var a = this.options,\n                s = a.location,\n                c = a.distance,\n                h = a.threshold,\n                l = a.findAllMatches,\n                u = a.minMatchCharLength;\n            return i(e, this.pattern, this.patternAlphabet, {\n              location: s,\n              distance: c,\n              threshold: h,\n              findAllMatches: l,\n              minMatchCharLength: u\n            });\n          }\n        }]) && r(t.prototype, n), e;\n      }();\n\n      e.exports = s;\n    }, function (e, t) {\n      var n = /[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g;\n\n      e.exports = function (e, t) {\n        var r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : / +/g,\n            o = new RegExp(t.replace(n, \"\\\\$&\").replace(r, \"|\")),\n            i = e.match(o),\n            a = !!i,\n            s = [];\n        if (a) for (var c = 0, h = i.length; c < h; c += 1) {\n          var l = i[c];\n          s.push([e.indexOf(l), l.length - 1]);\n        }\n        return {\n          score: a ? .5 : 1,\n          isMatch: a,\n          matchedIndices: s\n        };\n      };\n    }, function (e, t, n) {\n      var r = n(5),\n          o = n(6);\n\n      e.exports = function (e, t, n, i) {\n        for (var a = i.location, s = void 0 === a ? 0 : a, c = i.distance, h = void 0 === c ? 100 : c, l = i.threshold, u = void 0 === l ? .6 : l, f = i.findAllMatches, d = void 0 !== f && f, v = i.minMatchCharLength, p = void 0 === v ? 1 : v, g = s, y = e.length, m = u, k = e.indexOf(t, g), S = t.length, x = [], b = 0; b < y; b += 1) {\n          x[b] = 0;\n        }\n\n        if (-1 !== k) {\n          var M = r(t, {\n            errors: 0,\n            currentLocation: k,\n            expectedLocation: g,\n            distance: h\n          });\n\n          if (m = Math.min(M, m), -1 !== (k = e.lastIndexOf(t, g + S))) {\n            var _ = r(t, {\n              errors: 0,\n              currentLocation: k,\n              expectedLocation: g,\n              distance: h\n            });\n\n            m = Math.min(_, m);\n          }\n        }\n\n        k = -1;\n\n        for (var L = [], w = 1, A = S + y, C = 1 << S - 1, I = 0; I < S; I += 1) {\n          for (var O = 0, j = A; O < j;) {\n            r(t, {\n              errors: I,\n              currentLocation: g + j,\n              expectedLocation: g,\n              distance: h\n            }) <= m ? O = j : A = j, j = Math.floor((A - O) / 2 + O);\n          }\n\n          A = j;\n          var P = Math.max(1, g - j + 1),\n              F = d ? y : Math.min(g + j, y) + S,\n              T = Array(F + 2);\n          T[F + 1] = (1 << I) - 1;\n\n          for (var z = F; z >= P; z -= 1) {\n            var E = z - 1,\n                K = n[e.charAt(E)];\n\n            if (K && (x[E] = 1), T[z] = (T[z + 1] << 1 | 1) & K, 0 !== I && (T[z] |= (L[z + 1] | L[z]) << 1 | 1 | L[z + 1]), T[z] & C && (w = r(t, {\n              errors: I,\n              currentLocation: E,\n              expectedLocation: g,\n              distance: h\n            })) <= m) {\n              if (m = w, (k = E) <= g) break;\n              P = Math.max(1, 2 * g - k);\n            }\n          }\n\n          if (r(t, {\n            errors: I + 1,\n            currentLocation: g,\n            expectedLocation: g,\n            distance: h\n          }) > m) break;\n          L = T;\n        }\n\n        return {\n          isMatch: k >= 0,\n          score: 0 === w ? .001 : w,\n          matchedIndices: o(x, p)\n        };\n      };\n    }, function (e, t) {\n      e.exports = function (e, t) {\n        var n = t.errors,\n            r = void 0 === n ? 0 : n,\n            o = t.currentLocation,\n            i = void 0 === o ? 0 : o,\n            a = t.expectedLocation,\n            s = void 0 === a ? 0 : a,\n            c = t.distance,\n            h = void 0 === c ? 100 : c,\n            l = r / e.length,\n            u = Math.abs(s - i);\n        return h ? l + u / h : u ? 1 : l;\n      };\n    }, function (e, t) {\n      e.exports = function () {\n        for (var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [], t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 1, n = [], r = -1, o = -1, i = 0, a = e.length; i < a; i += 1) {\n          var s = e[i];\n          s && -1 === r ? r = i : s || -1 === r || ((o = i - 1) - r + 1 >= t && n.push([r, o]), r = -1);\n        }\n\n        return e[i - 1] && i - r >= t && n.push([r, i - 1]), n;\n      };\n    }, function (e, t) {\n      e.exports = function (e) {\n        for (var t = {}, n = e.length, r = 0; r < n; r += 1) {\n          t[e.charAt(r)] = 0;\n        }\n\n        for (var o = 0; o < n; o += 1) {\n          t[e.charAt(o)] |= 1 << n - o - 1;\n        }\n\n        return t;\n      };\n    }, function (e, t, n) {\n      var r = n(0);\n\n      e.exports = function (e, t) {\n        return function e(t, n, o) {\n          if (n) {\n            var i = n.indexOf(\".\"),\n                a = n,\n                s = null;\n            -1 !== i && (a = n.slice(0, i), s = n.slice(i + 1));\n            var c = t[a];\n            if (null != c) if (s || \"string\" != typeof c && \"number\" != typeof c) {\n              if (r(c)) for (var h = 0, l = c.length; h < l; h += 1) {\n                e(c[h], s, o);\n              } else s && e(c, s, o);\n            } else o.push(c.toString());\n          } else o.push(t);\n\n          return o;\n        }(e, t, []);\n      };\n    }]);\n  });\n});\nvar Fuse = unwrapExports(fuse);\nvar fuse_1 = fuse.Fuse;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  font-size: \", \";\\n  padding: 10px 20px;\\n  height: \", \";\\n  border: 1px solid \", \";\\n  border-radius: 5px;\\n  color: \", \";\\n\\n  &:focus {\\n    outline: none;\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nvar StyledInput = styled.input(_templateObject(), function (props) {\n  return props.inputBoxFontSize;\n}, function (props) {\n  return props.inputBoxHeight;\n}, function (props) {\n  return props.inputBoxBorderColor;\n}, function (props) {\n  return props.inputBoxFontColor;\n});\n\nvar InputBox =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(InputBox, _Component);\n\n  function InputBox() {\n    _classCallCheck(this, InputBox);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(InputBox).apply(this, arguments));\n  }\n\n  _createClass(InputBox, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var autoFocus = this.props.autoFocus;\n      /**\n       * Focusses on the input box if the autoFocus prop is true.\n       */\n\n      !!autoFocus && this.input.focus();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var _this$props = this.props,\n          placeholder = _this$props.placeholder,\n          value = _this$props.value,\n          onChange = _this$props.onChange,\n          onFocus = _this$props.onFocus,\n          inputBoxFontColor = _this$props.inputBoxFontColor,\n          inputBoxBorderColor = _this$props.inputBoxBorderColor,\n          inputBoxFontSize = _this$props.inputBoxFontSize,\n          inputBoxHeight = _this$props.inputBoxHeight;\n      return React.createElement(StyledInput, {\n        type: \"text\",\n        placeholder: placeholder,\n        value: value,\n        onChange: onChange,\n        onFocus: onFocus,\n        ref: function ref(input) {\n          _this.input = input;\n        },\n        inputBoxFontColor: inputBoxFontColor,\n        inputBoxBorderColor: inputBoxBorderColor,\n        inputBoxFontSize: inputBoxFontSize,\n        inputBoxHeight: inputBoxHeight\n      });\n    }\n  }]);\n\n  return InputBox;\n}(Component);\n\n_defineProperty(InputBox, \"propTypes\", {\n  /**\n   * placeholder: The placeholder text for the input box.\n   * value: The value of the input box.\n   * onChange: A function which acts as a callback when the input value is changed.\n   * onFocus: A function which acts as a callback when the input is focussed.\n   * inputBoxFontColor: Color of the text in the input box.\n   * inputBoxBorderColor: Color of the border of the input box.\n   * inputBoxFontSize: Size of the font of the input box.\n   * inputBoxHeight: Height of the input box.\n   */\n  placeholder: PropTypes.string,\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n  onFocus: PropTypes.func,\n  inputBoxFontColor: PropTypes.string,\n  inputBoxBorderColor: PropTypes.string,\n  inputBoxFontSize: PropTypes.string,\n  inputBoxHeight: PropTypes.string\n});\n\nfunction _templateObject$1() {\n  var data = _taggedTemplateLiteral([\"\\n  margin: 10px 0 0;\\n  background-color: #fff;\\n  box-shadow: rgba(0, 0, 0, 0.1) 0 0 0 0, rgba(0, 0, 0, 0.1) 0px 4px 11px;\\n  border-radius: 5px;\\n\\n  > ul {\\n    list-style-type: none;\\n    margin: 0;\\n    padding: 0;\\n\\n    > li {\\n      padding: 10px 20px;\\n      background-color: #fff;\\n      border: 1px solid \", \";\\n      height: 40px;\\n      display: flex;\\n      align-items: center;\\n\\n      &:hover {\\n        background-color: \", \";\\n        cursor: pointer;\\n      }\\n\\n      &:first-child {\\n        border-top-left-radius: 5px;\\n        border-top-right-radius: 5px;\\n      }\\n\\n      &:last-child {\\n        border-bottom-left-radius: 5px;\\n        border-bottom-right-radius: 5px;\\n      }\\n\\n      &:not(:first-child) {\\n        border-top: 0;\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject$1 = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nvar StyledDropdown = styled.div(_templateObject$1(), function (props) {\n  return props.dropDownBorderColor;\n}, function (props) {\n  return props.dropDownHoverColor;\n});\n\nvar DropDown =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DropDown, _Component);\n\n  function DropDown() {\n    _classCallCheck(this, DropDown);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(DropDown).apply(this, arguments));\n  }\n\n  _createClass(DropDown, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          matchedRecords = _this$props.matchedRecords,\n          _onClick = _this$props.onClick,\n          dropDownHoverColor = _this$props.dropDownHoverColor,\n          dropDownBorderColor = _this$props.dropDownBorderColor;\n      return React.createElement(StyledDropdown, {\n        className: \"react-search-box-dropdown\",\n        dropDownHoverColor: dropDownHoverColor,\n        dropDownBorderColor: dropDownBorderColor\n      }, React.createElement(\"ul\", null, matchedRecords.map(function (record) {\n        return React.createElement(\"li\", {\n          key: record.key,\n          className: \"react-search-box-dropdown-list-item\",\n          onClick: function onClick() {\n            return _onClick(record);\n          }\n        }, record.value);\n      })));\n    }\n  }]);\n\n  return DropDown;\n}(Component);\n\n_defineProperty(DropDown, \"propTypes\", {\n  /**\n   * onClick: A function which acts as a callback when any record is selected. It\n   * is triggered once a dropdown item is clicked.\n   * matchedRecords: An array of matched records.\n   * dropDownHoverColor: Background color on hover of the dropdown list items.\n   * dropDownBorderColor: Border color of the dropdown.\n   */\n  onClick: PropTypes.func,\n  matchedRecords: PropTypes.array,\n  dropDownHoverColor: PropTypes.string,\n  dropDownBorderColor: PropTypes.string\n});\n\n_defineProperty(DropDown, \"defaultProps\", {\n  /**\n   * Set matchedRecords prop as an empty array in case it's not passed.\n   */\n  matchedRecords: []\n});\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: column;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject$2() {\n  var data = _taggedTemplateLiteral([\"\\n  * {\\n    box-sizing: border-box;\\n  }\\n\"]);\n\n  _templateObject$2 = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nvar GlobalStyle = createGlobalStyle(_templateObject$2());\nvar StyledContainer = styled.div(_templateObject2());\n\nvar ReactSearchBox =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ReactSearchBox, _Component);\n\n  function ReactSearchBox(props) {\n    var _this;\n\n    _classCallCheck(this, ReactSearchBox);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ReactSearchBox).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      /**\n       * 'matchedRecords' stores the items when the input box's value\n       * matches with any item from the 'data' prop.\n       */\n      value: _this.props.value ? _this.props.value : '',\n      matchedRecords: []\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleInputChange\", function (e) {\n      var onChange = _this.props.onChange;\n      /**\n       * This function is responsible for checking if any items from the input\n       * box's value matches with any item form the 'data' prop. If any item matches,\n       * then that matched object is pushed into the 'matchedRecords' state. That\n       * state is responsible for populating the dropdown.\n       */\n\n      var value = e.target.value;\n      /**\n       * Check all the values from 'data' array whose 'value' matches with\n       * 'value' using Fuse plugin.\n       */\n\n      var matchedRecords = _this.fuse.search(value);\n      /**\n       * Update 'value' state with the value from the input box.\n       * Update 'matchedRecords' state with the matched records from the data array.\n       */\n\n\n      _this.setState({\n        value: value,\n        matchedRecords: matchedRecords,\n\n        /**\n         * Show the dropdown onChange of the input.\n         */\n        showDropdown: true\n      });\n      /**\n       * Trigger the 'onChange' prop once the input's value changes.\n       */\n\n\n      !!onChange && onChange(value);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"inputNode\", function () {\n      /**\n       * This function is responsible for rendering the input box.\n       * The input box acts as a source of entry for the data from the user.\n       * Once the user enters the value, it's checked if that value matches\n       * with any value which is present in the 'data' prop. If any value\n       * matches with the input, then that matched item appears in the dropdown.\n       */\n      var _this$props = _this.props,\n          placeholder = _this$props.placeholder,\n          onFocus = _this$props.onFocus,\n          autoFocus = _this$props.autoFocus,\n          inputBoxFontColor = _this$props.inputBoxFontColor,\n          inputBoxBorderColor = _this$props.inputBoxBorderColor,\n          inputBoxFontSize = _this$props.inputBoxFontSize,\n          inputBoxHeight = _this$props.inputBoxHeight;\n      var value = _this.state.value;\n      return React.createElement(InputBox, {\n        type: \"text\",\n        placeholder: placeholder,\n        value: value,\n        onChange: _this.handleInputChange,\n        autoFocus: autoFocus ? autoFocus : undefined,\n        onFocus: onFocus ? onFocus : undefined,\n        inputBoxFontColor: inputBoxFontColor,\n        inputBoxBorderColor: inputBoxBorderColor,\n        inputBoxFontSize: inputBoxFontSize,\n        inputBoxHeight: inputBoxHeight\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleDropdownItemClick\", function (record) {\n      /**\n       * This function is responsible for updating the value inside the\n       * input box when any dropdown item is clicked.\n       *\n       * The 'value' state is updated with the clicked record's value.\n       */\n      var value = record.value;\n      var _this$props2 = _this.props,\n          onSelect = _this$props2.onSelect,\n          onChange = _this$props2.onChange;\n\n      _this.setState({\n        value: value,\n\n        /**\n         * Hide the dropdown once any dropdown item is clicked.\n         */\n        showDropdown: false\n      });\n      /**\n       * Trigger the 'onSelect' prop once everything is done if it's passed.\n       */\n\n\n      !!onSelect && onSelect(record);\n      /**\n       * Trigger the 'onChange' prop since the value of the input box also changes.\n       */\n\n      !!onChange && onChange(value);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"dropdownNode\", function () {\n      /**\n       * This function is responsible for rendering the dropdown.\n       * When any value from the input box matches with any value from the\n       * 'data' prop, that matched object from the 'data' array shows up\n       * in the dropdown's li. The matched values are stored in the\n       * 'matchedRecords' state.\n       */\n      var _this$state = _this.state,\n          matchedRecords = _this$state.matchedRecords,\n          showDropdown = _this$state.showDropdown;\n      var _this$props3 = _this.props,\n          dropDownHoverColor = _this$props3.dropDownHoverColor,\n          dropDownBorderColor = _this$props3.dropDownBorderColor;\n      /**\n       * If there is no value present in the input box, then the dropdown\n       * shouldn't appear.\n       */\n\n      if (!showDropdown) return false;\n      return React.createElement(DropDown, {\n        matchedRecords: matchedRecords,\n        onClick: _this.handleDropdownItemClick,\n        dropDownHoverColor: dropDownHoverColor,\n        dropDownBorderColor: dropDownBorderColor\n      });\n    });\n\n    var data = props.data,\n        fuseConfigs = props.fuseConfigs;\n    /**\n     * These configs are from Fuse plugin. Check out http://fusejs.io/\n     * for more details.\n     */\n\n    _this.defaultFuseConfigs = {\n      /**\n       * At what point does the match algorithm give up. A threshold of 0.0\n       * requires a perfect match (of both letters and location), a threshold\n       * of 1.0 would match anything.\n       */\n      threshold: 0.05,\n\n      /**\n       * Determines approximately where in the text is the pattern expected to be found.\n       */\n      location: 0,\n\n      /**\n       * Determines how close the match must be to the fuzzy location\n       * (specified by location). An exact letter match which is distance\n       * characters away from the fuzzy location would score as a complete\n       * mismatch. A distance of 0 requires the match be at the exact\n       * location specified, a distance of 1000 would require a perfect\n       * match to be within 800 characters of the location to be found\n       * using a threshold of 0.8.\n       */\n      distance: 100,\n\n      /**\n       * When set to include matches, only the matches whose length exceeds this\n       * value will be returned. (For instance, if you want to ignore single\n       * character index returns, set to 2).\n       */\n      minMatchCharLength: 1,\n\n      /**\n       * List of properties that will be searched. This supports nested properties,\n       * weighted search, searching in arrays of strings and objects.\n       */\n      keys: ['value']\n    };\n    /**\n     this.Override defaultFuseConfigs with fuseConfigs prop\n     */\n\n    var configs = Object.assign({}, _this.defaultFuseConfigs, fuseConfigs);\n    _this.fuse = new Fuse(data, configs);\n    return _this;\n  }\n\n  _createClass(ReactSearchBox, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this$props4 = this.props,\n          data = _this$props4.data,\n          fuseConfigs = _this$props4.fuseConfigs;\n\n      if (prevProps.data !== data) {\n        /**\n         * Override defaultFuseConfigs with fuseConfigs prop\n         */\n        var configs = Object.assign({}, this.defaultFuseConfigs, fuseConfigs);\n        this.fuse = new Fuse(data, configs);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(StyledContainer, null, React.createElement(GlobalStyle, null), this.inputNode(), this.dropdownNode());\n    }\n  }]);\n\n  return ReactSearchBox;\n}(Component);\n\n_defineProperty(ReactSearchBox, \"propTypes\", {\n  /**\n   * placeholder: The placeholder text for the input box.\n   * data: An array of objects which acts as teh source of data for the dropdown.\n   * fuseConfigs: Configs to override default Fuse configs.\n   * onSelect: A function which acts as a callback when any record is selected. It\n   * is triggered once a dropdown item is clicked.\n   * autoFocus: Focus on the input box once the component is mounted.\n   * onFocus: A function which acts as a callback when the input is focussed.\n   * onChange: A function which acts as a callback when the input value is changed.\n   * inputBoxFontColor: Color of the text in the input box.\n   * inputBoxBorderColor: Color of the border of the input box.\n   * inputBoxFontSize: Size of the font of the input box.\n   * inputBoxHeight: Height of the input box.\n   * dropDownHoverColor: Background color on hover of the dropdown list items.\n   * dropDownBorderColor: Border color of the dropdown.\n   */\n  placeholder: PropTypes.string,\n  data: PropTypes.array.isRequired,\n  fuseConfigs: PropTypes.object,\n  autoFocus: PropTypes.bool,\n  onSelect: PropTypes.func,\n  onFocus: PropTypes.func,\n  onChange: PropTypes.func,\n  inputBoxFontColor: PropTypes.string,\n  inputBoxBorderColor: PropTypes.string,\n  inputBoxFontSize: PropTypes.string,\n  inputBoxHeight: PropTypes.string,\n  dropDownHoverColor: PropTypes.string,\n  dropDownBorderColor: PropTypes.string\n});\n\n_defineProperty(ReactSearchBox, \"defaultProps\", {\n  /**\n   * Set data prop as an empty array in case it's not passed.\n   */\n  data: [],\n\n  /**\n   * Don't focus on the input box when the component is mounted by default\n   */\n  autoFocus: false,\n\n  /**\n   * Set the placeholder as empty text by default\n   */\n  placeholder: '',\n  inputBoxFontColor: '#000',\n  inputBoxBorderColor: '#cacaca96',\n  inputBoxFontSize: '14px',\n  inputBoxHeight: '40px',\n  dropDownHoverColor: '#ccc',\n  dropDownBorderColor: '#cacaca96'\n});\n\nexport default ReactSearchBox;","map":null,"metadata":{},"sourceType":"module"}