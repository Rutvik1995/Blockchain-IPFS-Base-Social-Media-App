{"ast":null,"code":"import _regeneratorRuntime from \"/Users/rutvikpatel/Desktop/Project/BlockChainApp/BlockChainWithIPFS/starter_kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/rutvikpatel/Desktop/Project/BlockChainApp/BlockChainWithIPFS/starter_kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/rutvikpatel/Desktop/Project/BlockChainApp/BlockChainWithIPFS/starter_kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rutvikpatel/Desktop/Project/BlockChainApp/BlockChainWithIPFS/starter_kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/rutvikpatel/Desktop/Project/BlockChainApp/BlockChainWithIPFS/starter_kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rutvikpatel/Desktop/Project/BlockChainApp/BlockChainWithIPFS/starter_kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/rutvikpatel/Desktop/Project/BlockChainApp/BlockChainWithIPFS/starter_kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/rutvikpatel/Desktop/Project/BlockChainApp/BlockChainWithIPFS/starter_kit/src/components/checkRequest.js\";\nimport React, { Component, useState } from 'react';\nimport Web3 from 'web3';\nimport Meme from '../abis/Meme.json';\nimport { Form, InputGroup, Button, Container, Row, Col, FormGroup, FormControl, ControlLabel, Navbar, Card, ButtonToolbar, ListGroup, ListGroupItem } from \"react-bootstrap\";\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport ReactSearchBox from 'react-search-box';\n\nvar ipfsClient = require('ipfs-http-client');\n\nvar ipfs = ipfsClient({\n  host: 'ipfs.infura.io',\n  port: '5001',\n  protocol: 'https'\n});\n\nvar checkRequest =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(checkRequest, _Component);\n\n  function checkRequest(props) {\n    var _this;\n\n    _classCallCheck(this, checkRequest);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(checkRequest).call(this, props));\n    _this.state = {\n      account: '',\n      buffer: null,\n      contract: null,\n      search: '',\n      totalUserName: [],\n      userEmailId: '',\n      fullName: '',\n      userJsonResultOfParticularUserFromIPFS: null,\n      totalUser: null,\n      profilePicHash: '',\n      userNameList: null,\n      userBlockchainResultOfParticularUser: null,\n      hasError: false\n    };\n    return _this;\n  }\n\n  _createClass(checkRequest, [{\n    key: \"componentWillMount\",\n    value: function () {\n      var _componentWillMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                //this.pausecomp(8500);\n                //this.pausecomp(4500);\n                // await this.loadData();\n                // //await this.check();\n                // await this.getName();\n                // await this.loadNameList();\n                // await this.loadWeb3()\n                // await this.loadBlockChainData();\n                console.log(\"in check request\");\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function componentWillMount() {\n        return _componentWillMount.apply(this, arguments);\n      }\n\n      return componentWillMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var userNameList = this.state.totalUserName.filter(function (people) {\n        return people.name.indexOf(_this2.state.search) !== -1;\n      });\n      var list = userNameList.map(function (people) {\n        return React.createElement(Card, {\n          style: {\n            padding: \"50px\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, React.createElement(Card.Title, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, people.name), React.createElement(Card.Body, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, React.createElement(Card.Link, {\n          href: \"#\",\n          onClick: function onClick() {\n            return _this2.addFriend(people);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, \"Add Friends\"), React.createElement(Card.Link, {\n          href: \"#\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, \"View Profile\")));\n      });\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        variant: \"primary\",\n        type: \"button\",\n        onClick: this.mainPage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"Main Page\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"container text-center \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(Jumbotron, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"Hello,\", this.state.fullName, \" \"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"primary\",\n        onClick: this.check,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"Learn more\"))), React.createElement(Navbar, {\n        bg: \"light\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(Navbar.Brand, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"Search Friend\"))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"Search Friend By Name\",\n        value: this.state.search,\n        onChange: this.updateSearch,\n        style: {\n          height: \"40px\",\n          width: \"990px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }), list));\n    }\n  }]);\n\n  return checkRequest;\n}(Component);\n\nexport default checkRequest;","map":{"version":3,"sources":["/Users/rutvikpatel/Desktop/Project/BlockChainApp/BlockChainWithIPFS/starter_kit/src/components/checkRequest.js"],"names":["React","Component","useState","Web3","Meme","Form","InputGroup","Button","Container","Row","Col","FormGroup","FormControl","ControlLabel","Navbar","Card","ButtonToolbar","ListGroup","ListGroupItem","Jumbotron","ReactSearchBox","ipfsClient","require","ipfs","host","port","protocol","checkRequest","props","state","account","buffer","contract","search","totalUserName","userEmailId","fullName","userJsonResultOfParticularUserFromIPFS","totalUser","profilePicHash","userNameList","userBlockchainResultOfParticularUser","hasError","console","log","filter","people","name","indexOf","list","map","padding","addFriend","mainPage","check","updateSearch","height","width"],"mappings":"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","sourcesContent":["import React, { Component,useState } from 'react';\nimport Web3 from 'web3';\nimport Meme from '../abis/Meme.json';\nimport { Form,InputGroup, Button, Container,Row,Col,FormGroup, FormControl, ControlLabel,Navbar,Card,ButtonToolbar,ListGroup,ListGroupItem } from \"react-bootstrap\";\nimport Jumbotron from 'react-bootstrap/Jumbotron'\nimport ReactSearchBox from 'react-search-box'\nvar ipfsClient = require('ipfs-http-client');\nvar ipfs = ipfsClient({host:'ipfs.infura.io',port:'5001',protocol: 'https' }) ;\n\n\nclass checkRequest extends Component{\n\n    constructor(props){\n        super(props);\n         \n        this.state={\n          account:'',\n          buffer:null,\n          contract:null,\n          search:'',\n          totalUserName:[],\n          userEmailId:'',\n          fullName:'',\n          userJsonResultOfParticularUserFromIPFS:null,\n          totalUser:null,\n          profilePicHash:'',\n          userNameList:null,\n          userBlockchainResultOfParticularUser:null,\n          hasError: false \n        };       \n      }\n      async componentWillMount(){\n        //this.pausecomp(8500);\n        //this.pausecomp(4500);\n        // await this.loadData();\n        // //await this.check();\n        // await this.getName();\n        // await this.loadNameList();\n        // await this.loadWeb3()\n        // await this.loadBlockChainData();\n        console.log(\"in check request\");\n      }\n\n      render(){\n        var userNameList= this.state.totalUserName.filter(\n          (people)=>{\n            return people.name.indexOf(this.state.search)!==-1\n          }\n        );\n        let list = userNameList.map(people => \n          <Card    style={{padding: \"50px\" }} >\n          {/* <Card.Header>Rutvik Patel</Card.Header> */}\n         <Card.Title>{people.name}</Card.Title>\n          <Card.Body>\n            <Card.Link href=\"#\" onClick={() => this.addFriend(people)}>Add Friends</Card.Link>\n            <Card.Link  href=\"#\">View Profile</Card.Link>\n          </Card.Body>\n        </Card>\n        );\n\n       \n   \n        return(\n          <div className=\"container\">\n\n              <br></br>\n              <br></br>\n              <button variant=\"primary\" type=\"button\" onClick={this.mainPage}>Main Page</button>\n              <br></br>\n              <br></br>\n              <br></br>\n            <div className=\"container text-center \">\n            <Jumbotron>\n                   <h1>Hello,{this.state.fullName} </h1>\n                  <p></p>\n                   <p>\n                  <Button variant=\"primary\" onClick={this.check}>Learn more</Button>\n                  </p>\n             </Jumbotron>\n            <Navbar bg=\"light\">\n               <Navbar.Brand >\n               <h1>Search Friend</h1>\n                 </Navbar.Brand>\n             </Navbar>\n             <br></br>\n             <br></br>\n             <input type =\"text\" placeholder=\"Search Friend By Name\" value={this.state.search} onChange={this.updateSearch} style={{height: \"40px\",  width:\"990px\",  }} />\n            <br></br>\n            <br></br>\n             <hr></hr>         \n           {/* {peopleList2.map((people)=>{\n                     return  <h3>{people.value}</h3>\n              })} */}\n\n              {/* {userNameList.map((people)=>{\n                  return  <h3>{people.name}</h3>\n              })} */}\n              { list }\n          {/* {list2} */}\n\n                </div>\n          </div>\n               );\n              }\n            }\n\n\nexport default checkRequest;"]},"metadata":{},"sourceType":"module"}