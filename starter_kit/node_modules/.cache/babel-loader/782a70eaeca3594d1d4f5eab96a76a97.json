{"ast":null,"code":"import _toConsumableArray from \"/Users/rutvikpatel/Desktop/Project/Github6/starter_kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"/Users/rutvikpatel/Desktop/Project/Github6/starter_kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/rutvikpatel/Desktop/Project/Github6/starter_kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/Users/rutvikpatel/Desktop/Project/Github6/starter_kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/rutvikpatel/Desktop/Project/Github6/starter_kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rutvikpatel/Desktop/Project/Github6/starter_kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/rutvikpatel/Desktop/Project/Github6/starter_kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rutvikpatel/Desktop/Project/Github6/starter_kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/rutvikpatel/Desktop/Project/Github6/starter_kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/rutvikpatel/Desktop/Project/Github6/starter_kit/src/components/timeline.js\";\nimport React, { Component } from 'react';\nimport Web3 from 'web3';\nimport Meme from '../abis/Meme.json';\nimport { Button, Navbar, Nav, ListGroup, Modal, Card } from \"react-bootstrap\";\nimport { MDBInput } from 'mdbreact';\nimport './file.css';\nimport ReactDOM from 'react-dom';\nimport Files from 'react-files';\n\nvar CryptoJS = require(\"crypto-js\");\n\nvar ipfsClient = require('ipfs-http-client');\n\nvar ipfs = ipfsClient({\n  host: 'ipfs.infura.io',\n  port: '5001',\n  protocol: 'https'\n});\n\nvar CryptoJS = require(\"crypto-js\");\n\nvar timeline =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(timeline, _Component);\n\n  function timeline(props) {\n    var _this$state;\n\n    var _this;\n\n    _classCallCheck(this, timeline);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(timeline).call(this, props));\n\n    _this.check = function () {\n      console.log(_this.state.fullName);\n      console.log(_this.state.userEmailId);\n      console.log(_this.state.userJsonResultOfParticularUserFromIPFS);\n\n      _this.setState({\n        profilePicHash: _this.state.userJsonResultOfParticularUserFromIPFS.profilePicHash\n      });\n\n      console.log(_this.state.totalUser);\n      console.log(_this.state.userBlockchainResultOfParticularUser); // console.log(this.state.totalUserName);\n      //console.log(this.state.hasError);\n      //console.log(this.state.)\n\n      console.log(_this.state.totalUser);\n\n      for (var j = 0; j < _this.state.totalUser.length; j++) {\n        // console.log(this.state.totalUser[j].userEmailId);\n        // console.log(this.state.totalUser[j].userHash);\n        //this.state.userMap.set(this.state.totalUser[j].userEmailId,this.state.totalUser[j].userHash);\n        _this.state.userPublicKeyMap.set(_this.state.totalUser[j].userEmailId, _this.state.totalUser[j].publickey);\n      } //console.log(this.state.userMap);\n\n\n      console.log(_this.state.userPublicKeyMap);\n    };\n\n    _this.loadData = function () {\n      console.log(\"in load data\");\n\n      _this.setState({\n        userPublicKeyMap: new Map()\n      });\n\n      _this.setState({\n        fullName: _this.props.location.fullName\n      });\n\n      _this.setState({\n        userEmailId: _this.props.location.userEmailId\n      });\n\n      _this.setState({\n        userJsonResultOfParticularUserFromIPFS: _this.props.location.userJsonResultOfParticularUserFromIPFS\n      }); //this.setState({profilePicHash:this.state.userJsonResultOfParticularUserFromIPFS.profilePicHash});\n\n\n      _this.setState({\n        userInformationListFromBlockChain: _this.props.location.userInformationListFromBlockChain\n      });\n\n      _this.setState({\n        totalUser: _this.props.location.totalUser\n      });\n\n      _this.setState({\n        userBlockchainResultOfParticularUser: _this.props.location.userBlockchainResultOfParticularUser\n      });\n    };\n\n    _this.updateSearch = function (event) {\n      //  console.log(event.target.value);\n      _this.setState({\n        search: event.target.value.substr(0, 20)\n      });\n    };\n\n    _this.makeid = function (length) {\n      var result = '';\n      var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n      var charactersLength = characters.length;\n\n      for (var i = 0; i < length; i++) {\n        result += characters.charAt(Math.floor(Math.random() * charactersLength));\n      }\n\n      return result;\n    };\n\n    _this.removeFriend = function (dataParse) {\n      var groupKey1 = _this.makeid(10);\n\n      var groupKey2 = _this.makeid(10);\n\n      console.log(dataParse);\n      var dataArray = [];\n\n      for (var i = 0; i < _this.state.groupInformationListFromBlockChain.length; i++) {\n        if (dataParse.emailId == _this.state.groupInformationListFromBlockChain[i].groupEmailId) {\n          dataArray.push(_this.state.groupInformationListFromBlockChain[i]);\n        }\n      }\n\n      var myMap = new Map();\n      var max = -1;\n\n      for (var i = 0; i < dataArray.length; i++) {\n        var value = dataArray[i].groupVersion;\n        console.log(value);\n        value = value.toString();\n        myMap.set(value, dataArray[i]);\n        console.log(value);\n\n        if (value > max) {\n          max = value;\n        }\n      }\n\n      console.log(\"lastest group version is\");\n      console.log(max);\n      console.log(myMap.get(max));\n      var lastestGroupDetailHash = myMap.get(max);\n      console.log(lastestGroupDetailHash);\n      ipfs.get(\"/ipfs/\" + lastestGroupDetailHash.groupHash, function (error, result) {\n        console.log(result[0].path);\n        var content = result[0].content;\n        console.log(content);\n        var groupData = JSON.parse(content);\n        console.log(groupData.friend);\n        console.log(groupData);\n        console.log(\"old common group key \");\n        console.log(groupData.commonGroupKey);\n        groupData.commonGroupKey = groupKey1;\n        console.log(\"New common group key \");\n        console.log(groupData.commonGroupKey);\n        var friendRemoveData = [];\n        var obj = [];\n        console.log(groupData.friend.length);\n\n        for (var i = 0; i < groupData.friend.length; i++) {\n          console.log(groupData.friend[i]);\n\n          if (groupData.friend[i].emailId == _this.state.userEmailId) {\n            friendRemoveData = groupData.friend[i];\n          } else {\n            obj.push(groupData.friend[i]);\n          }\n        }\n\n        var groupVersion = groupData.groupVersion;\n        groupVersion++;\n        groupData.groupVersion = groupVersion;\n        console.log(obj);\n        console.log(friendRemoveData);\n        groupData.friend = obj;\n        console.log(groupData);\n        obj = [];\n\n        for (var i = 0; i < groupData.groupDetails.length; i++) {\n          if (groupData.groupDetails[i].emailId == _this.state.userEmailId) {} else {\n            var publicKey = _this.state.userPublicKeyMap.get(groupData.groupDetails[i].emailId); // var ciphertext = CryptoJS.AES.encrypt(this.state.groupKey, this.state.userBlockchainResultOfParticularUser.userPublicKey).toString();\n\n\n            var encryptedGroupKey = CryptoJS.AES.encrypt(groupData.commonGroupKey, publicKey).toString();\n            var userObject = {\n              name: groupData.groupDetails[i].name,\n              emailId: groupData.groupDetails[i].emailId,\n              encryptedGroupkey: encryptedGroupKey,\n              userHash: groupData.groupDetails[i].userHash\n            };\n            obj.push(userObject);\n          }\n        }\n\n        console.log(obj);\n        groupData.groupDetails = obj;\n        console.log(groupData);\n        var originalContentString = Buffer.from(JSON.stringify(groupData)); // The json is change to string format \n\n        var userContent3 = {\n          content: originalContentString\n        };\n        ipfs.add(userContent3, function (error, results) {\n          console.log(results);\n          var userInformationHash = results[0].hash;\n          console.log(results[0].hash);\n          console.log(dataParse.userId);\n          _this.state.userBlockchainResultOfParticularUser.userHash = results[0].hash;\n\n          _this.state.contract.methods.createGroup(dataParse.emailId, userInformationHash, groupVersion).send({\n            from: _this.state.account\n          }).then(function (r) {\n            console.log(r);\n          });\n        });\n      });\n      ipfs.get(\"/ipfs/\" + _this.state.currentUserGroupHash, function (error, result) {\n        console.log(result[0].path);\n        var content = result[0].content;\n        console.log(content);\n        var groupData = JSON.parse(content);\n        console.log(groupData.friend);\n        console.log(groupData);\n        console.log(groupData.friend);\n        console.log(\"old common group key \");\n        console.log(groupData.commonGroupKey);\n        groupData.commonGroupKey = groupKey1;\n        console.log(\"New common group key \");\n        console.log(groupData.commonGroupKey);\n        var friendRemoveData = [];\n        var obj = [];\n        console.log(groupData.friend.length);\n\n        for (var i = 0; i < groupData.friend.length; i++) {\n          console.log(groupData.friend[i]);\n\n          if (groupData.friend[i].emailId == dataParse.emailId) {\n            friendRemoveData = groupData.friend[i];\n          } else {\n            obj.push(groupData.friend[i]);\n          }\n        }\n\n        var groupVersion = groupData.groupVersion;\n        groupVersion++;\n        groupData.groupVersion = groupVersion;\n        console.log(obj);\n        console.log(friendRemoveData);\n        groupData.friend = obj;\n        console.log(groupData);\n        obj = [];\n\n        for (var i = 0; i < groupData.groupDetails.length; i++) {\n          if (groupData.groupDetails[i].emailId == dataParse.emailId) {} else {\n            var publicKey = _this.state.userPublicKeyMap.get(groupData.groupDetails[i].emailId); // var ciphertext = CryptoJS.AES.encrypt(this.state.groupKey, this.state.userBlockchainResultOfParticularUser.userPublicKey).toString();\n\n\n            var encryptedGroupKey = CryptoJS.AES.encrypt(groupData.commonGroupKey, publicKey).toString();\n            var userObject = {\n              name: groupData.groupDetails[i].name,\n              emailId: groupData.groupDetails[i].emailId,\n              encryptedGroupkey: encryptedGroupKey,\n              userHash: groupData.groupDetails[i].userHash\n            };\n            obj.push(userObject);\n          }\n        }\n\n        console.log(obj);\n        groupData.groupDetails = obj;\n        console.log(groupData);\n        var originalContentString = Buffer.from(JSON.stringify(groupData)); // The json is change to string format \n\n        var userContent3 = {\n          content: originalContentString\n        };\n        ipfs.add(userContent3, function (error, results) {\n          console.log(results);\n          var userInformationHash = results[0].hash;\n          console.log(results[0].hash);\n          console.log(dataParse.userId);\n          console.log(\"&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&\");\n          _this.state.userBlockchainResultOfParticularUser.userHash = results[0].hash;\n\n          _this.state.contract.methods.createGroup(_this.state.userEmailId, userInformationHash, groupVersion).send({\n            from: _this.state.account\n          }).then(function (r) {\n            console.log(r);\n          });\n        });\n      });\n    };\n\n    _this.signOut = function () {\n      _this.props.history.push({\n        pathname: '/login' // your data array of objects\n\n      });\n    };\n\n    _this.mainPage = function () {\n      console.log(_this.state.userJsonResultOfParticularUserFromIPFS);\n      console.log(_this.state.requestedFriendName);\n\n      _this.props.history.push({\n        pathname: '/MainPage',\n        userEmailId: _this.state.userEmailId,\n        fullName: _this.state.fullName,\n        userJsonResultOfParticularUserFromIPFS: _this.state.userJsonResultOfParticularUserFromIPFS,\n        totalUser: _this.state.totalUser,\n        userBlockchainResultOfParticularUser: _this.state.userBlockchainResultOfParticularUser // your data array of objects\n\n      });\n    };\n\n    console.log(props);\n    _this.state = (_this$state = {\n      account: '',\n      buffer: null,\n      contract: null,\n      userEmailId: '',\n      fullName: '',\n      search: '',\n      userJsonResultOfParticularUserFromIPFS: null,\n      userBlockchainResultOfParticularUser: null,\n      totalUser: null,\n      isVisible: false,\n      showModal: false,\n      profilePicModal: false\n    }, _defineProperty(_this$state, \"buffer\", null), _defineProperty(_this$state, \"profilePicBuffer\", ''), _defineProperty(_this$state, \"postPicBuffer\", ''), _defineProperty(_this$state, \"groupInformationListFromBlockChain\", []), _defineProperty(_this$state, \"profilePicHash\", ''), _defineProperty(_this$state, \"friendName\", []), _defineProperty(_this$state, \"currentUserGroupHash\", ''), _defineProperty(_this$state, \"currentGroupKeyInformation\", null), _defineProperty(_this$state, \"userPublicKeyMap\", null), _this$state);\n    return _this;\n  }\n\n  _createClass(timeline, [{\n    key: \"componentWillMount\",\n    value: function () {\n      var _componentWillMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.loadData();\n\n              case 2:\n                _context.next = 4;\n                return this.check();\n\n              case 4:\n                _context.next = 6;\n                return this.loadWeb3();\n\n              case 6:\n                _context.next = 8;\n                return this.loadBlockChainData();\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentWillMount() {\n        return _componentWillMount.apply(this, arguments);\n      }\n\n      return componentWillMount;\n    }()\n  }, {\n    key: \"updateModal\",\n    value: function updateModal(isVisible) {\n      this.state.isVisible = isVisible;\n      this.forceUpdate();\n    }\n  }, {\n    key: \"loadWeb3\",\n    value: function () {\n      var _loadWeb = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!window.ethereum) {\n                  _context2.next = 4;\n                  break;\n                }\n\n                window.web3 = new Web3(window.ethereum);\n                _context2.next = 4;\n                return window.ethereum.enable();\n\n              case 4:\n                if (window.web3) {\n                  window.web3 = new Web3(window.web3.currentProvider);\n                } else {\n                  window.alert(\"Use Metamask\");\n                }\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function loadWeb3() {\n        return _loadWeb.apply(this, arguments);\n      }\n\n      return loadWeb3;\n    }()\n  }, {\n    key: \"loadBlockChainData\",\n    value: function () {\n      var _loadBlockChainData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        var _this2 = this;\n\n        var web3_2, accounts, networkId, networkdata, abi, address, contract, tt, groupCount, i, groupInformationListFromBlockChain, dataArray, myMap, max, value, lastestGroupDetailHash, t, content;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                web3_2 = window.web3;\n                _context3.next = 3;\n                return web3_2.eth.getAccounts();\n\n              case 3:\n                accounts = _context3.sent;\n                this.setState({\n                  account: accounts[0]\n                });\n                _context3.next = 7;\n                return web3_2.eth.net.getId();\n\n              case 7:\n                networkId = _context3.sent;\n                networkdata = Meme.networks[networkId];\n\n                if (!networkdata) {\n                  _context3.next = 52;\n                  break;\n                }\n\n                abi = Meme.abi;\n                address = networkdata.address; //fetch the contract \n\n                contract = web3_2.eth.Contract(abi, address);\n                console.log(contract);\n                this.setState({\n                  contract: contract\n                });\n                console.log(contract.methods); //  const MemeHash =await contract.methods.get().call();\n\n                _context3.next = 18;\n                return this.state.contract.methods.groupCount().call();\n\n              case 18:\n                tt = _context3.sent;\n                _context3.next = 21;\n                return tt;\n\n              case 21:\n                groupCount = _context3.sent;\n                groupCount = groupCount.toString();\n                console.log(\"group Count\");\n                console.log(groupCount);\n                i = 1;\n\n              case 26:\n                if (!(i <= groupCount)) {\n                  _context3.next = 35;\n                  break;\n                }\n\n                _context3.next = 29;\n                return this.state.contract.methods.groupInformation(i).call();\n\n              case 29:\n                groupInformationListFromBlockChain = _context3.sent;\n                console.log(groupInformationListFromBlockChain);\n                this.setState({\n                  groupInformationListFromBlockChain: [].concat(_toConsumableArray(this.state.groupInformationListFromBlockChain), [groupInformationListFromBlockChain])\n                });\n\n              case 32:\n                i++;\n                _context3.next = 26;\n                break;\n\n              case 35:\n                ////\n                console.log(this.state.groupInformationListFromBlockChain);\n                console.log(this.state.groupInformationListFromBlockChain);\n                dataArray = [];\n\n                for (i = 0; i < this.state.groupInformationListFromBlockChain.length; i++) {\n                  if (this.state.groupInformationListFromBlockChain[i].groupEmailId == this.state.userEmailId) {\n                    dataArray.push(this.state.groupInformationListFromBlockChain[i]);\n                    console.log(this.state.groupInformationListFromBlockChain[i]);\n                  }\n                }\n\n                myMap = new Map();\n                max = -1;\n\n                for (i = 0; i < dataArray.length; i++) {\n                  value = dataArray[i].groupVersion;\n                  console.log(value);\n                  value = value.toString();\n                  myMap.set(value, dataArray[i]);\n                  console.log(value);\n\n                  if (value > max) {\n                    max = value;\n                  }\n                }\n\n                console.log(\"lastest group version is\");\n                console.log(max);\n                console.log(myMap.get(max));\n                lastestGroupDetailHash = myMap.get(max);\n                console.log(lastestGroupDetailHash);\n                this.setState({\n                  currentUserGroupHash: lastestGroupDetailHash.groupHash\n                });\n                this.setState({\n                  currentGroupKeyInformation: lastestGroupDetailHash\n                });\n\n                if (max != -1) {\n                  t = lastestGroupDetailHash.groupHash;\n                  ipfs.get(\"/ipfs/\" + t, function (error, result) {\n                    console.log(result[0].path);\n                    content = result[0].content;\n                    console.log(content);\n                    var groupData = JSON.parse(content);\n                    console.log(groupData);\n\n                    for (var i = 0; i < groupData.friend.length; i++) {\n                      console.log(groupData.friend[i]);\n\n                      _this2.state.friendName.push(groupData.friend[i]);\n                    }\n\n                    _this2.setState({\n                      groupInformationPassParameter: groupData\n                    });\n\n                    console.log(_this2.state.groupInformationPassParameter);\n                    console.log(_this2.state.friendName);\n                  });\n                }\n\n                _context3.next = 53;\n                break;\n\n              case 52:\n                window.alert(\"Smart contract not deployed to detected the network\");\n\n              case 53:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function loadBlockChainData() {\n        return _loadBlockChainData.apply(this, arguments);\n      }\n\n      return loadBlockChainData;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var cardStyle2 = {\n        padding: \"10px 10px 10px 10px\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        textAlign: \"center\" // width:\"1000px \n\n      };\n      var cardStyle = {\n        padding: \"10px 10px 10px 10px\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\" // width:\"1000px \n\n      };\n      var addPost = {\n        float: \"right\",\n        background: \"#365899\",\n        border: \"none\",\n        color: \"#fff\",\n        fontWeight: \"bold\" //padding: \"10px 15px\",\n        //borderRadius: \"6px\"\n\n      };\n      var username = {\n        margin: \"15px 0\",\n        padding: \"15px 10px\",\n        width: \"100%\",\n        outline: \"none\",\n        border: \"1px solid #bbb\",\n        borderRadius: \"20px\",\n        display: \"inline-block\",\n        fontSize: \"20px\"\n      };\n      var card = {\n        boxShadow: \"0px 0px 0.5px rgba(10,10,10,.3)\",\n        alignItems: \"center\",\n        position: \"relative\",\n        userSelect: \"none\",\n        overflow: \"hidden\",\n        transition: \"all .5s ease\",\n        padding: \"10px\",\n        width: \"850px\",\n        height: \"100%\",\n        maxWidth: \"100%\",\n        backgroundColor: \"white\",\n        marginBottom: \"10px\",\n        fontSize: \"14px\",\n        borderRadius: \"3px\",\n        borderStyle: \"solid\",\n        borderColor: \"#365899\"\n      };\n      var card2 = {\n        boxShadow: \"0px 0px 0.5px rgba(10,10,10,.3)\",\n        alignItems: \"center\",\n        position: \"relative\",\n        userSelect: \"none\",\n        overflow: \"hidden\",\n        transition: \"all .5s ease\",\n        padding: \"10px\",\n        width: \"950px\",\n        height: \"280px\",\n        maxWidth: \"100%\",\n        backgroundColor: \"white\",\n        marginBottom: \"10px\",\n        fontSize: \"14px\",\n        borderRadius: \"3px\"\n      };\n      var info = {\n        display: \"flex\",\n        alignItems: \"center\",\n        height: \"40px\"\n      };\n      var photo = {\n        height: \"40px\",\n        width: \"40px\",\n        backgroundColor: \"gray\",\n        opacity: \".8\",\n        borderRadius: \"100%\"\n      };\n      var name = {\n        fontWeight: \"bold\",\n        color: \"rgb(66, 103, 178)\",\n        opacity: \".9\",\n        paddingLeft: \"20px\"\n      };\n      var mystyle = {\n        textAlign: \"center\",\n        font: \"inherit\",\n        border: \"2px solid #365899\",\n        padding: \"13px 12px\",\n        fontSize: \"15px\",\n        boxShadow: \"0 1px 1px #DDD\",\n        width: \" 700px\",\n        outline: \"none\",\n        display: \"block\",\n        color: \"#788585\",\n        margin: \"0 auto 20px\",\n        height: \"50px\" // color: \"white\",\n        // backgroundColor: \"DodgerBlue\",\n        // padding: \"10px\",\n        // fontFamily: \"Arial\",\n        // cursor: \"pointer\"\n\n      };\n      var ReactHeading = {\n        // {textAlign: \"center\",\n        //  padding: \"50px\",\n        // textTransform: \"uppercase\",\n        //color: \"DodgerBlue\",\n        color: \"#365899\",\n        fontSize: \"25px\",\n        textTransform: \"uppercase\",\n        fontWeight: \"300\",\n        textAlign: \"center\",\n        marginBottom: \"15px\",\n        paddingBottom: \"20px\",\n        fontFamily: \"RalewayBold,Arial,sans-serif\"\n      };\n      var cardBorder = {\n        padding: \"10px\",\n        margin: \"10px\",\n        border: \"2px solid #365899\"\n      };\n      var userNameList = this.state.friendName.filter(function (people) {\n        return people.name.indexOf(_this3.state.search) !== -1;\n      });\n      var list2 = userNameList.map(function (people) {\n        return React.createElement(Card, {\n          style: cardBorder,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 570\n          },\n          __self: this\n        }, React.createElement(Card.Body, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 571\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 572\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"box media\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 573\n          },\n          __self: this\n        }, React.createElement(\"figure\", {\n          className: \"image is-96x96 media-left\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 574\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: people.profilePicHash,\n          style: {\n            height: \"100%\",\n            width: \"150px\"\n          },\n          alt: \"Rutvik\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 575\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"media-content\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 577\n          },\n          __self: this\n        }, React.createElement(Card.Title, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 579\n          },\n          __self: this\n        }, people.name), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 580\n          },\n          __self: this\n        }), React.createElement(Card.Link, {\n          style: {\n            padding: \"10px\"\n          },\n          onClick: function onClick() {\n            return _this3.removeFriend(people);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 581\n          },\n          __self: this\n        }, React.createElement(Button, {\n          variant: \"danger\",\n          size: \"sm\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 581\n          },\n          __self: this\n        }, \" unfriend\")))))));\n      } //\n      );\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 592\n        },\n        __self: this\n      }, React.createElement(\"link\", {\n        href: \"https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\",\n        rel: \"stylesheet\",\n        integrity: \"sha384-wvfXpqpZZVQGK6TAh5PVlGOfQNHSoD2xbE+QkPxCAFlNEevoEH3Sl0sibVcOQVnN\",\n        crossorigin: \"anonymous\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 593\n        },\n        __self: this\n      }), React.createElement(Navbar, {\n        bg: \"light\",\n        expand: \"lg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 594\n        },\n        __self: this\n      }, React.createElement(Navbar.Brand, {\n        href: \"#home\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 595\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcQtRwMIKUhJfgz64gGRnrGmgHWdPsnP4zv_HlocpHesF_3BM8Aw&usqp=CAU\",\n        style: {\n          height: \"100%\",\n          width: \"70px\"\n        },\n        alt: \"\",\n        className: \"img-responsive\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 595\n        },\n        __self: this\n      })), React.createElement(Navbar.Toggle, {\n        \"aria-controls\": \"basic-navbar-nav\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 596\n        },\n        __self: this\n      }), React.createElement(Navbar.Collapse, {\n        id: \"basic-navbar-nav\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 597\n        },\n        __self: this\n      }, React.createElement(Nav, {\n        className: \"mr-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 598\n        },\n        __self: this\n      }, React.createElement(Nav.Link, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 599\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"primary\",\n        style: {\n          background: \"#365899\"\n        },\n        onClick: this.mainPage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 599\n        },\n        __self: this\n      }, \" \", React.createElement(\"span\", {\n        className: \"fa fa-backward\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 599\n        },\n        __self: this\n      }), \" Main Page\"))), React.createElement(Button, {\n        variant: \"primary\",\n        style: {\n          marginRight: \"10px\",\n          background: \"#365899\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 602\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"fa fa-id-badge\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 602\n        },\n        __self: this\n      }), \" \", this.state.fullName), React.createElement(Button, {\n        Button: true,\n        variant: \"light\",\n        onClick: this.signOut,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 603\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        class: \"fa fa-sign-out\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 603\n        },\n        __self: this\n      }), \" Log Out\"))), React.createElement(\"div\", {\n        style: cardStyle2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 606\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: card2,\n        expand: \"false\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 607\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: info,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 608\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          textAlign: \"center\",\n          marginTop: \"240px\",\n          marginLeft: \"300px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 609\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: this.state.userJsonResultOfParticularUserFromIPFS.profilePicHash,\n        style: {\n          height: \"100%\",\n          width: \"300px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 610\n        },\n        __self: this\n      }))))), React.createElement(\"div\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 615\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 616\n        },\n        __self: this\n      }, this.state.fullName)), React.createElement(\"div\", {\n        className: \"container text-center \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 618\n        },\n        __self: this\n      }, React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 620\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"text\",\n        style: mystyle,\n        placeholder: \"Search Friend By Name\",\n        value: this.state.search,\n        onChange: this.updateSearch,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 621\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 622\n        },\n        __self: this\n      }), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 623\n        },\n        __self: this\n      }), list2));\n    }\n  }]);\n\n  return timeline;\n}(Component);\n\nexport default timeline;","map":{"version":3,"sources":["/Users/rutvikpatel/Desktop/Project/Github6/starter_kit/src/components/timeline.js"],"names":["React","Component","Web3","Meme","Button","Navbar","Nav","ListGroup","Modal","Card","MDBInput","ReactDOM","Files","CryptoJS","require","ipfsClient","ipfs","host","port","protocol","timeline","props","check","console","log","state","fullName","userEmailId","userJsonResultOfParticularUserFromIPFS","setState","profilePicHash","totalUser","userBlockchainResultOfParticularUser","j","length","userPublicKeyMap","set","publickey","loadData","Map","location","userInformationListFromBlockChain","updateSearch","event","search","target","value","substr","makeid","result","characters","charactersLength","i","charAt","Math","floor","random","removeFriend","dataParse","groupKey1","groupKey2","dataArray","groupInformationListFromBlockChain","emailId","groupEmailId","push","myMap","max","groupVersion","toString","get","lastestGroupDetailHash","groupHash","error","path","content","groupData","JSON","parse","friend","commonGroupKey","friendRemoveData","obj","groupDetails","publicKey","encryptedGroupKey","AES","encrypt","userObject","name","encryptedGroupkey","userHash","originalContentString","Buffer","from","stringify","userContent3","add","results","userInformationHash","hash","userId","contract","methods","createGroup","send","account","then","r","currentUserGroupHash","signOut","history","pathname","mainPage","requestedFriendName","buffer","isVisible","showModal","profilePicModal","loadWeb3","loadBlockChainData","forceUpdate","window","ethereum","web3","enable","currentProvider","alert","web3_2","eth","getAccounts","accounts","net","getId","networkId","networkdata","networks","abi","address","Contract","groupCount","call","tt","groupInformation","currentGroupKeyInformation","t","friendName","groupInformationPassParameter","cardStyle2","padding","display","flexDirection","alignItems","textAlign","cardStyle","addPost","float","background","border","color","fontWeight","username","margin","width","outline","borderRadius","fontSize","card","boxShadow","position","userSelect","overflow","transition","height","maxWidth","backgroundColor","marginBottom","borderStyle","borderColor","card2","info","photo","opacity","paddingLeft","mystyle","font","ReactHeading","textTransform","paddingBottom","fontFamily","cardBorder","userNameList","filter","people","indexOf","list2","map","marginRight","marginTop","marginLeft"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Web3 from 'web3';\nimport Meme from '../abis/Meme.json';\nimport { Button,Navbar,Nav,ListGroup,Modal,Card } from \"react-bootstrap\";\nimport { MDBInput } from 'mdbreact';\nimport './file.css'; \nimport ReactDOM from 'react-dom'\nimport Files from 'react-files'\nvar CryptoJS = require(\"crypto-js\");\n\nvar ipfsClient = require('ipfs-http-client');\nvar ipfs = ipfsClient({host:'ipfs.infura.io',port:'5001',protocol: 'https' }) ;\nvar CryptoJS = require(\"crypto-js\");\n\n\nclass timeline  extends Component{\n\n      \n    constructor(props){\n        super(props);\n        console.log(props);\n        this.state={\n          account:'',\n          buffer:null,\n          contract:null,\n          userEmailId:'',\n          fullName:'',\n          search:'',\n          userJsonResultOfParticularUserFromIPFS:null,\n          userBlockchainResultOfParticularUser:null,\n          totalUser:null,\n          isVisible: false,\n          showModal:false,\n          profilePicModal:false,\n          buffer:null,\n          profilePicBuffer:'',\n          postPicBuffer:'',\n          groupInformationListFromBlockChain:[],\n          profilePicHash:'',\n          friendName:[],\n          currentUserGroupHash:'',\n          currentGroupKeyInformation:null,\n          userPublicKeyMap:null\n\n        };       \n      }\n\n\n      async componentWillMount(){\n       await this.loadData();\n       await this.check();\n        await this.loadWeb3()\n        await this.loadBlockChainData();\n      }\n\n      check=()=>{\n        console.log(this.state.fullName);\n        console.log(this.state.userEmailId)\n        console.log(this.state.userJsonResultOfParticularUserFromIPFS);\n        this.setState({profilePicHash:this.state.userJsonResultOfParticularUserFromIPFS.profilePicHash});\n        console.log(this.state.totalUser);\n        console.log(this.state.userBlockchainResultOfParticularUser);\n       // console.log(this.state.totalUserName);\n        //console.log(this.state.hasError);\n        //console.log(this.state.)\n        console.log(this.state.totalUser);\n        for(var j=0;j<this.state.totalUser.length;j++){\n          // console.log(this.state.totalUser[j].userEmailId);\n          // console.log(this.state.totalUser[j].userHash);\n          //this.state.userMap.set(this.state.totalUser[j].userEmailId,this.state.totalUser[j].userHash);\n          this.state.userPublicKeyMap.set(this.state.totalUser[j].userEmailId,this.state.totalUser[j].publickey);\n        }\n        //console.log(this.state.userMap);\n        console.log(this.state.userPublicKeyMap);\n\n\n       }\n      updateModal(isVisible) {\n        this.state.isVisible = isVisible;\n        this.forceUpdate();\n      }\n      loadData=()=>{\n        console.log(\"in load data\");\n        this.setState({userPublicKeyMap:new Map()});\n       this.setState({fullName:this.props.location.fullName});\n       this.setState({userEmailId:this.props.location.userEmailId});\n       this.setState({userJsonResultOfParticularUserFromIPFS:this.props.location.userJsonResultOfParticularUserFromIPFS});\n       //this.setState({profilePicHash:this.state.userJsonResultOfParticularUserFromIPFS.profilePicHash});\n       this.setState({userInformationListFromBlockChain:this.props.location.userInformationListFromBlockChain});\n       this.setState({totalUser:this.props.location.totalUser});\n       this.setState({userBlockchainResultOfParticularUser:this.props.location.userBlockchainResultOfParticularUser});\n    }\n\n      async loadWeb3(){\n        if(window.ethereum){\n          window.web3 = new Web3(window.ethereum);\n          await window.ethereum.enable();\n        }\n        if(window.web3){\n          window.web3 = new Web3(window.web3.currentProvider);\n        }\n        else{\n          window.alert(\"Use Metamask\");\n        } \n      }\n\n      async loadBlockChainData(){\n        const web3_2 = window.web3;\n        const accounts =  await web3_2.eth.getAccounts();\n        this.setState({account:accounts[0]});\n        const networkId = await web3_2.eth.net.getId();\n        const networkdata= Meme.networks[networkId];\n        if(networkdata){\n          const abi =Meme.abi;\n          const address = networkdata.address;\n          //fetch the contract \n          const contract = web3_2.eth.Contract(abi,address);\n          console.log(contract);\n          this.setState({contract:contract});\n          console.log(contract.methods);\n        //  const MemeHash =await contract.methods.get().call();\n\n\n        var tt= await this.state.contract.methods.groupCount().call();\n        var groupCount=await tt;\n        groupCount=groupCount.toString();\n        console.log(\"group Count\");\n        console.log(groupCount);\n        for(var i=1;i<=groupCount;i++){\n          const groupInformationListFromBlockChain= await this.state.contract.methods.groupInformation(i).call();\n          console.log(groupInformationListFromBlockChain)\n            this.setState({\n              groupInformationListFromBlockChain:[...this.state.groupInformationListFromBlockChain, groupInformationListFromBlockChain]\n           })\n        }\n        ////\n\n      \n        console.log(this.state.groupInformationListFromBlockChain)\n     \n        console.log(this.state.groupInformationListFromBlockChain);\n        var dataArray=[]\n        for(var i=0;i<this.state.groupInformationListFromBlockChain.length;i++){\n                if(this.state.groupInformationListFromBlockChain[i].groupEmailId==this.state.userEmailId){\n                    dataArray.push(this.state.groupInformationListFromBlockChain[i]);\n                    console.log(this.state.groupInformationListFromBlockChain[i]);\n                }\n        }\n        \n        let myMap = new Map();\n        var max=-1;\n        for(var i=0;i<dataArray.length;i++){\n         var value=dataArray[i].groupVersion;\n         console.log(value);\n         value=value.toString();\n         myMap.set(value,dataArray[i]);\n         console.log(value);\n         if(value>max){\n           max=value;\n         }\n        }\n        console.log(\"lastest group version is\");\n        console.log(max);\n        console.log(myMap.get(max));\n        var lastestGroupDetailHash= myMap.get(max);\n        console.log(lastestGroupDetailHash);\n        this.setState({currentUserGroupHash:lastestGroupDetailHash.groupHash})\n        this.setState({currentGroupKeyInformation:lastestGroupDetailHash});\n\n       if(max!=-1){\n        var t= lastestGroupDetailHash.groupHash;\n        var content;\n        ipfs.get(\"/ipfs/\"+t,(error,result)=>{\n          console.log(result[0].path);\n          content=result[0].content;\n          console.log(content);\n         var groupData=JSON.parse(content);\n         console.log(groupData);\n            for(var i=0;i<groupData.friend.length;i++){\n                console.log(groupData.friend[i]);\n                this.state.friendName.push(groupData.friend[i]);\n            }\n\n          \n         this.setState({ groupInformationPassParameter:groupData})\n         console.log(this.state.groupInformationPassParameter);\n         console.log(this.state.friendName);\n        })\n       }\n\n\n\n\n\n\n\n        }\n        else{\n          window.alert(\"Smart contract not deployed to detected the network\");\n        }\n      }\n\n      updateSearch=(event)=>{\n        //  console.log(event.target.value);\n          this.setState({search:event.target.value.substr(0,20)})      \n         }\n         makeid=(length)=>{\n          var result           = '';\n          var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n          var charactersLength = characters.length;\n          for ( var i = 0; i < length; i++ ) {\n             result += characters.charAt(Math.floor(Math.random() * charactersLength));\n          }\n          return result;\n       }\n         removeFriend=(dataParse)=>{\n           var groupKey1=this.makeid(10);\n           var groupKey2=this.makeid(10);\n            console.log(dataParse);\n            var dataArray=[];\n            for(var i=0;i<this.state.groupInformationListFromBlockChain.length;i++){\n              if(dataParse.emailId==this.state.groupInformationListFromBlockChain[i].groupEmailId){\n                dataArray.push(this.state.groupInformationListFromBlockChain[i]);\n              }\n            }\n            let myMap = new Map();\n            var max=-1;\n            for(var i=0;i<dataArray.length;i++){\n             var value=dataArray[i].groupVersion;\n             console.log(value);\n             value=value.toString();\n             myMap.set(value,dataArray[i]);\n             console.log(value);\n             if(value>max){\n               max=value;\n             }\n            }\n            console.log(\"lastest group version is\");\n            console.log(max);\n            console.log(myMap.get(max));\n            var lastestGroupDetailHash= myMap.get(max);\n            console.log(lastestGroupDetailHash);\n           \n            ipfs.get(\"/ipfs/\"+lastestGroupDetailHash.groupHash,(error,result)=>{\n              console.log(result[0].path);\n              var content=result[0].content;\n              console.log(content);\n              var groupData=JSON.parse(content);\n              console.log(groupData.friend);\n              console.log(groupData);\n              console.log(\"old common group key \")\n              console.log(groupData.commonGroupKey);\n              groupData.commonGroupKey=groupKey1;\n              console.log(\"New common group key \")\n              console.log(groupData.commonGroupKey);\n              var friendRemoveData=[];\n              var obj=[];\n              console.log(groupData.friend.length);\n\n              for(var i=0;i<groupData.friend.length;i++){\n                console.log(groupData.friend[i]);\n                if(groupData.friend[i].emailId==this.state.userEmailId){\n                  friendRemoveData=groupData.friend[i];\n                }\n                else{\n                obj.push(groupData.friend[i]);\n                }\n              }\n              var groupVersion =groupData.groupVersion;\n              groupVersion++;\n              groupData.groupVersion=groupVersion;\n              console.log(obj);\n              console.log(friendRemoveData);\n              groupData.friend=obj;\n              console.log( groupData);\n             obj=[]\n              for(var i=0;i<groupData.groupDetails.length;i++){\n                if(groupData.groupDetails[i].emailId==this.state.userEmailId){\n\n                }\n                else{\n                  var publicKey =this.state.userPublicKeyMap.get(groupData.groupDetails[i].emailId);\n                  // var ciphertext = CryptoJS.AES.encrypt(this.state.groupKey, this.state.userBlockchainResultOfParticularUser.userPublicKey).toString();\n                  var encryptedGroupKey = CryptoJS.AES.encrypt(groupData.commonGroupKey,publicKey).toString();\n                \n                  var userObject={\n                    name:groupData.groupDetails[i].name,\n                    emailId:groupData.groupDetails[i].emailId,\n                    encryptedGroupkey: encryptedGroupKey,\n                    userHash:groupData.groupDetails[i].userHash\n                  }\n                  obj.push(userObject)\n                }\n              }\n              console.log(obj);\n              groupData.groupDetails=obj;\n              console.log(groupData);\n\n              var originalContentString = Buffer.from(JSON.stringify(groupData));\n              // The json is change to string format \n              const userContent3= {\n                content:originalContentString\n            }\n           \n              ipfs.add(userContent3,(error,results)=>{\n     \n                console.log(results);\n                var userInformationHash= results[0].hash;\n                console.log(results[0].hash);  \n                console.log(dataParse.userId);\n                this.state.userBlockchainResultOfParticularUser.userHash=results[0].hash;\n                   this.state.contract.methods.createGroup(dataParse.emailId,userInformationHash,groupVersion).send({from: this.state.account}).then((r)=>{\n                      console.log(r);\n                  });\n\n              });\n\n            });\n\n                    \n          ipfs.get(\"/ipfs/\"+this.state.currentUserGroupHash,(error,result)=>{\n            console.log(result[0].path);\n            var content=result[0].content;\n            console.log(content);\n            var groupData=JSON.parse(content);\n            console.log(groupData.friend);\n            console.log(groupData);\n            console.log(groupData.friend);\n            console.log(\"old common group key \")\n            console.log(groupData.commonGroupKey);\n            groupData.commonGroupKey=groupKey1;\n            console.log(\"New common group key \")\n            console.log(groupData.commonGroupKey);\n            var friendRemoveData=[];\n            var obj=[];\n            console.log(groupData.friend.length);\n\n            for(var i=0;i<groupData.friend.length;i++){\n              console.log(groupData.friend[i]);\n              if(groupData.friend[i].emailId==dataParse.emailId){\n                friendRemoveData=groupData.friend[i];\n              }\n              else{\n              obj.push(groupData.friend[i]);\n              }\n            }\n            var groupVersion =groupData.groupVersion;\n            groupVersion++;\n            groupData.groupVersion=groupVersion;\n            console.log(obj);\n            console.log(friendRemoveData);\n            groupData.friend=obj;\n            console.log( groupData);\n            \n            obj=[]\n            for(var i=0;i<groupData.groupDetails.length;i++){\n              if(groupData.groupDetails[i].emailId==dataParse.emailId){\n\n              }\n              else{\n                var publicKey =this.state.userPublicKeyMap.get(groupData.groupDetails[i].emailId);\n                // var ciphertext = CryptoJS.AES.encrypt(this.state.groupKey, this.state.userBlockchainResultOfParticularUser.userPublicKey).toString();\n                var encryptedGroupKey = CryptoJS.AES.encrypt(groupData.commonGroupKey,publicKey).toString();\n              \n                var userObject={\n                  name:groupData.groupDetails[i].name,\n                  emailId:groupData.groupDetails[i].emailId,\n                  encryptedGroupkey: encryptedGroupKey,\n                  userHash:groupData.groupDetails[i].userHash\n                }\n                obj.push(userObject)\n              }\n            }\n            console.log(obj);\n            groupData.groupDetails=obj;\n            console.log(groupData);\n\n            var originalContentString = Buffer.from(JSON.stringify(groupData));\n            // The json is change to string format \n            const userContent3= {\n              content:originalContentString\n          }\n         \n            ipfs.add(userContent3,(error,results)=>{\n   \n              console.log(results);\n              var userInformationHash= results[0].hash;\n              console.log(results[0].hash);  \n              console.log(dataParse.userId);\n              console.log(\"&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&\")\n             \n              this.state.userBlockchainResultOfParticularUser.userHash=results[0].hash;\n                 this.state.contract.methods.createGroup(this.state.userEmailId,userInformationHash,groupVersion).send({from: this.state.account}).then((r)=>{\n                    console.log(r);\n                });\n\n            });\n\n\n\n          });\n\n\n         }\n         signOut=()=>{\n          this.props.history.push({\n            pathname: '/login',\n             // your data array of objects\n          })\n         }\n         mainPage=()=>{\n          console.log(this.state.userJsonResultOfParticularUserFromIPFS);\n          console.log(this.state.requestedFriendName);\n        \n          this.props.history.push({\n           pathname: '/MainPage',\n           userEmailId:this.state.userEmailId,\n           fullName:this.state.fullName,\n           userJsonResultOfParticularUserFromIPFS:this.state.userJsonResultOfParticularUserFromIPFS,\n           totalUser:this.state.totalUser,\n           userBlockchainResultOfParticularUser:this.state.userBlockchainResultOfParticularUser\n             // your data array of objects\n         })\n        }\n\n\n      render(){\n\n        var cardStyle2={\n        \n            padding:\"10px 10px 10px 10px\",\n            display:\"flex\",\n            flexDirection:\"column\",\n            alignItems:\"center\",\n            textAlign:\"center\"\n           // width:\"1000px \n        }\n        var cardStyle={\n        \n            padding:\"10px 10px 10px 10px\",\n            display:\"flex\",\n            flexDirection:\"column\",\n            alignItems:\"center\",\n           // width:\"1000px \n        }\n        var addPost= {\n            float: \"right\",\n            background: \"#365899\",\n            border: \"none\",\n            color: \"#fff\",\n            fontWeight: \"bold\",\n            //padding: \"10px 15px\",\n            //borderRadius: \"6px\"\n          }\n          var username= {\n            margin:\"15px 0\",\n            padding:\"15px 10px\",\n            width:\"100%\",\n            outline:\"none\",\n            border:\"1px solid #bbb\",\n            borderRadius:\"20px\",\n            display:\"inline-block\",\n            fontSize:\"20px\"\n            \n          }\n        var card={\n          boxShadow:\"0px 0px 0.5px rgba(10,10,10,.3)\",\n          alignItems:\"center\",\n          position:\"relative\",\n          userSelect:\"none\",\n          overflow:\"hidden\",\n          transition:\"all .5s ease\",\n          padding:\"10px\",\n          width:\"850px\",\n          height:\"100%\",\n          maxWidth:\"100%\",\n          backgroundColor:\"white\",\n          marginBottom:\"10px\",\n          fontSize:\"14px\",\n          borderRadius:\"3px\",\n          borderStyle: \"solid\",\n          borderColor: \"#365899\"\n        }\n        var card2={\n            boxShadow:\"0px 0px 0.5px rgba(10,10,10,.3)\",\n            alignItems:\"center\",\n            position:\"relative\",\n            userSelect:\"none\",\n            overflow:\"hidden\",\n            transition:\"all .5s ease\",\n            padding:\"10px\",\n            width:\"950px\",\n            height:\"280px\",\n            maxWidth:\"100%\",\n            backgroundColor:\"white\",\n            marginBottom:\"10px\",\n            fontSize:\"14px\",\n            borderRadius:\"3px\",\n          }\n          var info={\n            display:\"flex\",\n            alignItems:\"center\",\n            height:\"40px\"\n          }\n          var photo={\n            height:\"40px\",\n            width:\"40px\",\n            backgroundColor:\"gray\",\n            opacity:\".8\",\n            borderRadius:\"100%\"\n          }\n        \n          var name={\n            \n              fontWeight:\"bold\",\n              color:\"rgb(66, 103, 178)\",\n              opacity:\".9\",\n              paddingLeft:\"20px\",\n          }\n\n\n          const mystyle = {\n            textAlign: \"center\",\n            font: \"inherit\",\n            border: \"2px solid #365899\",\n            padding: \"13px 12px\",\n            fontSize: \"15px\",\n            boxShadow: \"0 1px 1px #DDD\",\n            width: \" 700px\",\n            outline: \"none\",\n            display: \"block\",\n            color: \"#788585\",\n            margin: \"0 auto 20px\",\n            height:\"50px\"\n            // color: \"white\",\n            // backgroundColor: \"DodgerBlue\",\n            // padding: \"10px\",\n            // fontFamily: \"Arial\",\n            // cursor: \"pointer\"\n           \n          };\n          const ReactHeading= {\n          // {textAlign: \"center\",\n          //  padding: \"50px\",\n          // textTransform: \"uppercase\",\n           //color: \"DodgerBlue\",\n           color:\"#365899\",\n          fontSize: \"25px\",\n          textTransform: \"uppercase\",\n          fontWeight: \"300\",\n          textAlign: \"center\",\n          marginBottom: \"15px\",\n          paddingBottom:\"20px\",\n          fontFamily:\"RalewayBold,Arial,sans-serif\"\n        }\n        const cardBorder={\n          padding: \"10px\",\n          margin:\"10px\",\n          border: \"2px solid #365899\",\n          \n          }\n           \n\n        var userNameList= this.state.friendName.filter(\n          (people)=>{\n            return people.name.indexOf(this.state.search)!==-1\n          }\n        );\n        let list2 = userNameList.map(people => \n          <Card style={cardBorder}>\n    <Card.Body>\n    <div className=\"container\">\n              <div className=\"box media\">\n            <figure className=\"image is-96x96 media-left\">\n              <img src={people.profilePicHash} style={{height: \"100%\",  width:\"150px\" }} alt={\"Rutvik\"} />\n            </figure>\n            <div className=\"media-content\">\n              {/* <p className=\"subtitle\"><b><h4>{people.name}</h4></b></p> */}\n              <Card.Title>{people.name}</Card.Title>\n              <br></br>\n              <Card.Link style={{padding:\"10px\"}} onClick={() => this.removeFriend(people)}><Button variant=\"danger\" size=\"sm\" > unfriend</Button></Card.Link>\n              {/* <Card.Link  ><Button variant=\"secondary\" size=\"sm\" >View Profile</Button></Card.Link> */}\n            </div>\n          </div>\n          </div>\n      </Card.Body>\n  </Card>\n  //\n         );\n\n        return(\n            <div>\n                 <link href=\"https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\" rel=\"stylesheet\" integrity=\"sha384-wvfXpqpZZVQGK6TAh5PVlGOfQNHSoD2xbE+QkPxCAFlNEevoEH3Sl0sibVcOQVnN\" crossorigin=\"anonymous\"></link>\n                <Navbar bg=\"light\" expand=\"lg\">\n                    <Navbar.Brand href=\"#home\"><img  src={\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcQtRwMIKUhJfgz64gGRnrGmgHWdPsnP4zv_HlocpHesF_3BM8Aw&usqp=CAU\"}  style={{height: \"100%\",  width:\"70px\" }} alt=\"\" className=\"img-responsive\" /></Navbar.Brand>\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\n                        <Nav className=\"mr-auto\">\n                        <Nav.Link ><Button variant=\"primary\" style={{background:\"#365899\"}} onClick={this.mainPage}> <span className=\"fa fa-backward\"></span> Main Page</Button></Nav.Link>\n                        {/* <Nav.Link ><Button variant=\"outline-secondary\" onClick={this.searchFriends}><span className=\" fa fa-search\"></span>  Search Friend</Button></Nav.Link> */}\n                        </Nav>\n                    <Button variant=\"primary\"  style={{marginRight: \"10px\",background:\"#365899\" }}><span className=\"fa fa-id-badge\"  ></span> {this.state.fullName}</Button>\n                    <Button Button variant=\"light\" onClick={this.signOut} ><span class=\"fa fa-sign-out\"></span> Log Out</Button>\n                </Navbar.Collapse>\n                </Navbar>\n                <div style={cardStyle2}>\n                          <div style={card2} expand=\"false\">\n                            <div style={info}> \n                              <div style={{textAlign:\"center\", marginTop:\"240px\", marginLeft:\"300px\"}} >\n                               <img src={this.state.userJsonResultOfParticularUserFromIPFS.profilePicHash}  style={{height: \"100%\",  width:\"300px\" }}></img>\n                             </div>\n                            </div>\n                          </div>\n                    </div>\n                    <div className=\"text-center\">\n                        <h2>{this.state.fullName}</h2>\n                    </div>\n                    <div className=\"container text-center \">\n            {/* <h2 style={ReactHeading}>Search Friends</h2> */}\n            <hr></hr>\n             <input type =\"text\" style={mystyle} placeholder=\"Search Friend By Name\" value={this.state.search} onChange={this.updateSearch}  />\n            <br></br>\n             <hr></hr>         \n           {/* {peopleList2.map((people)=>{\n                     return  <h3>{people.value}</h3>\n              })} */}\n\n              {/* {userNameList.map((people)=>{\n                  return  <h3>{people.name}</h3>\n              })} */}\n              { list2 }\n          {/* {list2} */}\n\n                </div>\n\n\n                    {/* <div className=\"row\">\n                           <div className=\"col-2\">\n                               Hello World\n                            </div>\n                            <div className=\"col-8\">In second div\n                             <div style={cardStyle}>\n                                 <div style={card} expand=\"false\">\n                                    <div style={info}>\n                                    <img style={photo} src='https://www.gstatic.com/tv/thumb/persons/509114/509114_v9_ba.jpg' ></img>\n                                        <div style={name}><h4> Rutvik Patel</h4></div>\n                                    </div>\n                                    <br></br>\n                                   \n                                    <p style={{fontSize:\"19px\",paddingLeft:\"7px\" }}>Hello In measge of the post</p>\n                                    <hr></hr>\n                                        <br></br>\n                                    <img src='https://ipfs.infura.io/ipfs/Qmd16beEoC2jhSk8nE5otsk3D1iUxu1pJg6n4ePwXwhwA9?fbclid=IwAR27zV3u3oXAC4_iLfi11MKHKS2Q4kX4Y4t0KhWRe2P11wwW2i4wbo2OyVA'  style={{height: \"100%\",  width:\"300px\",marginLeft:\"200px\" }}></img>\n                                    <hr></hr>\n                                    \n                                 </div>\n                            </div> \n                            </div>\n                            <div  className=\"col-2\">\n                                In third div\n                            </div>\n                    </div>         */}\n                    {/* <hr></hr>\n                    <div style={{textAlign:\"center\"}}>\n                    <Button className=\"LogIn2\" onClick={this.uploadProfilePic}>\n                           Upload\n                    </Button>\n                    </div> */}\n\n            </div>\n        );\n    }\n}\n\nexport default timeline;"]},"metadata":{},"sourceType":"module"}