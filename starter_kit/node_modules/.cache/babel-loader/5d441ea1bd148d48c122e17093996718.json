{"ast":null,"code":"var _defineProperty = require(\"/Users/rutvikpatel/Desktop/Project/Github6/starter_kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/defineProperty\");\n\nvar _regeneratorRuntime = require(\"/Users/rutvikpatel/Desktop/Project/Github6/starter_kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/Users/rutvikpatel/Desktop/Project/Github6/starter_kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar getIterator = require('get-iterator');\n\nvar toIterable = require('pull-stream-to-async-iterator');\n\nfunction toPull(source) {\n  source = getIterator(source);\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(end, cb) {\n        var next;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!end) {\n                  _context.next = 11;\n                  break;\n                }\n\n                if (!source.return) {\n                  _context.next = 10;\n                  break;\n                }\n\n                _context.prev = 2;\n                _context.next = 5;\n                return source.return();\n\n              case 5:\n                _context.next = 10;\n                break;\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](2);\n                return _context.abrupt(\"return\", cb(_context.t0));\n\n              case 10:\n                return _context.abrupt(\"return\", cb(end));\n\n              case 11:\n                _context.prev = 11;\n                _context.next = 14;\n                return source.next();\n\n              case 14:\n                next = _context.sent;\n                _context.next = 20;\n                break;\n\n              case 17:\n                _context.prev = 17;\n                _context.t1 = _context[\"catch\"](11);\n                return _context.abrupt(\"return\", cb(_context.t1));\n\n              case 20:\n                if (!next.done) {\n                  _context.next = 22;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", cb(true));\n\n              case 22:\n                // eslint-disable-line\n                cb(null, next.value);\n\n              case 23:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[2, 7], [11, 17]]);\n      }));\n\n      return function (_x, _x2) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n}\n\ntoPull.source = toPull;\n\ntoPull.transform = toPull.through = function (source) {\n  return function (read) {\n    return toPull(source(toIterable(read)));\n  };\n};\n\ntoPull.duplex = function (duplex) {\n  return {\n    sink: toPull.sink(duplex.sink),\n    source: toPull(duplex.source)\n  };\n};\n\ntoPull.sink = function (sink) {\n  return function (read) {\n    var _sink;\n\n    sink((_sink = {}, _defineProperty(_sink, Symbol.asyncIterator, function () {\n      return this;\n    }), _defineProperty(_sink, \"next\", function next() {\n      return new Promise(function (resolve, reject) {\n        read(null, function (end, value) {\n          if (end === true) return resolve({\n            done: true,\n            value: value\n          });\n          if (end) return reject(end);\n          resolve({\n            done: false,\n            value: value\n          });\n        });\n      });\n    }), _defineProperty(_sink, \"return\", function _return() {\n      return new Promise(function (resolve, reject) {\n        read(true, function (end, value) {\n          if (end && end !== true) return reject(end);\n          resolve({\n            done: true,\n            value: value\n          });\n        });\n      });\n    }), _defineProperty(_sink, \"throw\", function _throw(err) {\n      return new Promise(function (resolve, reject) {\n        read(err, function (end, value) {\n          if (end && end !== true) return reject(end);\n          resolve({\n            done: true,\n            value: value\n          });\n        });\n      });\n    }), _sink));\n  };\n};\n\nmodule.exports = toPull;","map":null,"metadata":{},"sourceType":"script"}