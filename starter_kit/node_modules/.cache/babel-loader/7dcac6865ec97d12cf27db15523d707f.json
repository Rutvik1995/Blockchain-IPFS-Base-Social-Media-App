{"ast":null,"code":"import _toConsumableArray from \"/Users/rutvikpatel/Desktop/Project/Github6/starter_kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"/Users/rutvikpatel/Desktop/Project/Github6/starter_kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/rutvikpatel/Desktop/Project/Github6/starter_kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/Users/rutvikpatel/Desktop/Project/Github6/starter_kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/rutvikpatel/Desktop/Project/Github6/starter_kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rutvikpatel/Desktop/Project/Github6/starter_kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/rutvikpatel/Desktop/Project/Github6/starter_kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rutvikpatel/Desktop/Project/Github6/starter_kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/rutvikpatel/Desktop/Project/Github6/starter_kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/rutvikpatel/Desktop/Project/Github6/starter_kit/src/components/MainPage.js\";\nimport React, { Component } from 'react';\nimport Web3 from 'web3';\nimport Meme from '../abis/Meme.json';\nimport { Button, Navbar, Nav, ListGroup, Modal, Card } from \"react-bootstrap\";\nimport { MDBInput } from 'mdbreact';\nimport './file.css';\nimport './file2.css';\nimport ReactDOM from 'react-dom';\nimport Files from 'react-files';\n\nvar CryptoJS = require(\"crypto-js\");\n\nvar ipfsClient = require('ipfs-http-client');\n\nvar ipfs = ipfsClient({\n  host: 'ipfs.infura.io',\n  port: '5001',\n  protocol: 'https'\n});\n;\n\nvar MainPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MainPage, _Component);\n\n  function MainPage(props) {\n    var _this$state;\n\n    var _this;\n\n    _classCallCheck(this, MainPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MainPage).call(this, props));\n\n    _this.loadData = function () {\n      console.log(\"in load data\");\n\n      _this.setState({\n        fullName: _this.props.location.fullName\n      });\n\n      _this.setState({\n        userEmailId: _this.props.location.userEmailId\n      });\n\n      _this.setState({\n        userJsonResultOfParticularUserFromIPFS: _this.props.location.userJsonResultOfParticularUserFromIPFS\n      });\n\n      _this.setState({\n        userInformationListFromBlockChain: _this.props.location.userInformationListFromBlockChain\n      });\n\n      _this.setState({\n        totalUser: _this.props.location.totalUser\n      });\n\n      _this.setState({\n        userBlockchainResultOfParticularUser: _this.props.location.userBlockchainResultOfParticularUser\n      });\n    };\n\n    _this.check = function () {\n      console.log(_this.state.fullName);\n      console.log(_this.state.userEmailId);\n      console.log(_this.state.userJsonResultOfParticularUserFromIPFS);\n      console.log(_this.state.totalUser);\n      console.log(_this.state.userBlockchainResultOfParticularUser); // //console.log(this.state.totalUserName);\n\n      console.log(_this.state.hasError);\n      console.log(_this.state.totalUser);\n    };\n\n    _this.checkValue = function () {\n      // console.log(this.props.location.TotalUser);\n      // console.log(this.props.location.fullName);\n      //console.log()\n      console.log(_this.state.fullName);\n      console.log(_this.state.userEmailId);\n      console.log(_this.state.userJsonResultOfParticularUserFromIPFS);\n      console.log(_this.state.totalUser);\n      console.log(_this.state.userBlockchainResultOfParticularUser);\n      console.log(\"Orginal Value\");\n      console.log(_this.props.location.userBlockchainResultOfParticularUser);\n    };\n\n    _this.addFriend = function () {\n      console.log(\"In create Account\");\n\n      _this.props.history.push({\n        pathname: '/AddFriend',\n        data: _this.state.currentEmailId,\n        name: _this.props.location.name // your data array of objects\n\n      });\n    };\n\n    _this.addPost = function () {\n      _this.props.history.push({\n        pathname: '/addPost',\n        data: _this.state.currentEmailId,\n        name: _this.props.location.name // your data array of objects\n\n      });\n    };\n\n    _this.checkFriendRequest = function () {\n      console.log(\"In check friend request\");\n      console.log(_this.state.userEmailId);\n      console.log(_this.state.fullName);\n      console.log(_this.state.userJsonResultOfParticularUserFromIPFS);\n      console.log(_this.state.totalUser);\n      console.log(_this.state.userBlockchainResultOfParticularUser);\n\n      _this.props.history.push({\n        pathname: '/checkRequest2',\n        userEmailId: _this.state.userEmailId,\n        fullName: _this.state.fullName,\n        userJsonResultOfParticularUserFromIPFS: _this.state.userJsonResultOfParticularUserFromIPFS,\n        totalUser: _this.state.totalUser,\n        userBlockchainResultOfParticularUser: _this.state.userBlockchainResultOfParticularUser\n      });\n    };\n\n    _this.openTimeline = function () {\n      console.log(\"In check friend request\");\n      var t = \"adv\";\n\n      _this.props.history.push({\n        pathname: '/Timeline',\n        data: _this.state.currentEmailId,\n        name: _this.props.location.name // your data array of objects\n\n      });\n    };\n\n    _this.postRead = function () {\n      var url = \"QmYah59VfHQTNPnhk1f5hwnVqkxRC6CB9xvMjzLro9VBsw\";\n\n      _this.props.history.push({\n        pathname: '/postReader/' + url // data: this.state.currentEmailId,\n        //name: this.props.location.name   // your data array of objects\n\n      });\n    };\n\n    _this.feed = function () {\n      _this.props.history.push({\n        pathname: '/Feed',\n        data: _this.state.currentEmailId,\n        name: _this.props.location.name // your data array of objects\n\n      });\n    };\n\n    _this.searchFriends = function () {\n      console.log(\"in people\");\n\n      _this.props.history.push({\n        pathname: '/searchFriends2',\n        userEmailId: _this.state.userEmailId,\n        fullName: _this.state.fullName,\n        userJsonResultOfParticularUserFromIPFS: _this.state.userJsonResultOfParticularUserFromIPFS,\n        totalUser: _this.state.totalUser,\n        userBlockchainResultOfParticularUser: _this.state.userBlockchainResultOfParticularUser\n      });\n    };\n\n    _this.friend = function () {\n      _this.props.history.push({\n        pathname: '/friend',\n        data: _this.state.currentEmailId,\n        name: _this.props.location.name // your data array of objects\n\n      });\n    };\n\n    _this.signOut = function () {\n      _this.props.history.push({\n        pathname: '/login' // your data array of objects\n\n      });\n    };\n\n    _this.addProfilePic = function () {\n      // this.props.history.push({\n      //   pathname: '/addProfilePic',\n      //   userEmailId: this.state.userEmailId,\n      //   fullName:  this.state. fullName,\n      //   userJsonResultOfParticularUserFromIPFS:this.state.userJsonResultOfParticularUserFromIPFS,\n      //   totalUser:this.state.totalUser,\n      //   userBlockchainResultOfParticularUser:this.state.userBlockchainResultOfParticularUser\n      // })\n      _this.setState({\n        profilePicModal: true\n      });\n    };\n\n    _this.openPostModel = function () {\n      console.log(\"inside open\");\n\n      _this.setState({\n        showModal: true\n      });\n    };\n\n    _this.closePostModel = function () {\n      console.log(\"inside close\");\n\n      _this.setState({\n        showModal: false\n      });\n    };\n\n    _this.closeProfilPicModel = function () {\n      console.log(\"inside close\");\n\n      _this.setState({\n        profilePicModal: false\n      });\n    };\n\n    _this.getPostLink = function () {\n      _this.setState({\n        showModal: true\n      });\n    };\n\n    _this.captureProfilePicFile = function (event) {\n      console.log(ipfs);\n      event.preventDefault();\n      console.log(\"file is capture\");\n      console.log(event);\n      console.log(event.target.files[0]);\n      var file = event.target.files[0];\n      var reader = new window.FileReader();\n      reader.readAsArrayBuffer(file);\n\n      reader.onloadend = function () {\n        console.log(reader.result);\n\n        _this.setState({\n          profilePicBuffer: Buffer(reader.result)\n        });\n\n        console.log(\"buffer\", Buffer(reader.result));\n      }; //process the file inside here \n\n    };\n\n    _this.capturePostFile = function (event) {\n      console.log(ipfs);\n      event.preventDefault();\n      console.log(\"file is capture\");\n      console.log(event);\n      console.log(event.target.files[0]);\n      var file = event.target.files[0];\n      var reader = new window.FileReader();\n      reader.readAsArrayBuffer(file);\n\n      reader.onloadend = function () {\n        console.log(reader.result);\n\n        _this.setState({\n          postPicBuffer: Buffer(reader.result)\n        });\n\n        console.log(\"buffer\", Buffer(reader.result));\n      };\n    };\n\n    _this.uploadProfilePic = function () {\n      console.log(\"uploadProfilePic\"); // event.preventDefault();\n\n      console.log(\"in submit event\");\n      var file = {\n        content: _this.state.profilePicBuffer //content:this.\n\n      };\n      var t;\n      ipfs.add(file, function (error, results) {\n        //Do Stuff here\n        console.log(\"IPFS RESULT\", results[0].hash);\n        var hash = results[0].hash;\n        t = results[0].hash;\n        var url = \"https://ipfs.infura.io/ipfs/\";\n        var url2 = t;\n        var third = url + url2;\n        console.log(third);\n        _this.state.userJsonResultOfParticularUserFromIPFS.profilePicHash = third;\n        console.log(_this.state.userJsonResultOfParticularUserFromIPFS.profilePicHash);\n\n        _this.setState({\n          urlhash: t\n        });\n\n        if (error) {\n          console.log(error);\n          return;\n        }\n\n        var content;\n        ipfs.get(\"/ipfs/\" + t, function (error, result) {\n          console.log(result[0].path);\n          content = result[0].content;\n        }); //Step 2 is to store file on blockchain\n\n        _this.filesrc = \"http://localhost:8080/ipfs/\" + hash;\n        console.log(\"https://ipfs.infura.io/ipfs/\" + hash);\n        console.log(_this.filesrc);\n\n        _this.setState({\n          profilePicHash: hash\n        });\n\n        var userId = _this.state.userBlockchainResultOfParticularUser.userId;\n        var myObj = _this.state.userJsonResultOfParticularUserFromIPFS;\n        console.log(myObj);\n        var originalContentString = Buffer.from(JSON.stringify(myObj)); // The json is change to string format \n\n        var userContent = {\n          content: originalContentString\n        };\n        ipfs.add(userContent, function (error, results) {\n          console.log(results);\n          var userInformationHash = results[0].hash; // this.setState({userJsonResultOfParticularUserFromIPFS:userInformationHash});\n          //console.log(this.state.userJsonResultOfParticularUserFromIPFS);\n\n          console.log(results[0].hash);\n\n          _this.setState({\n            IPFSuserInformationHash: results[0].hash\n          });\n\n          _this.state.userBlockchainResultOfParticularUser.userHash = results[0].hash;\n          console.log(userId);\n\n          _this.state.contract.methods.changeUserInformation(userId, userInformationHash).send({\n            from: _this.state.account\n          }).then(function (r) {\n            console.log(r);\n          });\n\n          _this.state.userBlockchainResultOfParticularUser.userHash = userInformationHash;\n          console.log(_this.state.userBlockchainResultOfParticularUser.userHash);\n        });\n      });\n    };\n\n    _this.makeid = function (length) {\n      var result = '';\n      var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\n      var charactersLength = characters.length;\n\n      for (var i = 0; i < length; i++) {\n        result += characters.charAt(Math.floor(Math.random() * charactersLength));\n      }\n\n      return result;\n    };\n\n    _this.makeUUID = function (length) {\n      var result = '';\n      var characters = 'abcdefghijklmnopqrstuvwxyz';\n      var charactersLength = characters.length;\n\n      for (var i = 0; i < length; i++) {\n        result += characters.charAt(Math.floor(Math.random() * charactersLength));\n      }\n\n      return result;\n    };\n\n    _this.getFriendsInform = function () {\n      console.log(_this.state.groupInformationPassParameter);\n\n      _this.props.history.push({\n        pathname: '/timeline',\n        userEmailId: _this.state.userEmailId,\n        fullName: _this.state.fullName,\n        userJsonResultOfParticularUserFromIPFS: _this.state.userJsonResultOfParticularUserFromIPFS,\n        totalUser: _this.state.totalUser,\n        userBlockchainResultOfParticularUser: _this.state.userBlockchainResultOfParticularUser\n      });\n    };\n\n    _this.getFriends = function () {\n      console.log(_this.state.userJsonResultOfParticularUserFromIPFS);\n      var arrayData = _this.state.userJsonResultOfParticularUserFromIPFS.friend;\n\n      for (var i = 0; i < arrayData.length; i++) {\n        console.log(arrayData[i]);\n      }\n\n      console.log(_this.state.groupInformationListFromBlockChain);\n      var myMap = new Map();\n      var max = -1;\n\n      for (var i = 0; i < _this.state.groupInformationListFromBlockChain.length; i++) {\n        var value = _this.state.groupInformationListFromBlockChain[i].groupVersion;\n        value = value.toString();\n        myMap.set(value, _this.state.groupInformationListFromBlockChain[i]);\n        console.log(value);\n\n        if (value > max) {\n          max = value;\n        }\n      }\n\n      console.log(\"lastest group version is\");\n      console.log(max);\n      console.log(myMap.get(max));\n      var lastestGroupDetailHash = myMap.get(max);\n      var t = lastestGroupDetailHash.groupHash;\n      var content;\n      ipfs.get(\"/ipfs/\" + t, function (error, result) {\n        console.log(result[0].path);\n        content = result[0].content;\n        console.log(content);\n        var groupData = JSON.parse(content);\n        console.log(groupData);\n\n        _this.setState({\n          groupInformationPassParameter: groupData\n        });\n\n        console.log(_this.state.groupInformationPassParameter);\n      });\n    };\n\n    _this.about = function () {\n      console.log(\"outside the loop\");\n      console.log(_this.state.groupInformationPassParameter);\n    };\n\n    _this.actuallyPost = function () {\n      var postText = document.getElementById(\"postTextArea\").value;\n\n      var sessionKey = _this.makeid(20);\n\n      console.log(postText);\n      var postTextHash;\n      var postPicHash;\n      var postHash; //This is the the data which is enter by the user \n\n      var userInformationHash;\n      var originalContentString = Buffer.from(JSON.stringify(postText)); // The json is change to string format \n\n      var userContent = {\n        content: originalContentString\n      };\n      ipfs.add(userContent, function (error, results) {\n        console.log(results);\n        userInformationHash = results[0].hash;\n        console.log(results[0].hash);\n        postTextHash = results[0].hash;\n        console.log(postTextHash);\n        var file = {\n          content: _this.state.postPicBuffer //content:this.\n\n        };\n        var t;\n        ipfs.add(file, function (error, results) {\n          //Do Stuff here\n          console.log(\"IPFS RESULT\", results[0].hash);\n          var hash = results[0].hash;\n          t = results[0].hash;\n          var url = \"https://ipfs.infura.io/ipfs/\";\n          var url2 = t;\n          var third = url + url2;\n          postPicHash = results[0].hash;\n          console.log(\"third\");\n          console.log(third);\n\n          if (error) {\n            console.log(error);\n            return;\n          }\n\n          var content;\n          ipfs.get(\"/ipfs/\" + t, function (error, result) {\n            console.log(result[0].path);\n            content = result[0].content;\n          }); //Step 2 is to store file on blockchain\n\n          _this.filesrc = \"http://localhost:8080/ipfs/\" + hash;\n          console.log(\"https://ipfs.infura.io/ipfs/\" + hash);\n          var myObj = {\n            \"postTextHash\": postTextHash,\n            \"postPicHash\": postPicHash\n          }; //This is the the data which is enter by the user \n\n          console.log(myObj);\n          console.log(_this.state.chromeExtensionData);\n          var originalContentString = Buffer.from(JSON.stringify(myObj)); // The json is change to string format \n\n          var userContent = {\n            content: originalContentString\n          };\n          ipfs.add(userContent, function (error, results) {\n            console.log(results);\n            postHash = results[0].hash;\n            console.log(postHash);\n            var localPostHash = results[0].hash;\n            console.log(_this.state.fullName);\n            console.log(_this.state.userBlockchainResultOfParticularUser);\n            console.log(_this.state.userJsonResultOfParticularUserFromIPFS);\n            console.log(sessionKey);\n            console.log(\"this is encrypted posh hahs\");\n            var encryptedPostHash = CryptoJS.AES.encrypt(postHash, sessionKey).toString();\n            var bytes = CryptoJS.AES.decrypt(encryptedPostHash, sessionKey);\n            var originalText = bytes.toString(CryptoJS.enc.Utf8);\n            console.log(originalText); // 'my message'\n\n            var arrayData = _this.state.groupInformationPassParameter.groupDetails;\n            console.log(arrayData);\n            console.log(arrayData == undefined);\n            var userObj = {\n              postOwner: _this.state.fullName,\n              postHash: results[0].hash,\n              sessionKey: sessionKey,\n              encryptedPostHash: encryptedPostHash,\n              groupVersion: _this.state.groupInformationPassParameter.groupVersion,\n              sessionKeyDetails: []\n            };\n            console.log(\"Checking the data\");\n            console.log(userObj);\n            console.log(\"------\");\n\n            if (arrayData == undefined) {\n              userObj.groupVersion = 0;\n            } else {\n              for (var i = 0; i < arrayData.length; i++) {\n                console.log(arrayData[i]);\n                var encryptedUserSession = CryptoJS.AES.encrypt(sessionKey, arrayData[i].encryptedGroupkey).toString();\n                var usr = {\n                  emailId: arrayData[i].emailId,\n                  encryptedUserSession: encryptedUserSession,\n                  userHash: arrayData[i].userHash\n                };\n                console.log(usr);\n                userObj.sessionKeyDetails.push(usr);\n              }\n            }\n\n            console.log(\"Json data\");\n            console.log(userObj);\n\n            var uuid = _this.makeUUID(40);\n\n            window.open(\"http://localhost:8888/Facebook-sdk/facebooksdk/?url?=http://localhost:3000/MainPage/\" + uuid, \"_blank\"); // uuid=1;\n            // var date =  new Date();\n            // var stringData=date.toString();\n            //////\n            // this.state.contract.methods.createPost(this.state.userEmailId,userInformationHash).send({from: this.state.account}).then((r)=>{\n            //   console.log(r);\n\n            var originalContentString = Buffer.from(JSON.stringify(userObj)); // The json is change to string format \n\n            var userContent = {\n              content: originalContentString\n            };\n            ipfs.add(userContent, function (error, results) {\n              var postHashAddress = results[0].hash;\n              console.log(postHashAddress); //string memory _postedByEmailId,string memory _postHash, uint _uniquePostId ,string memory _currentDateAndTime\n\n              _this.state.contract.methods.createPost(_this.state.userEmailId, postHashAddress, uuid).send({\n                from: _this.state.account\n              }).then(function (r) {\n                console.log(r);\n              });\n            }); ///////\n          }); // var userObj={\n          //   postOwner:this.state.fullName,\n          //   postHash:postHash,\n          //   sessionKey:sessionKey,\n          // }\n        });\n      });\n    };\n\n    console.log(props);\n    _this.state = (_this$state = {\n      account: '',\n      buffer: null,\n      contract: null,\n      userEmailId: '',\n      fullName: '',\n      userJsonResultOfParticularUserFromIPFS: null,\n      userBlockchainResultOfParticularUser: null,\n      totalUser: null,\n      isVisible: false,\n      showModal: false,\n      profilePicModal: false\n    }, _defineProperty(_this$state, \"buffer\", null), _defineProperty(_this$state, \"profilePicBuffer\", ''), _defineProperty(_this$state, \"postPicBuffer\", ''), _defineProperty(_this$state, \"groupInformationListFromBlockChain\", []), _defineProperty(_this$state, \"groupInformationPassParameter\", ''), _this$state);\n    return _this;\n  }\n\n  _createClass(MainPage, [{\n    key: \"componentWillMount\",\n    value: function () {\n      var _componentWillMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.loadData();\n\n              case 2:\n                _context.next = 4;\n                return this.check();\n\n              case 4:\n                _context.next = 6;\n                return this.loadWeb3();\n\n              case 6:\n                _context.next = 8;\n                return this.loadBlockChainData();\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentWillMount() {\n        return _componentWillMount.apply(this, arguments);\n      }\n\n      return componentWillMount;\n    }()\n  }, {\n    key: \"updateModal\",\n    value: function updateModal(isVisible) {\n      this.state.isVisible = isVisible;\n      this.forceUpdate();\n    }\n  }, {\n    key: \"loadWeb3\",\n    value: function () {\n      var _loadWeb = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!window.ethereum) {\n                  _context2.next = 4;\n                  break;\n                }\n\n                window.web3 = new Web3(window.ethereum);\n                _context2.next = 4;\n                return window.ethereum.enable();\n\n              case 4:\n                if (window.web3) {\n                  window.web3 = new Web3(window.web3.currentProvider);\n                } else {\n                  window.alert(\"Use Metamask\");\n                }\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function loadWeb3() {\n        return _loadWeb.apply(this, arguments);\n      }\n\n      return loadWeb3;\n    }()\n  }, {\n    key: \"loadBlockChainData\",\n    value: function () {\n      var _loadBlockChainData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        var _this2 = this;\n\n        var web3_2, accounts, networkId, networkdata, abi, address, contract, tt, groupCount, i, groupInformationListFromBlockChain, arrayData, myMap, max, value, lastestGroupDetailHash, t, content;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                web3_2 = window.web3;\n                _context3.next = 3;\n                return web3_2.eth.getAccounts();\n\n              case 3:\n                accounts = _context3.sent;\n                this.setState({\n                  account: accounts[0]\n                });\n                _context3.next = 7;\n                return web3_2.eth.net.getId();\n\n              case 7:\n                networkId = _context3.sent;\n                networkdata = Meme.networks[networkId];\n\n                if (!networkdata) {\n                  _context3.next = 50;\n                  break;\n                }\n\n                abi = Meme.abi;\n                address = networkdata.address; //fetch the contract \n\n                contract = web3_2.eth.Contract(abi, address);\n                console.log(contract);\n                this.setState({\n                  contract: contract\n                });\n                console.log(contract.methods); //  const MemeHash =await contract.methods.get().call();\n\n                _context3.next = 18;\n                return this.state.contract.methods.groupCount().call();\n\n              case 18:\n                tt = _context3.sent;\n                _context3.next = 21;\n                return tt;\n\n              case 21:\n                groupCount = _context3.sent;\n                groupCount = groupCount.toString();\n                console.log(\"group Count\");\n                console.log(groupCount);\n                i = 1;\n\n              case 26:\n                if (!(i <= groupCount)) {\n                  _context3.next = 35;\n                  break;\n                }\n\n                _context3.next = 29;\n                return this.state.contract.methods.groupInformation(i).call();\n\n              case 29:\n                groupInformationListFromBlockChain = _context3.sent;\n                console.log(groupInformationListFromBlockChain);\n\n                if (groupInformationListFromBlockChain.groupEmailId == this.state.userEmailId) {\n                  this.setState({\n                    groupInformationListFromBlockChain: [].concat(_toConsumableArray(this.state.groupInformationListFromBlockChain), [groupInformationListFromBlockChain])\n                  });\n                }\n\n              case 32:\n                i++;\n                _context3.next = 26;\n                break;\n\n              case 35:\n                ////\n                console.log(this.state.userJsonResultOfParticularUserFromIPFS);\n                arrayData = this.state.userJsonResultOfParticularUserFromIPFS.friend;\n\n                for (i = 0; i < arrayData.length; i++) {\n                  console.log(arrayData[i]);\n                }\n\n                console.log(this.state.groupInformationListFromBlockChain);\n                myMap = new Map();\n                max = -1;\n\n                for (i = 0; i < this.state.groupInformationListFromBlockChain.length; i++) {\n                  value = this.state.groupInformationListFromBlockChain[i].groupVersion;\n                  value = value.toString();\n                  myMap.set(value, this.state.groupInformationListFromBlockChain[i]);\n                  console.log(value);\n\n                  if (value > max) {\n                    max = value;\n                  }\n                }\n\n                console.log(\"lastest group version is\");\n                console.log(max);\n                console.log(myMap.get(max));\n                lastestGroupDetailHash = myMap.get(max);\n                console.log(lastestGroupDetailHash);\n\n                if (max != -1) {\n                  t = lastestGroupDetailHash.groupHash;\n                  ipfs.get(\"/ipfs/\" + t, function (error, result) {\n                    console.log(result[0].path);\n                    content = result[0].content;\n                    console.log(content);\n                    var groupData = JSON.parse(content);\n                    console.log(groupData);\n\n                    _this2.setState({\n                      groupInformationPassParameter: groupData\n                    });\n\n                    console.log(_this2.state.groupInformationPassParameter);\n                  });\n                }\n\n                _context3.next = 51;\n                break;\n\n              case 50:\n                window.alert(\"Smart contract not deployed to detected the network\");\n\n              case 51:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function loadBlockChainData() {\n        return _loadBlockChainData.apply(this, arguments);\n      }\n\n      return loadBlockChainData;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var mystyle = {\n        padding: \"20px\",\n        fontFamily: \"Arial\",\n        cursor: \"pointer\",\n        borderStyle: \"solid\",\n        borderColor: \"#365899\",\n        fontSize: \"20px\",\n        textAlign: \"center\"\n      };\n\n      var mystyle2 = _defineProperty({\n        padding: \"10px\",\n        fontFamily: \"Arial\",\n        cursor: \"pointer\",\n        borderStyle: \"solid\",\n        color: \"while\",\n        backgroundColor: \"#365899\"\n      }, \"color\", \"#fff\");\n\n      var mystyle3 = {\n        paddingLeft: \"20px\"\n      };\n      var cardStyle = {\n        padding: \"10px 10px 10px 10px\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\" // width:\"1000px \n\n      };\n      var cardStyle2 = {\n        padding: \"10px 10px 10px 10px\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        textAlign: \"center\" // width:\"1000px \n\n      };\n      var card = {\n        boxShadow: \"0px 0px 0.5px rgba(10,10,10,.3)\",\n        alignItems: \"center\",\n        position: \"relative\",\n        userSelect: \"none\",\n        overflow: \"hidden\",\n        transition: \"all .5s ease\",\n        padding: \"10px\",\n        width: \"850px\",\n        height: \"280px\",\n        maxWidth: \"100%\",\n        backgroundColor: \"white\",\n        marginBottom: \"10px\",\n        fontSize: \"14px\",\n        borderRadius: \"3px\",\n        borderStyle: \"solid\",\n        borderColor: \"#365899\"\n      };\n      var card2 = {\n        boxShadow: \"0px 0px 0.5px rgba(10,10,10,.3)\",\n        alignItems: \"center\",\n        position: \"relative\",\n        userSelect: \"none\",\n        overflow: \"hidden\",\n        transition: \"all .5s ease\",\n        padding: \"10px\",\n        width: \"950px\",\n        height: \"280px\",\n        maxWidth: \"100%\",\n        backgroundColor: \"white\",\n        marginBottom: \"10px\",\n        fontSize: \"14px\",\n        borderRadius: \"3px\"\n      };\n      var info = {\n        display: \"flex\",\n        alignItems: \"center\",\n        height: \"40px\"\n      };\n      var photo = {\n        height: \"40px\",\n        width: \"40px\",\n        backgroundColor: \"gray\",\n        opacity: \".8\",\n        borderRadius: \"100%\"\n      };\n      var name = {\n        fontWeight: \"bold\",\n        color: \"rgb(66, 103, 178)\",\n        opacity: \".9\",\n        paddingLeft: \"20px\"\n      };\n      var username = {\n        margin: \"15px 0\",\n        padding: \"15px 10px\",\n        width: \"100%\",\n        outline: \"none\",\n        border: \"1px solid #bbb\",\n        borderRadius: \"20px\",\n        display: \"inline-block\",\n        fontSize: \"20px\"\n      };\n      var addPost = {\n        float: \"right\",\n        background: \"#365899\",\n        border: \"none\",\n        color: \"#fff\",\n        fontWeight: \"bold\" //padding: \"10px 15px\",\n        //borderRadius: \"6px\"\n\n      };\n      var modalPost = {\n        background: \"#365899\",\n        border: \"none\",\n        color: \"#fff\",\n        fontWeight: \"bold\" //padding: \"10px 15px\",\n        //borderRadius: \"6px\"\n\n      };\n      var modalBorder = {\n        borderStyle: \"solid\",\n        borderColor: \"#365899\"\n      };\n      var fileUpload = {\n        fontSize: \"20px\",\n        height: \"40px\",\n        color: \"blue\",\n        background: \"#365899\",\n        borderStyle: \"solid\",\n        borderColor: \"#365899\"\n      };\n      var modalStyle = {\n        overlay: {\n          backgroundColor: \"rgba(0, 0, 0,0.5)\"\n        }\n      }; // console.log(\"hello in main page\");\n      // console.log(this.props);\n      // console.log(this.props.location.data['emailId'])\n      // console.log(\"just checking\");\n      // var t = 'Rutvik';\n      //this.setState({displayEmailId:this.props.location.data['emailId']})\n      //console.log(this.state.name);\n\n      console.log(\"Name state object \" + this.state.fullName);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 804\n        },\n        __self: this\n      }, React.createElement(\"link\", {\n        href: \"https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\",\n        rel: \"stylesheet\",\n        integrity: \"sha384-wvfXpqpZZVQGK6TAh5PVlGOfQNHSoD2xbE+QkPxCAFlNEevoEH3Sl0sibVcOQVnN\",\n        crossorigin: \"anonymous\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 805\n        },\n        __self: this\n      }), React.createElement(\"nav\", {\n        className: \"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 806\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        className: \"navbar-brand col-sm-3 col-md-2 mr-0 text-center\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 807\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 811\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 812\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 813\n        },\n        __self: this\n      }))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 816\n        },\n        __self: this\n      }), React.createElement(Navbar, {\n        bg: \"light\",\n        expand: \"lg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 817\n        },\n        __self: this\n      }, React.createElement(Navbar.Brand, {\n        href: \"#home\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 818\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: this.state.userJsonResultOfParticularUserFromIPFS.profilePicHash,\n        style: {\n          height: \"100%\",\n          width: \"70px\"\n        },\n        alt: \"\",\n        className: \"img-responsive\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 818\n        },\n        __self: this\n      })), React.createElement(Navbar.Toggle, {\n        \"aria-controls\": \"basic-navbar-nav\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 819\n        },\n        __self: this\n      }), React.createElement(Navbar.Collapse, {\n        id: \"basic-navbar-nav\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 820\n        },\n        __self: this\n      }, React.createElement(Nav, {\n        className: \"mr-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 821\n        },\n        __self: this\n      }, React.createElement(Nav.Link, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 822\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"primary\",\n        style: {\n          background: \"#365899\"\n        },\n        onClick: this.checkFriendRequest,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 822\n        },\n        __self: this\n      }, \" \", React.createElement(\"span\", {\n        className: \"fa fa-id-badge\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 822\n        },\n        __self: this\n      }), \"   Check Request\")), React.createElement(Nav.Link, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 823\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"outline-secondary\",\n        onClick: this.searchFriends,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 823\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \" fa fa-search\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 823\n        },\n        __self: this\n      }), \"  Search Friend\"))), React.createElement(Button, {\n        variant: \"primary\",\n        style: {\n          marginRight: \"10px\",\n          background: \"#365899\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 825\n        },\n        __self: this\n      }, this.state.fullName), React.createElement(Button, {\n        Button: true,\n        variant: \"light\",\n        onClick: this.signOut,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 830\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        class: \"fa fa-sign-out\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 830\n        },\n        __self: this\n      }), \" Log Out\"))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 835\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 836\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 837\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: mystyle3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 838\n        },\n        __self: this\n      }, React.createElement(ListGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 839\n        },\n        __self: this\n      }, React.createElement(ListGroup.Item, {\n        style: mystyle2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 840\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 841\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 843\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        style: photo,\n        src: this.state.userJsonResultOfParticularUserFromIPFS.profilePicHash,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 844\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 846\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        style: {\n          fontSize: \"20px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 847\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 847\n        },\n        __self: this\n      }, this.state.fullName))))), React.createElement(ListGroup.Item, {\n        style: mystyle,\n        onClick: this.getFriends,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 853\n        },\n        __self: this\n      }, \"Friend List\"), React.createElement(ListGroup.Item, {\n        style: mystyle,\n        onClick: this.addProfilePic,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 854\n        },\n        __self: this\n      }, \"Add Profile Pic\"), React.createElement(ListGroup.Item, {\n        style: mystyle,\n        onClick: this.about,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 855\n        },\n        __self: this\n      }, \"About\"), React.createElement(ListGroup.Item, {\n        style: mystyle,\n        onClick: this.getFriendsInform,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 856\n        },\n        __self: this\n      }, \"Vestibulum at eros\")))), React.createElement(\"div\", {\n        className: \"col-7\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 860\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: cardStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 861\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: card,\n        expand: \"false\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 862\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: info,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 863\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        style: photo,\n        src: this.state.userJsonResultOfParticularUserFromIPFS.profilePicHash,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 864\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        style: name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 865\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 865\n        },\n        __self: this\n      }, this.state.fullName))), React.createElement(\"input\", {\n        type: \"text\",\n        style: username,\n        name: \"username\",\n        placeholder: \"what's on your mind,\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 867\n        },\n        __self: this\n      }), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 868\n        },\n        __self: this\n      }), React.createElement(Button, {\n        style: addPost,\n        onClick: this.openPostModel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 869\n        },\n        __self: this\n      }, \"Add Post\")))))), React.createElement(Modal, {\n        show: this.state.profilePicModal,\n        onHide: this.closeProfilPicModel,\n        size: \"lg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 880\n        },\n        __self: this\n      }, React.createElement(Modal.Header, {\n        closeButton: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 881\n        },\n        __self: this\n      }, React.createElement(Modal.Title, {\n        style: {\n          color: \"#205663\",\n          paddingLeft: \"310px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 882\n        },\n        __self: this\n      }, \"Add Profile Picture\")), React.createElement(Modal.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 884\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: cardStyle2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 885\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: card2,\n        expand: \"false\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 886\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: info,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 887\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        style: photo,\n        src: this.state.userJsonResultOfParticularUserFromIPFS.profilePicHash,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 888\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        style: name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 889\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 889\n        },\n        __self: this\n      }, this.state.fullName)), React.createElement(\"div\", {\n        style: {\n          textAlign: \"center\",\n          marginTop: \"280px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 890\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: this.state.userJsonResultOfParticularUserFromIPFS.profilePicHash,\n        style: {\n          height: \"100%\",\n          width: \"300px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 891\n        },\n        __self: this\n      }))))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 898\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"file\",\n        onChange: this.captureProfilePicFile,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 899\n        },\n        __self: this\n      })), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 902\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        style: {\n          textAlign: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 903\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: \"LogIn2\",\n        onClick: this.uploadProfilePic,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 904\n        },\n        __self: this\n      }, \"Upload\"))), React.createElement(Modal.Footer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 910\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.closeProfilPicModel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 911\n        },\n        __self: this\n      }, \"Done\"))), React.createElement(Modal, {\n        show: this.state.showModal,\n        onHide: this.closePostModel,\n        stye: modalBorder,\n        size: \"lg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 922\n        },\n        __self: this\n      }, React.createElement(Modal.Header, {\n        closeButton: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 923\n        },\n        __self: this\n      }, React.createElement(Modal.Title, {\n        style: {\n          textAlign: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 924\n        },\n        __self: this\n      }, \" Create Post\")), React.createElement(Modal.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 926\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: cardStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 927\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: card2,\n        expand: \"false\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 928\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: info,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 929\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        style: photo,\n        src: this.state.userJsonResultOfParticularUserFromIPFS.profilePicHash,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 930\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        style: name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 931\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 931\n        },\n        __self: this\n      }, this.state.fullName))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 933\n        },\n        __self: this\n      }), React.createElement(MDBInput, {\n        type: \"textarea\",\n        id: \"postTextArea\",\n        rows: \"5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 934\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 937\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"file\",\n        onChange: this.capturePostFile,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 938\n        },\n        __self: this\n      })), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 941\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        style: {\n          textAlign: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 942\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: \"LogIn2\",\n        alt: \"#\",\n        onClick: this.actuallyPost,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 943\n        },\n        __self: this\n      }, \"Post\"))), React.createElement(Modal.Footer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 948\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.closePostModel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 949\n        },\n        __self: this\n      }, \"Done\"))));\n    }\n  }]);\n\n  return MainPage;\n}(Component);\n\nexport default MainPage;","map":{"version":3,"sources":["/Users/rutvikpatel/Desktop/Project/Github6/starter_kit/src/components/MainPage.js"],"names":["React","Component","Web3","Meme","Button","Navbar","Nav","ListGroup","Modal","Card","MDBInput","ReactDOM","Files","CryptoJS","require","ipfsClient","ipfs","host","port","protocol","MainPage","props","loadData","console","log","setState","fullName","location","userEmailId","userJsonResultOfParticularUserFromIPFS","userInformationListFromBlockChain","totalUser","userBlockchainResultOfParticularUser","check","state","hasError","checkValue","addFriend","history","push","pathname","data","currentEmailId","name","addPost","checkFriendRequest","openTimeline","t","postRead","url","feed","searchFriends","friend","signOut","addProfilePic","profilePicModal","openPostModel","showModal","closePostModel","closeProfilPicModel","getPostLink","captureProfilePicFile","event","preventDefault","target","files","file","reader","window","FileReader","readAsArrayBuffer","onloadend","result","profilePicBuffer","Buffer","capturePostFile","postPicBuffer","uploadProfilePic","content","add","error","results","hash","url2","third","profilePicHash","urlhash","get","path","filesrc","userId","myObj","originalContentString","from","JSON","stringify","userContent","userInformationHash","IPFSuserInformationHash","userHash","contract","methods","changeUserInformation","send","account","then","r","makeid","length","characters","charactersLength","i","charAt","Math","floor","random","makeUUID","getFriendsInform","groupInformationPassParameter","getFriends","arrayData","groupInformationListFromBlockChain","myMap","Map","max","value","groupVersion","toString","set","lastestGroupDetailHash","groupHash","groupData","parse","about","actuallyPost","postText","document","getElementById","sessionKey","postTextHash","postPicHash","postHash","chromeExtensionData","localPostHash","encryptedPostHash","AES","encrypt","bytes","decrypt","originalText","enc","Utf8","groupDetails","undefined","userObj","postOwner","sessionKeyDetails","encryptedUserSession","encryptedGroupkey","usr","emailId","uuid","open","postHashAddress","createPost","buffer","isVisible","loadWeb3","loadBlockChainData","forceUpdate","ethereum","web3","enable","currentProvider","alert","web3_2","eth","getAccounts","accounts","net","getId","networkId","networkdata","networks","abi","address","Contract","groupCount","call","tt","groupInformation","groupEmailId","mystyle","padding","fontFamily","cursor","borderStyle","borderColor","fontSize","textAlign","mystyle2","color","backgroundColor","mystyle3","paddingLeft","cardStyle","display","flexDirection","alignItems","cardStyle2","card","boxShadow","position","userSelect","overflow","transition","width","height","maxWidth","marginBottom","borderRadius","card2","info","photo","opacity","fontWeight","username","margin","outline","border","float","background","modalPost","modalBorder","fileUpload","modalStyle","overlay","marginRight","marginTop"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Web3 from 'web3';\nimport Meme from '../abis/Meme.json';\nimport { Button,Navbar,Nav,ListGroup,Modal,Card } from \"react-bootstrap\";\nimport { MDBInput } from 'mdbreact';\nimport './file.css'; \nimport './file2.css'; \nimport ReactDOM from 'react-dom'\nimport Files from 'react-files'\nvar CryptoJS = require(\"crypto-js\");\n\nvar ipfsClient = require('ipfs-http-client');\nvar ipfs = ipfsClient({host:'ipfs.infura.io',port:'5001',protocol: 'https' }) ;;\n\n\nclass MainPage  extends Component{\n\n  \n    constructor(props){\n        super(props);\n        console.log(props);\n        this.state={\n          account:'',\n          buffer:null,\n          contract:null,\n          userEmailId:'',\n          fullName:'',\n          userJsonResultOfParticularUserFromIPFS:null,\n          userBlockchainResultOfParticularUser:null,\n          totalUser:null,\n          isVisible: false,\n          showModal:false,\n          profilePicModal:false,\n          buffer:null,\n          profilePicBuffer:'',\n          postPicBuffer:'',\n          groupInformationListFromBlockChain:[],\n          groupInformationPassParameter:''\n        };       \n      }\n\n      async componentWillMount(){\n        await this.loadData();\n        await this.check();\n        await this.loadWeb3()\n        await this.loadBlockChainData();\n      }\n\n      updateModal(isVisible) {\n        this.state.isVisible = isVisible;\n        this.forceUpdate();\n      }\n      loadData=()=>{\n        console.log(\"in load data\");\n       this.setState({fullName:this.props.location.fullName});\n       this.setState({userEmailId:this.props.location.userEmailId});\n       this.setState({userJsonResultOfParticularUserFromIPFS:this.props.location.userJsonResultOfParticularUserFromIPFS});\n       this.setState({userInformationListFromBlockChain:this.props.location.userInformationListFromBlockChain});\n       this.setState({totalUser:this.props.location.totalUser});\n       this.setState({userBlockchainResultOfParticularUser:this.props.location.userBlockchainResultOfParticularUser});\n    }\n\n    check=()=>{\n       console.log(this.state.fullName);\n       console.log(this.state.userEmailId)\n       console.log(this.state.userJsonResultOfParticularUserFromIPFS);\n       console.log(this.state.totalUser);\n       console.log(this.state.userBlockchainResultOfParticularUser);\n      // //console.log(this.state.totalUserName);\n       console.log(this.state.hasError);\n      console.log(this.state.totalUser);\n    \n\n    }\n      async loadWeb3(){\n        if(window.ethereum){\n          window.web3 = new Web3(window.ethereum);\n          await window.ethereum.enable();\n        }\n        if(window.web3){\n          window.web3 = new Web3(window.web3.currentProvider);\n        }\n        else{\n          window.alert(\"Use Metamask\");\n        } \n      }\n\n\n\n\n      async loadBlockChainData(){\n        const web3_2 = window.web3;\n        const accounts =  await web3_2.eth.getAccounts();\n        this.setState({account:accounts[0]});\n        const networkId = await web3_2.eth.net.getId();\n        const networkdata= Meme.networks[networkId];\n        if(networkdata){\n          const abi =Meme.abi;\n          const address = networkdata.address;\n          //fetch the contract \n          const contract = web3_2.eth.Contract(abi,address);\n          console.log(contract);\n          this.setState({contract:contract});\n          console.log(contract.methods);\n        //  const MemeHash =await contract.methods.get().call();\n\n\n          var tt= await this.state.contract.methods.groupCount().call();\n          var groupCount=await tt;\n          groupCount=groupCount.toString();\n          console.log(\"group Count\");\n          console.log(groupCount);\n          for(var i=1;i<=groupCount;i++){\n            const groupInformationListFromBlockChain= await this.state.contract.methods.groupInformation(i).call();\n            console.log(groupInformationListFromBlockChain)\n            if(groupInformationListFromBlockChain.groupEmailId==this.state.userEmailId){\n              this.setState({\n                groupInformationListFromBlockChain:[...this.state.groupInformationListFromBlockChain, groupInformationListFromBlockChain]\n             })\n            }\n            \n          }\n          ////\n\n          console.log(this.state.userJsonResultOfParticularUserFromIPFS);\n          var arrayData=this.state.userJsonResultOfParticularUserFromIPFS.friend;\n          for(var i=0;i<arrayData.length;i++){\n           console.log(arrayData[i]);\n          }\n          console.log(this.state.groupInformationListFromBlockChain)\n          let myMap = new Map();\n          var max=-1;\n          for(var i=0;i<this.state.groupInformationListFromBlockChain.length;i++){\n            \n           var value=this.state.groupInformationListFromBlockChain[i].groupVersion;\n           value=value.toString();\n           myMap.set(value,this.state.groupInformationListFromBlockChain[i]);\n           console.log(value);\n           if(value>max){\n             max=value;\n           }\n          }\n          console.log(\"lastest group version is\");\n          console.log(max);\n          console.log(myMap.get(max));\n          var lastestGroupDetailHash= myMap.get(max);\n          console.log(lastestGroupDetailHash);\n         \n         if(max!=-1){\n          var t= lastestGroupDetailHash.groupHash;\n          var content;\n          ipfs.get(\"/ipfs/\"+t,(error,result)=>{\n            console.log(result[0].path);\n            content=result[0].content;\n            console.log(content);\n           var groupData=JSON.parse(content);\n           console.log(groupData);\n           \n           this.setState({ groupInformationPassParameter:groupData})\n           console.log(this.state.groupInformationPassParameter);\n          })\n         }\n\n\n\n\n\n        }\n        else{\n          window.alert(\"Smart contract not deployed to detected the network\");\n        }\n      }\n      checkValue=()=>{\n        // console.log(this.props.location.TotalUser);\n        // console.log(this.props.location.fullName);\n        //console.log()\n        console.log(this.state. fullName);\n        console.log(this.state.userEmailId);\n        console.log(this.state.userJsonResultOfParticularUserFromIPFS);\n        console.log(this.state.totalUser);\n        console.log(this.state.userBlockchainResultOfParticularUser);\n        console.log(\"Orginal Value\");\n        console.log(this.props.location.userBlockchainResultOfParticularUser);\n      }\n\n      addFriend=()=>{\n       console.log(\"In create Account\");\n          this.props.history.push({\n            pathname: '/AddFriend',\n            data: this.state.currentEmailId,\n            name: this.props.location.name   // your data array of objects\n          })\n\n      }\n      addPost=()=>{\n        this.props.history.push({\n          pathname: '/addPost',\n          data: this.state.currentEmailId,\n          name: this.props.location.name   // your data array of objects\n        })\n      }\n      checkFriendRequest=()=>{\n        console.log(\"In check friend request\");\n        console.log(this.state.userEmailId);\n        console.log(this.state.fullName);\n        console.log(this.state.userJsonResultOfParticularUserFromIPFS);\n        console.log(this.state.totalUser);\n        console.log(this.state.userBlockchainResultOfParticularUser);\n           this.props.history.push({\n             pathname: '/checkRequest2',\n             userEmailId: this.state.userEmailId,\n             fullName:  this.state. fullName,\n             userJsonResultOfParticularUserFromIPFS:this.state.userJsonResultOfParticularUserFromIPFS,\n             totalUser:this.state.totalUser,\n             userBlockchainResultOfParticularUser:this.state.userBlockchainResultOfParticularUser\n           })\n \n       }\n       openTimeline=()=>{\n        console.log(\"In check friend request\");\n        var t=\"adv\";\n        this.props.history.push({\n          pathname: '/Timeline',\n          data: this.state.currentEmailId,\n          name: this.props.location.name   // your data array of objects\n        })\n       }\n       postRead=()=>{\n         var url =\"QmYah59VfHQTNPnhk1f5hwnVqkxRC6CB9xvMjzLro9VBsw\";\n        this.props.history.push({\n          pathname: '/postReader/'+url,\n         // data: this.state.currentEmailId,\n          //name: this.props.location.name   // your data array of objects\n        })\n       }\n\n       feed=()=>{\n\n        this.props.history.push({\n          pathname: '/Feed',\n          data: this.state.currentEmailId,\n          name: this.props.location.name   // your data array of objects\n        })\n       }\n\n       \n       searchFriends=()=>{\n        console.log(\"in people\");\n        this.props.history.push({\n          pathname: '/searchFriends2',\n          userEmailId: this.state.userEmailId,\n          fullName:  this.state. fullName,\n          userJsonResultOfParticularUserFromIPFS:this.state.userJsonResultOfParticularUserFromIPFS,\n          totalUser:this.state.totalUser,\n          userBlockchainResultOfParticularUser:this.state.userBlockchainResultOfParticularUser\n        })\n       }\n\n       friend=()=>{\n        this.props.history.push({\n          pathname: '/friend',\n          data: this.state.currentEmailId,\n          name: this.props.location.name   // your data array of objects\n        })\n       }\n       signOut=()=>{\n        this.props.history.push({\n          pathname: '/login',\n           // your data array of objects\n        })\n       }\n       addProfilePic=()=>{\n        // this.props.history.push({\n        //   pathname: '/addProfilePic',\n        //   userEmailId: this.state.userEmailId,\n        //   fullName:  this.state. fullName,\n        //   userJsonResultOfParticularUserFromIPFS:this.state.userJsonResultOfParticularUserFromIPFS,\n        //   totalUser:this.state.totalUser,\n        //   userBlockchainResultOfParticularUser:this.state.userBlockchainResultOfParticularUser\n        // })\n\n        this.setState({profilePicModal : true });\n     \n       }\n       openPostModel=()=>{\n         console.log(\"inside open\");\n         this.setState({ showModal: true });\n       }\n       closePostModel=()=>{\n        console.log(\"inside close\");\n        this.setState({ showModal: false });\n       }\n       closeProfilPicModel=()=>{\n        console.log(\"inside close\");\n        this.setState({ profilePicModal: false });\n       }\n       getPostLink=()=>{\n        this.setState({ showModal: true });\n      }\n      captureProfilePicFile=(event)=>{\n        console.log(ipfs );\n        event.preventDefault();\n        console.log(\"file is capture\");\n        console.log(event);\n        console.log(event.target.files[0]);\n        var file = event.target.files[0];\n        var reader = new window.FileReader();\n        reader.readAsArrayBuffer(file);  \n        reader.onloadend = ()=>{\n          console.log(reader.result);\n          this.setState({profilePicBuffer:Buffer(reader.result)})\n          console.log(\"buffer\",Buffer(reader.result));\n        }\n        //process the file inside here \n    }\n\n\n  \n\n    capturePostFile=(event)=>{\n      console.log(ipfs );\n        event.preventDefault();\n        console.log(\"file is capture\");\n        console.log(event);\n        console.log(event.target.files[0]);\n        var file = event.target.files[0];\n        var reader = new window.FileReader();\n        reader.readAsArrayBuffer(file);  \n        reader.onloadend = ()=>{\n          console.log(reader.result);\n          this.setState({postPicBuffer:Buffer(reader.result)})\n          console.log(\"buffer\",Buffer(reader.result));\n        }   \n    }\n\n    uploadProfilePic=()=>{\n      console.log(\"uploadProfilePic\");\n     // event.preventDefault();\n      console.log(\"in submit event\");\n      const file = {\n         content: this.state.profilePicBuffer\n         //content:this.\n      }\n      var t;\n      ipfs.add(file,(error,results)=>{\n          //Do Stuff here\n         console.log(\"IPFS RESULT\",results[0].hash);\n          var hash=results[0].hash;\n          t=results[0].hash;\n          var url =\"https://ipfs.infura.io/ipfs/\";\n          var url2=t;\n          var third=url+url2;\n          console.log(third);\n          this.state.userJsonResultOfParticularUserFromIPFS.profilePicHash=third;\n          console.log(this.state.userJsonResultOfParticularUserFromIPFS.profilePicHash);\n          this.setState({urlhash:t});\n          if(error){\n            console.log(error);\n            return;\n          }\n          var content;\n          ipfs.get(\"/ipfs/\"+t,(error,result)=>{\n            console.log(result[0].path);\n            content=result[0].content;\n          })\n   \n          //Step 2 is to store file on blockchain\n          this.filesrc=\"http://localhost:8080/ipfs/\"+hash;\n          console.log(\"https://ipfs.infura.io/ipfs/\"+hash);\n          console.log(this.filesrc);\n          this.setState({profilePicHash:hash});\n\n          var userId=   this.state.userBlockchainResultOfParticularUser.userId;\n          var myObj=this.state.userJsonResultOfParticularUserFromIPFS;\n          console.log(myObj);\n          var originalContentString = Buffer.from(JSON.stringify(myObj));\n            // The json is change to string format \n            const userContent= {\n              content:originalContentString\n          }\n          \n          ipfs.add(userContent,(error,results)=>{\n            console.log(results);\n            var userInformationHash= results[0].hash;\n           // this.setState({userJsonResultOfParticularUserFromIPFS:userInformationHash});\n          //console.log(this.state.userJsonResultOfParticularUserFromIPFS);\n            console.log(results[0].hash);\n            this.setState({IPFSuserInformationHash:results[0].hash});   \n            this.state.userBlockchainResultOfParticularUser.userHash=results[0].hash;\n            console.log(userId);          \n               this.state.contract.methods.changeUserInformation(userId,userInformationHash).send({from: this.state.account}).then((r)=>{\n                  console.log(r);\n              });  \n              this.state.userBlockchainResultOfParticularUser.userHash=userInformationHash;\n              console.log(this.state.userBlockchainResultOfParticularUser.userHash);\n          });\n\n        })\n    }\n\n\n\n    makeid=(length)=>{\n      var result           = '';\n      var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';\n      var charactersLength = characters.length;\n      for ( var i = 0; i < length; i++ ) {\n         result += characters.charAt(Math.floor(Math.random() * charactersLength));\n      }\n      return result;\n   }\n   makeUUID=(length)=>{\n    var result           = '';\n    var characters       = 'abcdefghijklmnopqrstuvwxyz';\n    var charactersLength = characters.length;\n    for ( var i = 0; i < length; i++ ) {\n       result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n }\n\n\n getFriendsInform=()=>{\n  console.log(this.state.groupInformationPassParameter);\n  this.props.history.push({\n    pathname: '/timeline',\n    userEmailId: this.state.userEmailId,\n    fullName:  this.state. fullName,\n    userJsonResultOfParticularUserFromIPFS:this.state.userJsonResultOfParticularUserFromIPFS,\n    totalUser:this.state.totalUser,\n    userBlockchainResultOfParticularUser:this.state.userBlockchainResultOfParticularUser\n  })\n\n }\n\n\n   getFriends=()=>{\n     console.log(this.state.userJsonResultOfParticularUserFromIPFS);\n     var arrayData=this.state.userJsonResultOfParticularUserFromIPFS.friend;\n     for(var i=0;i<arrayData.length;i++){\n      console.log(arrayData[i]);\n     }\n     console.log(this.state.groupInformationListFromBlockChain)\n     let myMap = new Map();\n     var max=-1;\n     for(var i=0;i<this.state.groupInformationListFromBlockChain.length;i++){\n       \n      var value=this.state.groupInformationListFromBlockChain[i].groupVersion;\n      value=value.toString();\n      myMap.set(value,this.state.groupInformationListFromBlockChain[i]);\n      console.log(value);\n      if(value>max){\n        max=value;\n      }\n     }\n     console.log(\"lastest group version is\");\n     console.log(max);\n     console.log(myMap.get(max));\n     var lastestGroupDetailHash= myMap.get(max);\n\n    var t= lastestGroupDetailHash.groupHash;\n     var content;\n       ipfs.get(\"/ipfs/\"+t,(error,result)=>{\n         console.log(result[0].path);\n         content=result[0].content;\n         console.log(content);\n        var groupData=JSON.parse(content);\n        console.log(groupData);\n        \n        this.setState({ groupInformationPassParameter:groupData})\n        console.log(this.state.groupInformationPassParameter);\n       })\n       \n\n   }\n\n\n \n\n   about=()=>{\n    console.log(\"outside the loop\");\n    console.log(this.state.groupInformationPassParameter);\n\n  }\n\n    actuallyPost=()=>{\n\n      var postText=document.getElementById(\"postTextArea\").value;\n      var sessionKey=this.makeid(20);\n      console.log(postText);\n      var postTextHash;\n      var postPicHash;\n      var postHash;\n    //This is the the data which is enter by the user \n    var userInformationHash;\n    var originalContentString = Buffer.from(JSON.stringify(postText));\n      // The json is change to string format \n      const userContent= {\n        content:originalContentString\n    }\n    ipfs.add(userContent,(error,results)=>{\n              console.log(results);\n              userInformationHash= results[0].hash;\n              console.log(results[0].hash);\n              postTextHash=results[0].hash;\n              console.log(postTextHash)\n            const file = {\n              content: this.state.postPicBuffer\n              //content:this.\n          }\n      var t;\n      ipfs.add(file,(error,results)=>{\n       //Do Stuff here\n      console.log(\"IPFS RESULT\",results[0].hash);\n       var hash=results[0].hash;\n       t=results[0].hash;\n       var url =\"https://ipfs.infura.io/ipfs/\";\n       var url2=t;\n       var third=url+url2;\n       postPicHash=results[0].hash;\n       console.log(\"third\");\n       console.log(third);\n       if(error){\n         console.log(error);\n         return;\n       }\n       var content;\n       ipfs.get(\"/ipfs/\"+t,(error,result)=>{\n         console.log(result[0].path);\n         content=result[0].content;\n       })\n       //Step 2 is to store file on blockchain\n       this.filesrc=\"http://localhost:8080/ipfs/\"+hash;\n       console.log(\"https://ipfs.infura.io/ipfs/\"+hash);\n\n            var myObj = {\n              \"postTextHash\":postTextHash,\n              \"postPicHash\":postPicHash  \n            };\n          //This is the the data which is enter by the user \n          \n          console.log(myObj);\n          console.log(this.state.chromeExtensionData);\n          var originalContentString = Buffer.from(JSON.stringify(myObj));\n            // The json is change to string format \n            const userContent= {\n              content:originalContentString\n          }\n         \n          ipfs.add(userContent,(error,results)=>{\n            console.log(results);\n            postHash= results[0].hash;\n            console.log(postHash);\n            var localPostHash=results[0].hash;\n            console.log(this.state.fullName);\n            console.log(this.state.userBlockchainResultOfParticularUser);\n            console.log(this.state.userJsonResultOfParticularUserFromIPFS);\n            console.log(sessionKey);\n            \n\n\n            console.log(\"this is encrypted posh hahs\");\n            var encryptedPostHash= CryptoJS.AES.encrypt(postHash, sessionKey).toString();\n            var bytes  = CryptoJS.AES.decrypt(encryptedPostHash, sessionKey);\n            var originalText = bytes.toString(CryptoJS.enc.Utf8);\n            console.log(originalText); // 'my message'\n            var arrayData=this.state.groupInformationPassParameter.groupDetails;\n            console.log(arrayData);\n            console.log(arrayData==undefined);\n            var userObj={\n              postOwner:this.state.fullName,\n              postHash:results[0].hash,\n              sessionKey:sessionKey,\n              encryptedPostHash:encryptedPostHash,\n              groupVersion:this.state.groupInformationPassParameter.groupVersion,\n              sessionKeyDetails:[]\n            }\n            console.log(\"Checking the data\");\n            console.log(userObj);\n            console.log(\"------\");\n            \n            if(arrayData==undefined){\n              userObj.groupVersion=0;\n            }\n            else{\n              for(var i=0;i<arrayData.length;i++){\n                console.log(arrayData[i]);\n                var encryptedUserSession= CryptoJS.AES.encrypt(sessionKey, arrayData[i].encryptedGroupkey).toString();\n                var usr={\n                  emailId:arrayData[i].emailId,\n                  encryptedUserSession:encryptedUserSession,\n                  userHash:arrayData[i].userHash\n                }\n                console.log(usr);\n                userObj.sessionKeyDetails.push(usr);\n              }\n            }\n\n            console.log(\"Json data\");\n            console.log(userObj);\n            var uuid = this.makeUUID(40);\n            window.open( \n              \"http://localhost:8888/Facebook-sdk/facebooksdk/?url?=http://localhost:3000/MainPage/\"+uuid, \"_blank\"); \n            // uuid=1;\n            // var date =  new Date();\n            // var stringData=date.toString();\n            //////\n\n            // this.state.contract.methods.createPost(this.state.userEmailId,userInformationHash).send({from: this.state.account}).then((r)=>{\n            //   console.log(r);\n            var originalContentString = Buffer.from(JSON.stringify(userObj));\n            // The json is change to string format \n            const userContent= {\n              content:originalContentString\n          }\n          ipfs.add(userContent,(error,results)=>{\n\n              var postHashAddress=results[0].hash;\n              console.log(postHashAddress);\n              //string memory _postedByEmailId,string memory _postHash, uint _uniquePostId ,string memory _currentDateAndTime\n            this.state.contract.methods.createPost(this.state.userEmailId,postHashAddress,uuid).send({from: this.state.account}).then((r)=>{\n              console.log(r);\n            });\n            \n\n          });\n\n            ///////\n          });\n         \n          // var userObj={\n          //   postOwner:this.state.fullName,\n          //   postHash:postHash,\n          //   sessionKey:sessionKey,\n            \n          // }\n\n     })\n\n\n\n  });\n\n\n\n       \n    }\n\n\n    render(){\n      const mystyle = {\n        padding: \"20px\",\n        fontFamily: \"Arial\",\n        cursor: \"pointer\",\n        borderStyle: \"solid\",\n        borderColor: \"#365899\",\n        fontSize:\"20px\",\n        textAlign: \"center\"\n       \n      };\n      const mystyle2 = {\n        padding: \"10px\",\n        fontFamily: \"Arial\",\n        cursor: \"pointer\",\n        borderStyle: \"solid\",\n        color:\"while\",\n        backgroundColor: \"#365899\",\n        color:\"#fff\"\n      };\n      const mystyle3={\n        paddingLeft:\"20px\"\n      }\n\n      var cardStyle={\n        \n        padding:\"10px 10px 10px 10px\",\n        display:\"flex\",\n        flexDirection:\"column\",\n        alignItems:\"center\",\n       // width:\"1000px \n    }\n    var cardStyle2={\n        \n      padding:\"10px 10px 10px 10px\",\n      display:\"flex\",\n      flexDirection:\"column\",\n      alignItems:\"center\",\n      textAlign:\"center\"\n     // width:\"1000px \n  }\n\n    var card={\n      boxShadow:\"0px 0px 0.5px rgba(10,10,10,.3)\",\n      alignItems:\"center\",\n      position:\"relative\",\n      userSelect:\"none\",\n      overflow:\"hidden\",\n      transition:\"all .5s ease\",\n      padding:\"10px\",\n      width:\"850px\",\n      height:\"280px\",\n      maxWidth:\"100%\",\n      backgroundColor:\"white\",\n      marginBottom:\"10px\",\n      fontSize:\"14px\",\n      borderRadius:\"3px\",\n      borderStyle: \"solid\",\n      borderColor: \"#365899\"\n    }\n    var card2={\n      boxShadow:\"0px 0px 0.5px rgba(10,10,10,.3)\",\n      alignItems:\"center\",\n      position:\"relative\",\n      userSelect:\"none\",\n      overflow:\"hidden\",\n      transition:\"all .5s ease\",\n      padding:\"10px\",\n      width:\"950px\",\n      height:\"280px\",\n      maxWidth:\"100%\",\n      backgroundColor:\"white\",\n      marginBottom:\"10px\",\n      fontSize:\"14px\",\n      borderRadius:\"3px\",\n     \n    }\n    var info={\n        display:\"flex\",\n        alignItems:\"center\",\n        height:\"40px\"\n      }\n      var photo={\n        height:\"40px\",\n        width:\"40px\",\n        backgroundColor:\"gray\",\n        opacity:\".8\",\n        borderRadius:\"100%\"\n      }\n    \n      var name={\n        \n          fontWeight:\"bold\",\n          color:\"rgb(66, 103, 178)\",\n          opacity:\".9\",\n          paddingLeft:\"20px\",\n      }\n      var username= {\n        margin:\"15px 0\",\n        padding:\"15px 10px\",\n        width:\"100%\",\n        outline:\"none\",\n        border:\"1px solid #bbb\",\n        borderRadius:\"20px\",\n        display:\"inline-block\",\n        fontSize:\"20px\"\n        \n      }\n      var addPost= {\n        float: \"right\",\n        background: \"#365899\",\n        border: \"none\",\n        color: \"#fff\",\n        fontWeight: \"bold\",\n        //padding: \"10px 15px\",\n        //borderRadius: \"6px\"\n      }\n      var modalPost= {\n     \n        background: \"#365899\",\n        border: \"none\",\n        color: \"#fff\",\n        fontWeight: \"bold\",\n        //padding: \"10px 15px\",\n        //borderRadius: \"6px\"\n      }\n\n      var modalBorder={\n        borderStyle: \"solid\",\n        borderColor: \"#365899\"\n      }\n      var fileUpload={\n        fontSize: \"20px\",\n        height:\"40px\",\n        color:\"blue\",\n        background: \"#365899\",\n        borderStyle: \"solid\",\n        borderColor: \"#365899\"\n      }\n      const modalStyle = {\n\toverlay: {\n\t\tbackgroundColor: \"rgba(0, 0, 0,0.5)\"\n\t}\n};\n        // console.log(\"hello in main page\");\n        // console.log(this.props);\n        // console.log(this.props.location.data['emailId'])\n        // console.log(\"just checking\");\n\n        // var t = 'Rutvik';\n        //this.setState({displayEmailId:this.props.location.data['emailId']})\n        //console.log(this.state.name);\n      console.log(\"Name state object \"+this.state.fullName);\n        return(\n            <div>\n                <link href=\"https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\" rel=\"stylesheet\" integrity=\"sha384-wvfXpqpZZVQGK6TAh5PVlGOfQNHSoD2xbE+QkPxCAFlNEevoEH3Sl0sibVcOQVnN\" crossorigin=\"anonymous\"></link>\n                <nav className=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\n                    <a\n                      className=\"navbar-brand col-sm-3 col-md-2 mr-0 text-center\"\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\">\n                    <h1></h1>\n                    <p></p>\n                    <div></div>\n                    </a>\n                 </nav>\n                 <br></br>\n                <Navbar bg=\"light\" expand=\"lg\">\n                    <Navbar.Brand href=\"#home\"><img  src={this.state.userJsonResultOfParticularUserFromIPFS.profilePicHash}  style={{height: \"100%\",  width:\"70px\" }} alt=\"\" className=\"img-responsive\" /></Navbar.Brand>\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\n                        <Nav className=\"mr-auto\">\n                        <Nav.Link ><Button variant=\"primary\" style={{background:\"#365899\"}} onClick={this.checkFriendRequest}> <span className=\"fa fa-id-badge\"></span>   Check Request</Button></Nav.Link>\n                        <Nav.Link ><Button variant=\"outline-secondary\" onClick={this.searchFriends}><span className=\" fa fa-search\"></span>  Search Friend</Button></Nav.Link>\n                        </Nav>\n                    <Button variant=\"primary\"  style={{marginRight: \"10px\",background:\"#365899\" }}>\n                    \n                     {this.state.fullName}\n                     \n                     </Button>\n                    <Button Button variant=\"light\"  onClick={this.signOut} ><span class=\"fa fa-sign-out\"></span> Log Out</Button>\n                  \n                </Navbar.Collapse>\n                </Navbar>\n\n                <div>\n                    <div className=\"row\">\n                    <div className=\"col-3\">\n                      <div style={ mystyle3}>\n                      <ListGroup>\n                        <ListGroup.Item style={mystyle2}>\n                          <div className=\"row\">\n                           \n                            <div className=\"col-2\">\n                              <img style={photo}  src= {this.state.userJsonResultOfParticularUserFromIPFS.profilePicHash} ></img>\n                              </div>\n                              <div className=\"col-10\">\n                              <span style={{fontSize:\"20px\"}}><h4>{this.state.fullName}</h4></span>\n                              </div>\n                                                        \n                          </div>\n                         \n                        </ListGroup.Item>\n                        <ListGroup.Item style={mystyle} onClick={this.getFriends} >Friend List</ListGroup.Item>\n                        <ListGroup.Item style={mystyle} onClick={this.addProfilePic} >Add Profile Pic</ListGroup.Item>\n                        <ListGroup.Item style={mystyle} onClick={this.about}>About</ListGroup.Item>\n                        <ListGroup.Item style={mystyle}  onClick={this.getFriendsInform} >Vestibulum at eros</ListGroup.Item>\n                      </ListGroup>\n                      </div>\n                    </div>\n                    <div className=\"col-7\">\n                    <div style={cardStyle}>\n                        <div style={card} expand=\"false\">\n                          <div style={info}>\n                              <img style={photo} src={this.state.userJsonResultOfParticularUserFromIPFS.profilePicHash} ></img>\n                            <div style={name}><h4>{this.state.fullName}</h4></div>\n                          </div>\n                          <input type=\"text\" style={username} name=\"username\" placeholder=\"what's on your mind,\" required />  \n                          <hr></hr>\n                          <Button style={addPost}  onClick={this.openPostModel}>Add Post</Button>\n                        </div>\n                    </div>\n                    </div>\n                  </div>\n               </div> \n\n\n   \n         \n\n          <Modal show={this.state.profilePicModal} onHide={this.closeProfilPicModel}  size=\"lg\">\n                  <Modal.Header closeButton>\n                    <Modal.Title style={{color:\"#205663\", paddingLeft:\"310px\"}}>Add Profile Picture</Modal.Title>\n                  </Modal.Header>\n                  <Modal.Body>\n                  <div style={cardStyle2}>\n                          <div style={card2} expand=\"false\">\n                            <div style={info}>\n                                <img style={photo} src={this.state.userJsonResultOfParticularUserFromIPFS.profilePicHash} ></img>\n                              <div style={name}><h4>{this.state.fullName}</h4></div>\n                              <div style={{textAlign:\"center\", marginTop:\"280px\"}} >\n                               <img src={this.state.userJsonResultOfParticularUserFromIPFS.profilePicHash}  style={{height: \"100%\",  width:\"300px\" }}></img>\n                             </div>\n                            </div>\n                          </div>\n                    </div>\n                   \n                     \n                    <div>\n                    <input type=\"file\" onChange={this.captureProfilePicFile}/> \n                    </div>\n   \n                    <hr></hr>\n                    <div style={{textAlign:\"center\"}}>\n                    <Button className=\"LogIn2\" onClick={this.uploadProfilePic}>\n                           Upload\n                    </Button>\n                    </div>\n                    \n                  </Modal.Body>\n                  <Modal.Footer>\n                  <Button onClick={this.closeProfilPicModel}>Done</Button>\n                </Modal.Footer>\n              </Modal>\n\n\n\n\n          \n\n\n\n              <Modal show={this.state.showModal} onHide={this.closePostModel} stye={modalBorder}  size=\"lg\">\n                  <Modal.Header closeButton>\n                   <Modal.Title  style={{textAlign:\"center\"}} > Create Post</Modal.Title>\n                  </Modal.Header>\n                  <Modal.Body>\n                  <div style={cardStyle}>\n                          <div style={card2} expand=\"false\">\n                            <div style={info}>\n                                <img style={photo} src={this.state.userJsonResultOfParticularUserFromIPFS.profilePicHash} ></img>\n                              <div style={name}><h4>{this.state.fullName}</h4></div>\n                            </div>\n                            <br></br>\n                            <MDBInput type=\"textarea\"  id=\"postTextArea\" rows=\"5\" />     \n                          </div>\n                    </div>\n                    <div>\n                    <input type=\"file\"  onChange={this.capturePostFile}/> \n                    </div>\n   \n                    <hr></hr>\n                    <div style={{textAlign:\"center\"}}>\n                    <Button className=\"LogIn2\" alt=\"#\" onClick={this.actuallyPost}>\n                           Post\n                    </Button>\n                    </div>\n                  </Modal.Body>\n                  <Modal.Footer>\n                  <Button onClick={this.closePostModel}>Done</Button>\n                </Modal.Footer>\n              </Modal>\n\n\n\n            </div>\n          \n\n            \n        );\n    }\n}\n\nexport default MainPage;"]},"metadata":{},"sourceType":"module"}