{"ast":null,"code":"'use strict';\n\nvar _regeneratorRuntime = require(\"/Users/rutvikpatel/Desktop/Project/BlockChainApp/BlockChainWithIPFS/starter_kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _awaitAsyncGenerator = require(\"/Users/rutvikpatel/Desktop/Project/BlockChainApp/BlockChainWithIPFS/starter_kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/awaitAsyncGenerator\");\n\nvar _wrapAsyncGenerator = require(\"/Users/rutvikpatel/Desktop/Project/BlockChainApp/BlockChainWithIPFS/starter_kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/wrapAsyncGenerator\");\n\nvar _asyncIterator = require(\"/Users/rutvikpatel/Desktop/Project/BlockChainApp/BlockChainWithIPFS/starter_kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncIterator\");\n\nvar ndjson = require('iterable-ndjson');\n\nvar configure = require('../lib/configure');\n\nvar toIterable = require('../lib/stream-to-iterable');\n\nvar _require = require('./form-data'),\n    toFormData = _require.toFormData;\n\nvar toCamel = require('../lib/object-to-camel');\n\nmodule.exports = configure(function (_ref2) {\n  var ky = _ref2.ky;\n  return function (input, options) {\n    return _wrapAsyncGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var searchParams, res, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, _value, file;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              options = options || {};\n              searchParams = new URLSearchParams(options.searchParams);\n              searchParams.set('stream-channels', true);\n              if (options.chunker) searchParams.set('chunker', options.chunker);\n              if (options.cidVersion) searchParams.set('cid-version', options.cidVersion);\n              if (options.cidBase) searchParams.set('cid-base', options.cidBase);\n              if (options.enableShardingExperiment != null) searchParams.set('enable-sharding-experiment', options.enableShardingExperiment);\n              if (options.hashAlg) searchParams.set('hash', options.hashAlg);\n              if (options.onlyHash != null) searchParams.set('only-hash', options.onlyHash);\n              if (options.pin != null) searchParams.set('pin', options.pin);\n              if (options.progress) searchParams.set('progress', true);\n              if (options.quiet != null) searchParams.set('quiet', options.quiet);\n              if (options.quieter != null) searchParams.set('quieter', options.quieter);\n              if (options.rawLeaves != null) searchParams.set('raw-leaves', options.rawLeaves);\n              if (options.shardSplitThreshold) searchParams.set('shard-split-threshold', options.shardSplitThreshold);\n              if (options.silent) searchParams.set('silent', options.silent);\n              if (options.trickle != null) searchParams.set('trickle', options.trickle);\n              if (options.wrapWithDirectory != null) searchParams.set('wrap-with-directory', options.wrapWithDirectory);\n              if (options.preload != null) searchParams.set('preload', options.preload);\n              _context.t0 = _awaitAsyncGenerator;\n              _context.t1 = ky;\n              _context.t2 = options.timeout;\n              _context.t3 = options.signal;\n              _context.t4 = options.headers;\n              _context.t5 = searchParams;\n              _context.next = 27;\n              return _awaitAsyncGenerator(toFormData(input));\n\n            case 27:\n              _context.t6 = _context.sent;\n              _context.t7 = {\n                timeout: _context.t2,\n                signal: _context.t3,\n                headers: _context.t4,\n                searchParams: _context.t5,\n                body: _context.t6\n              };\n              _context.t8 = _context.t1.post.call(_context.t1, 'add', _context.t7);\n              _context.next = 32;\n              return (0, _context.t0)(_context.t8);\n\n            case 32:\n              res = _context.sent;\n              _iteratorNormalCompletion = true;\n              _didIteratorError = false;\n              _context.prev = 35;\n              _iterator = _asyncIterator(ndjson(toIterable(res.body)));\n\n            case 37:\n              _context.next = 39;\n              return _awaitAsyncGenerator(_iterator.next());\n\n            case 39:\n              _step = _context.sent;\n              _iteratorNormalCompletion = _step.done;\n              _context.next = 43;\n              return _awaitAsyncGenerator(_step.value);\n\n            case 43:\n              _value = _context.sent;\n\n              if (_iteratorNormalCompletion) {\n                _context.next = 56;\n                break;\n              }\n\n              file = _value;\n              file = toCamel(file); // console.log(file)\n\n              if (!(options.progress && file.bytes)) {\n                _context.next = 51;\n                break;\n              }\n\n              options.progress(file.bytes);\n              _context.next = 53;\n              break;\n\n            case 51:\n              _context.next = 53;\n              return toCoreInterface(file);\n\n            case 53:\n              _iteratorNormalCompletion = true;\n              _context.next = 37;\n              break;\n\n            case 56:\n              _context.next = 62;\n              break;\n\n            case 58:\n              _context.prev = 58;\n              _context.t9 = _context[\"catch\"](35);\n              _didIteratorError = true;\n              _iteratorError = _context.t9;\n\n            case 62:\n              _context.prev = 62;\n              _context.prev = 63;\n\n              if (!(!_iteratorNormalCompletion && _iterator.return != null)) {\n                _context.next = 67;\n                break;\n              }\n\n              _context.next = 67;\n              return _awaitAsyncGenerator(_iterator.return());\n\n            case 67:\n              _context.prev = 67;\n\n              if (!_didIteratorError) {\n                _context.next = 70;\n                break;\n              }\n\n              throw _iteratorError;\n\n            case 70:\n              return _context.finish(67);\n\n            case 71:\n              return _context.finish(62);\n\n            case 72:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[35, 58, 62, 72], [63,, 67, 71]]);\n    }))();\n  };\n});\n\nfunction toCoreInterface(_ref3) {\n  var name = _ref3.name,\n      hash = _ref3.hash,\n      size = _ref3.size;\n  return {\n    path: name,\n    hash: hash,\n    size: parseInt(size)\n  };\n}","map":null,"metadata":{},"sourceType":"script"}