{"ast":null,"code":"import _regeneratorRuntime from \"/Users/rutvikpatel/Desktop/Project/BlockChainApp/BlockChainWithIPFS/starter_kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/rutvikpatel/Desktop/Project/BlockChainApp/BlockChainWithIPFS/starter_kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/rutvikpatel/Desktop/Project/BlockChainApp/BlockChainWithIPFS/starter_kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/Users/rutvikpatel/Desktop/Project/BlockChainApp/BlockChainWithIPFS/starter_kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rutvikpatel/Desktop/Project/BlockChainApp/BlockChainWithIPFS/starter_kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"/Users/rutvikpatel/Desktop/Project/BlockChainApp/BlockChainWithIPFS/starter_kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/rutvikpatel/Desktop/Project/BlockChainApp/BlockChainWithIPFS/starter_kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/rutvikpatel/Desktop/Project/BlockChainApp/BlockChainWithIPFS/starter_kit/src/components/register.js\";\nimport React, { Component } from 'react'; //import logo from '../logo.png';\n\nimport Web3 from 'web3';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport './App.css';\nimport Meme from '../abis/Meme.json';\nimport { MDBCol, MDBInput } from \"mdbreact\";\nimport { Crypt, RSA } from 'hybrid-crypto-js';\nimport Feed from './Feed.js';\nimport { Form, Button, FormGroup, FormControl, ControlLabel, Card, ButtonToolbar } from \"react-bootstrap\";\n\nvar ipfsClient = require('ipfs-http-client');\n\nvar ipfs = ipfsClient({\n  host: 'ipfs.infura.io',\n  port: '5001',\n  protocol: 'https'\n});\nvar crypt = new Crypt();\nvar rsa = new RSA();\n\nvar register =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(register, _Component);\n\n  _createClass(register, [{\n    key: \"componentWillMount\",\n    value: function () {\n      var _componentWillMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                document.addEventListener('csEvent', this.checkEvent);\n                _context.next = 3;\n                return this.loadWeb3();\n\n              case 3:\n                _context.next = 5;\n                return this.loadBlockChainData();\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentWillMount() {\n        return _componentWillMount.apply(this, arguments);\n      }\n\n      return componentWillMount;\n    }()\n  }, {\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                document.addEventListener('csEvent', this.checkEvent);\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }]);\n\n  function register(props) {\n    var _this;\n\n    _classCallCheck(this, register);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(register).call(this, props));\n\n    _this.checkEvent = function (event) {\n      var data = event.detail;\n      console.log(data);\n\n      _this.setState({\n        chromeExtensionData: event\n      });\n\n      console.log(\"Nv Enter:\", event);\n      console.log(_this.state.chromeExtensionData);\n    };\n\n    _this.test = function () {\n      console.log(\"in test\");\n      var message = 'Rutvik Patel is waiting for'; // Encryption with one public RSA key\n\n      var encrypted = crypt.encrypt(_this.state.publicKey, message);\n      console.log(encrypted);\n      console.log(\"After encry\");\n      var decrypted = crypt.decrypt(_this.state.privateKey, encrypted); // Get decrypted message\n\n      console.log(\"before\");\n      var message = decrypted.message;\n      console.log(message);\n      console.log(\"After decry\");\n    };\n\n    _this.pausecomp = function (millis) {\n      var date = new Date();\n      var curDate = null;\n\n      do {\n        curDate = new Date();\n      } while (curDate - date < millis);\n    };\n\n    _this.handleClick3 = function () {\n      console.log(_this.state.chromeExtensionData.detail.sendMessage);\n\n      if (_this.state.chromeExtensionData.detail.sendMessage == \"Empty\") {\n        var obj = {\n          no1: 1,\n          emailId1: \"emailId\",\n          privateKey1: \"privateKey\"\n        };\n        var stringObj = JSON.stringify(obj); /////////********************** */\n\n        var event = document.createEvent('Event');\n        var event = new CustomEvent(\"newMessage\", {\n          detail: {\n            message: \"Hello World!\",\n            time: new Date(),\n            name: \"Rutvik Patel\",\n            emailId: \"rpatel@csus.edu\",\n            privateKeyData: stringObj\n          },\n          bubbles: true,\n          cancelable: true\n        });\n        document.addEventListener(\"hello\", function (event) {\n          // (1)\n          console.log(\"check\"); // Hello from H1\n        });\n        console.log(event);\n        event.initEvent('hello');\n        document.dispatchEvent(event); ///******************** */\n      } else {\n        console.log(_this.state.chromeExtensionData.detail.privateKeyData);\n        console.log(\"In else\");\n        var dataComingFromChromeExtension = _this.state.chromeExtensionData.detail.privateKeyData;\n        var obj = JSON.parse(dataComingFromChromeExtension);\n        var keys = [];\n\n        for (var k in obj) {\n          'a nice string'.includes('nice');\n\n          if (k.includes('no')) {\n            keys.push(k);\n          }\n        }\n\n        var length = keys.length;\n        length++;\n        var no = \"no\" + length;\n        var emailId = \"emailId\" + length;\n        var privateKey = \"privateKey\" + length;\n        obj[no] = \"new email\";\n        obj[emailId] = \"new EmailID\";\n        obj[privateKey] = \"private key\";\n        console.log(obj);\n      }\n    };\n\n    _this.privateKeySaveFunction = function (privateKey, userEmailId) {\n      if (_this.state.chromeExtensionData.detail.sendMessage == \"Empty\") {\n        var obj = {\n          no1: 1,\n          emailId1: userEmailId,\n          privateKey1: privateKey\n        };\n        var stringObj = JSON.stringify(obj); /////////********************** */\n\n        var event = document.createEvent('Event');\n        var event = new CustomEvent(\"newMessage\", {\n          detail: {\n            message: \"Hello World!\",\n            time: new Date(),\n            name: \"Rutvik Patel\",\n            emailId: \"rpatel@csus.edu\",\n            privateKeyData: stringObj\n          },\n          bubbles: true,\n          cancelable: true\n        });\n        document.addEventListener(\"hello\", function (event) {\n          // (1)\n          console.log(\"check\"); // Hello from H1\n        });\n        console.log(event);\n        event.initEvent('hello');\n        document.dispatchEvent(event); ///******************** */\n      } else {}\n    };\n\n    _this.handleClick2 = function () {\n      /////////\n      console.log(\"In message\");\n      var publicKey;\n      var privateKey;\n      console.log(\"Before function\");\n      var firstName = document.getElementById(\"firstName\").value;\n      var lastName = document.getElementById(\"lastName\").value;\n      var emailId = document.getElementById(\"emailId\").value;\n      var password = document.getElementById(\"password\").value;\n      var fullName = firstName + \" \" + lastName;\n\n      _this.setState({\n        userEmailId: emailId\n      });\n\n      var myObj = {\n        \"firstName\": firstName,\n        \"lastName\": lastName,\n        \"fullName\": fullName,\n        \"password\": password,\n        \"emailId\": emailId,\n        profilePicHash: '',\n        requestNotAccepted: [],\n        request: [],\n        memberOfGroup: [],\n        ownerOfGroup: [],\n        friend: []\n      }; //This is the the data which is enter by the user \n\n      var userInformationHash;\n      console.log(myObj);\n\n      _this.pausecomp(500);\n\n      console.log(_this.state.chromeExtensionData);\n      var originalContentString = Buffer.from(JSON.stringify(myObj)); // The json is change to string format \n\n      var userContent = {\n        content: originalContentString\n      };\n      ipfs.add(userContent, function (error, results) {\n        console.log(results);\n        userInformationHash = results[0].hash;\n\n        _this.setState({\n          IPFSuserInformationHash: results[0].hash\n        });\n\n        var publicKey = '';\n        var privateKey = '';\n        rsa.generateKeyPairAsync().then(function (keyPair) {\n          publicKey = keyPair.publicKey;\n          privateKey = keyPair.privateKey;\n\n          _this.setState({\n            publicKey: publicKey\n          });\n\n          _this.setState({\n            privateKey: privateKey\n          });\n\n          console.log(publicKey); ///code to save private key to chrome extension \n\n          _this.privateKeySaveFunction(privateKey, _this.state.userEmailId); ////end of the logic \n\n\n          _this.state.contract.methods.addUser(_this.state.userEmailId, userInformationHash, publicKey).send({\n            from: _this.state.account\n          }).then(function (r) {\n            console.log(r);\n          });\n        });\n      });\n    };\n\n    _this.Login = function () {\n      console.log(\"in login\");\n\n      _this.props.history.push({\n        pathname: '/login'\n      });\n    };\n\n    _this.state = {\n      account: '',\n      buffer: null,\n      Contract: null,\n      userInformationHash: '',\n      userEmailId: '',\n      IPFSuserInformationHash: '',\n      publicKey: '',\n      privateKey: '',\n      chromeExtensionData: null,\n      privateKeySaverData: []\n    };\n    return _this;\n  }\n\n  _createClass(register, [{\n    key: \"loadWeb3\",\n    value: function () {\n      var _loadWeb = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!window.ethereum) {\n                  _context3.next = 4;\n                  break;\n                }\n\n                window.web3 = new Web3(window.ethereum);\n                _context3.next = 4;\n                return window.ethereum.enable();\n\n              case 4:\n                if (window.web3) {\n                  window.web3 = new Web3(window.web3.currentProvider);\n                } else {\n                  window.alert(\"Please use metamask\");\n                }\n\n              case 5:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function loadWeb3() {\n        return _loadWeb.apply(this, arguments);\n      }\n\n      return loadWeb3;\n    }()\n  }, {\n    key: \"loadBlockChainData\",\n    value: function () {\n      var _loadBlockChainData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4() {\n        var web3_2, accounts, networkId, networkdata, abi, address, contract;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                console.log(\"load Blockchain load data\");\n                web3_2 = window.web3;\n                _context4.next = 4;\n                return web3_2.eth.getAccounts();\n\n              case 4:\n                accounts = _context4.sent;\n                console.log(accounts);\n                this.setState({\n                  account: accounts[0]\n                });\n                console.log(this.state);\n                _context4.next = 10;\n                return web3_2.eth.net.getId();\n\n              case 10:\n                networkId = _context4.sent;\n                console.log(networkId);\n                networkdata = Meme.networks[networkId];\n\n                if (networkdata) {\n                  abi = Meme.abi;\n                  address = networkdata.address; //fetch the contract \n\n                  contract = web3_2.eth.Contract(abi, address);\n                  console.log(contract);\n                  this.setState({\n                    contract: contract\n                  });\n                  console.log(contract.methods); //  const MemeHash =await contract.methods.get().call();\n                  // console.log(MemeHash);\n                } else {\n                  window.alert(\"Smart contract not deployed to detected the network\");\n                }\n\n              case 14:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function loadBlockChainData() {\n        return _loadBlockChainData.apply(this, arguments);\n      }\n\n      return loadBlockChainData;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(this.state.IPFSuserInformationHash);\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      }, React.createElement(\"nav\", {\n        className: \"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293\n        },\n        __self: this\n      }), React.createElement(MDBCol, {\n        md: \"6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294\n        },\n        __self: this\n      }, React.createElement(MDBInput, {\n        hint: \"Search Friend\",\n        type: \"text\",\n        containerClass: \"active-pink active-pink-2 mt-0 mb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      }))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        },\n        __self: this\n      }), React.createElement(Jumbotron, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302\n        },\n        __self: this\n      }, \"Hello, Bob!\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304\n        },\n        __self: this\n      }, \"Add Post\"))), React.createElement(BrowserRouter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307\n        },\n        __self: this\n      }, React.createElement(Route, {\n        path: \"/Feed\",\n        component: Feed,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308\n        },\n        __self: this\n      })), React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312\n        },\n        __self: this\n      }, \"Feeds\"), React.createElement(Card, {\n        style: {\n          padding: \"50px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316\n        },\n        __self: this\n      }, React.createElement(Card.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317\n        },\n        __self: this\n      }, \"Jon Snow\"), React.createElement(Card.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318\n        },\n        __self: this\n      }, React.createElement(Card.Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319\n        },\n        __self: this\n      }, \"Nice day at pier 39 #SF #LovelyDay\")), React.createElement(Card.Img, {\n        variant: \"bottom\",\n        src: \"https://ipfs.infura.io/ipfs/Qmd16beEoC2jhSk8nE5otsk3D1iUxu1pJg6n4ePwXwhwA9\",\n        style: {\n          height: \"100%\",\n          width: \"300px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323\n        },\n        __self: this\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326\n        },\n        __self: this\n      }), React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327\n        },\n        __self: this\n      }, React.createElement(Card.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328\n        },\n        __self: this\n      }, \"Sam Williams\"), React.createElement(Card.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329\n        },\n        __self: this\n      }, React.createElement(Card.Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330\n        },\n        __self: this\n      }, \"Seeing the world in my way\")), React.createElement(Card.Img, {\n        variant: \"bottom\",\n        src: \"https://scontent.fsac1-2.fna.fbcdn.net/v/t1.0-9/19989657_126715001262499_1058883775878964603_n.jpg?_nc_cat=103&_nc_sid=09cbfe&_nc_ohc=Ln4kT3-N6fUAX9pPfJz&_nc_ht=scontent.fsac1-2.fna&oh=43ef6468bf97e51a37af2b810060bfa6&oe=5E963516\",\n        style: {\n          height: \"100%\",\n          width: \"300px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334\n        },\n        __self: this\n      })), React.createElement(Card.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336\n        },\n        __self: this\n      }, React.createElement(Card.Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337\n        },\n        __self: this\n      }))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341\n        },\n        __self: this\n      }), React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        controlId: \"formBasicEmail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344\n        },\n        __self: this\n      }, \"First Name\"), React.createElement(Form.Control, {\n        type: \"text\",\n        id: \"firstName\",\n        placeholder: \"Enter First Name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        controlId: \"formBasicEmail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348\n        },\n        __self: this\n      }, \"Last Name\"), React.createElement(Form.Control, {\n        type: \"text\",\n        id: \"lastName\",\n        placeholder: \"Enter Last Name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        controlId: \"formBasicEmail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353\n        },\n        __self: this\n      }, \"Email address\"), React.createElement(Form.Control, {\n        type: \"email\",\n        id: \"emailId\",\n        placeholder: \"Enter email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        controlId: \"formBasicEmail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357\n        },\n        __self: this\n      }, \"Password\"), React.createElement(Form.Control, {\n        type: \"password\",\n        id: \"password\",\n        placeholder: \"Enter password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358\n        },\n        __self: this\n      })), React.createElement(Button, {\n        variant: \"primary\",\n        type: \"button\",\n        id: \"RegisterUser\",\n        onClick: this.handleClick3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364\n        },\n        __self: this\n      }, \"Register\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365\n        },\n        __self: this\n      }), React.createElement(Form.Text, {\n        className: \"text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367\n        },\n        __self: this\n      }, \"If you are already register\"), React.createElement(Button, {\n        variant: \"primary\",\n        type: \"button\",\n        onClick: this.Login,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 370\n        },\n        __self: this\n      }, \"Login\")));\n    }\n  }]);\n\n  return register;\n}(Component);\n\nexport default register;","map":{"version":3,"sources":["/Users/rutvikpatel/Desktop/Project/BlockChainApp/BlockChainWithIPFS/starter_kit/src/components/register.js"],"names":["React","Component","Web3","BrowserRouter","Route","Jumbotron","Meme","MDBCol","MDBInput","Crypt","RSA","Feed","Form","Button","FormGroup","FormControl","ControlLabel","Card","ButtonToolbar","ipfsClient","require","ipfs","host","port","protocol","crypt","rsa","register","document","addEventListener","checkEvent","loadWeb3","loadBlockChainData","props","event","data","detail","console","log","setState","chromeExtensionData","state","test","message","encrypted","encrypt","publicKey","decrypted","decrypt","privateKey","pausecomp","millis","date","Date","curDate","handleClick3","sendMessage","obj","no1","emailId1","privateKey1","stringObj","JSON","stringify","createEvent","CustomEvent","time","name","emailId","privateKeyData","bubbles","cancelable","initEvent","dispatchEvent","dataComingFromChromeExtension","parse","keys","k","includes","push","length","no","privateKeySaveFunction","userEmailId","handleClick2","firstName","getElementById","value","lastName","password","fullName","myObj","profilePicHash","requestNotAccepted","request","memberOfGroup","ownerOfGroup","friend","userInformationHash","originalContentString","Buffer","from","userContent","content","add","error","results","hash","IPFSuserInformationHash","generateKeyPairAsync","then","keyPair","contract","methods","addUser","send","account","r","Login","history","pathname","buffer","Contract","privateKeySaverData","window","ethereum","web3","enable","currentProvider","alert","web3_2","eth","getAccounts","accounts","net","getId","networkId","networkdata","networks","abi","address","padding","height","width"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n//import logo from '../logo.png';\nimport Web3 from 'web3';\nimport {BrowserRouter,Route} from 'react-router-dom';\nimport Jumbotron from 'react-bootstrap/Jumbotron'\nimport './App.css';\nimport Meme from '../abis/Meme.json';\nimport { MDBCol, MDBInput } from \"mdbreact\";\nimport { Crypt, RSA } from 'hybrid-crypto-js';\nimport Feed  from './Feed.js';\nimport { Form, Button, FormGroup, FormControl, ControlLabel,Card,ButtonToolbar } from \"react-bootstrap\";\n\nvar ipfsClient = require('ipfs-http-client');\nvar ipfs = ipfsClient({host:'ipfs.infura.io',port:'5001',protocol: 'https' }) ;\nvar crypt = new Crypt();\nvar rsa = new RSA();\n\nclass register extends Component {\n\n    async componentWillMount(){\n      document.addEventListener('csEvent', this.checkEvent);\n      await this.loadWeb3();\n      await this.loadBlockChainData();\n    }\n    async componentDidMount(){\n      document.addEventListener('csEvent', this.checkEvent);\n    }\n\n\n    constructor(props){\n      super(props);\n      this.state={\n        account:'',\n        buffer:null,\n        Contract:null,\n        userInformationHash:'',\n        userEmailId:'',\n        IPFSuserInformationHash:'',\n        publicKey:'',\n        privateKey:'',\n        chromeExtensionData:null,\n        privateKeySaverData:[]\n      };\n    }\n\n    checkEvent = (event) => {\n      var data = event.detail;\n      console.log(data);\n      this.setState({chromeExtensionData:event});\n      console.log(\"Nv Enter:\", event);\n      console.log(this.state.chromeExtensionData);\n      }\n    async loadWeb3(){\n      if(window.ethereum){\n        window.web3 =new Web3(window.ethereum);\n        await window.ethereum.enable();\n      }\n      if(window.web3){\n        window.web3 = new Web3(window.web3.currentProvider);\n      }\n      else{\n        window.alert(\"Please use metamask\");\n      }\n    }\n\n\n    async loadBlockChainData(){\n        console.log(\"load Blockchain load data\");\n        const web3_2 = window.web3;\n        const accounts =  await web3_2.eth.getAccounts();\n        console.log(accounts);\n        this.setState({account:accounts[0]});\n        console.log(this.state);\n        const networkId = await web3_2.eth.net.getId();\n        console.log(networkId);\n        const networkdata= Meme.networks[networkId];\n        if(networkdata){\n          const abi =Meme.abi;\n          const address = networkdata.address;\n          //fetch the contract \n          const contract = web3_2.eth.Contract(abi,address);\n          console.log(contract);\n          this.setState({contract:contract});\n          console.log(contract.methods);\n        //  const MemeHash =await contract.methods.get().call();\n         // console.log(MemeHash);\n        }\n        else{\n          window.alert(\"Smart contract not deployed to detected the network\");\n        }\n      }\n      \n      test=()=>{\n        console.log(\"in test\");\n        var message = 'Rutvik Patel is waiting for';\n        // Encryption with one public RSA key\n        var encrypted  = crypt.encrypt(this.state.publicKey, message);\n        console.log(encrypted );\n        console.log(\"After encry\");\n        var decrypted = crypt.decrypt(this.state.privateKey, encrypted);\n        // Get decrypted message\n        console.log(\"before\");\n        var message = decrypted.message;\n        console.log(message);\n        console.log(\"After decry\");\n      }\n\n\n\n    pausecomp=(millis)=>{\n      var date = new Date();\n      var curDate = null;\n      do { curDate = new Date(); }\n      while(curDate-date < millis);\n     }\n     handleClick3 = () => {\n       console.log(this.state.chromeExtensionData.detail.sendMessage);\n       if(this.state.chromeExtensionData.detail.sendMessage==\"Empty\"){\n         var obj={\n            no1:1,\n           emailId1:\"emailId\",\n           privateKey1:\"privateKey\"\n         }\n         var stringObj=JSON.stringify(obj);     \n         /////////********************** */\n         var event = document.createEvent('Event');\n          var event = new CustomEvent(\n          \"newMessage\", \n          {\n            detail: {\n              message: \"Hello World!\",\n              time: new Date(),\n              name:\"Rutvik Patel\",\n              emailId:\"rpatel@csus.edu\",\n              privateKeyData:stringObj\n            },\n            bubbles: true,\n            cancelable: true\n          }\n        )\n     document.addEventListener(\"hello\", function(event) { // (1)\n       console.log(\"check\"); // Hello from H1\n     });\n     console.log(event);\n     event.initEvent('hello');\n     document.dispatchEvent(event);\n     ///******************** */\n       }\n       else{\n        console.log(this.state.chromeExtensionData.detail.privateKeyData)\n        console.log(\"In else\")\n        var dataComingFromChromeExtension=this.state.chromeExtensionData.detail.privateKeyData;\n        var obj = JSON.parse(dataComingFromChromeExtension);\n        var keys = [];\n        for(var k in obj) \n        {\n          'a nice string'.includes('nice') \n          if(k.includes('no')){\n            keys.push(k);\n          }\n        }\n        var length= keys.length;\n        length++;\n        var no=\"no\"+length;\n        var emailId=\"emailId\"+length;\n        var privateKey=\"privateKey\"+length;\n        obj[no]=\"new email\";\n        obj[emailId]=\"new EmailID\";\n        obj[privateKey]=\"private key\";\n        console.log(obj);\n       }\n\n     }\n\n\n     privateKeySaveFunction=(privateKey,userEmailId)=>{\n      if(this.state.chromeExtensionData.detail.sendMessage==\"Empty\"){\n        var obj={\n           no1:1,\n          emailId1:userEmailId,\n          privateKey1:privateKey\n        }\n        var stringObj=JSON.stringify(obj);     \n        /////////********************** */\n        var event = document.createEvent('Event');\n         var event = new CustomEvent(\n         \"newMessage\", \n         {\n           detail: {\n             message: \"Hello World!\",\n             time: new Date(),\n             name:\"Rutvik Patel\",\n             emailId:\"rpatel@csus.edu\",\n             privateKeyData:stringObj\n           },\n           bubbles: true,\n           cancelable: true\n         }\n       )\n    document.addEventListener(\"hello\", function(event) { // (1)\n      console.log(\"check\"); // Hello from H1\n    });\n    console.log(event);\n    event.initEvent('hello');\n    document.dispatchEvent(event);\n    ///******************** */\n      }\n      else{\n\n      }\n     }\n\n\n     handleClick2 = () => {\n        /////////\n        console.log(\"In message\");\n        var publicKey;\n        var privateKey;\n        console.log(\"Before function\");\n        var firstName=document.getElementById(\"firstName\").value;\n        var lastName =document.getElementById(\"lastName\").value;\n        var emailId = document.getElementById(\"emailId\").value;\n        var password = document.getElementById(\"password\").value;\n        var fullName=firstName+\" \"+lastName;\n        this.setState({userEmailId:emailId});\n        var myObj = {\n            \"firstName\":firstName,\n            \"lastName\":lastName,\n            \"fullName\":fullName,\n            \"password\":password,\n            \"emailId\":emailId,\n            profilePicHash:'',\n            requestNotAccepted:[],\n            request:[],\n            memberOfGroup:[],\n            ownerOfGroup:[],\n            friend:[]\n          };\n        //This is the the data which is enter by the user \n        var userInformationHash;\n        console.log(myObj);\n        this.pausecomp(500);\n        console.log(this.state.chromeExtensionData);\n        var originalContentString = Buffer.from(JSON.stringify(myObj));\n          // The json is change to string format \n          const userContent= {\n            content:originalContentString\n        }\n       \n         ipfs.add(userContent,(error,results)=>{\n              console.log(results);\n              userInformationHash= results[0].hash;\n              this.setState({IPFSuserInformationHash:results[0].hash}); \n            \n              var publicKey = '';\n              var privateKey ='';\n              rsa.generateKeyPairAsync().then(keyPair => {\n                \n                 publicKey = keyPair.publicKey;\n                 privateKey = keyPair.privateKey;\n                 this.setState({ publicKey : publicKey });\n                 this.setState({ privateKey :  privateKey });\n                 console.log( publicKey);\n                ///code to save private key to chrome extension \n\n                this.privateKeySaveFunction(privateKey,this.state.userEmailId);\n\n                  ////end of the logic \n                 this.state.contract.methods.addUser(this.state.userEmailId,userInformationHash,publicKey).send({from: this.state.account}).then((r)=>{\n                    console.log(r);\n                });  \n            });      \n            });\n      }\n\n\n\n\n     Login=()=>{\n       console.log(\"in login\")\n          this.props.history.push({\n          pathname: '/login',\n        })\n     }\n\n    render() {\n      console.log(this.state.IPFSuserInformationHash);\n    return (\n\n      <div className=\"container\">\n        <nav className=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\n          <br></br>\n        <br></br>\n        <MDBCol md=\"6\">\n         <MDBInput hint=\"Search Friend\" type=\"text\" containerClass=\"active-pink active-pink-2 mt-0 mb-3\" />\n      </MDBCol>\n      </nav>\n        <br></br>\n        <br></br>\n     \n      <Jumbotron>\n        <h4>Hello, Bob!</h4>\n        <p>\n          <Button variant=\"primary\">Add Post</Button>\n        </p>\n      </Jumbotron>\n         <BrowserRouter>\n         <Route path='/Feed' component={Feed}></Route>\n         </BrowserRouter>\n    \n\n<h4>Feeds</h4>\n    <Card    style={{padding: \"50px\" }} >\n    {/* <Card.Header>Rutvik Patel</Card.Header> */}\n    {/* <Card.Img variant=\"top\" src= {`https://ipfs.infura.io/ipfs/${this.state.memHash}`}   style={{height: \"100%\",  width:\"300px\" }}   /> */}\n    <Card>\n  <Card.Header>Jon Snow</Card.Header>\n    <Card.Body>\n      <Card.Text>\n        Nice day at pier 39 #SF #LovelyDay\n      </Card.Text>\n    </Card.Body>\n    <Card.Img variant=\"bottom\" src=\"https://ipfs.infura.io/ipfs/Qmd16beEoC2jhSk8nE5otsk3D1iUxu1pJg6n4ePwXwhwA9\" style={{height: \"100%\",  width:\"300px\" }}/>\n  </Card>\n\n<br></br>\n  <Card>\n  <Card.Header>Sam Williams</Card.Header>\n    <Card.Body>\n      <Card.Text>\n        Seeing the world in my way\n      </Card.Text>\n    </Card.Body>\n    <Card.Img variant=\"bottom\" src=\"https://scontent.fsac1-2.fna.fbcdn.net/v/t1.0-9/19989657_126715001262499_1058883775878964603_n.jpg?_nc_cat=103&_nc_sid=09cbfe&_nc_ohc=Ln4kT3-N6fUAX9pPfJz&_nc_ht=scontent.fsac1-2.fna&oh=43ef6468bf97e51a37af2b810060bfa6&oe=5E963516\" style={{height: \"100%\",  width:\"300px\" }}/>\n  </Card>\n    <Card.Body>\n      <Card.Text>\n      </Card.Text>\n    </Card.Body>\n  </Card>\n  <br />\n  <Form>\n            <Form.Group controlId=\"formBasicEmail\">\n                      <Form.Label>First Name</Form.Label>\n                      <Form.Control type=\"text\" id=\"firstName\"  placeholder=\"Enter First Name\" />\n              </Form.Group>\n              <Form.Group controlId=\"formBasicEmail\">\n                      <Form.Label>Last Name</Form.Label>\n                      <Form.Control type=\"text\" id=\"lastName\" placeholder=\"Enter Last Name\" />\n              </Form.Group>\n    \n              <Form.Group controlId=\"formBasicEmail\">\n                      <Form.Label>Email address</Form.Label>\n                      <Form.Control type=\"email\" id=\"emailId\" placeholder=\"Enter email\" />\n              </Form.Group>\n              <Form.Group controlId=\"formBasicEmail\">\n                      <Form.Label>Password</Form.Label>\n                      <Form.Control type=\"password\" id=\"password\" placeholder=\"Enter password\" />\n              </Form.Group>\n              {/* <Form.Group controlId=\"formBasicPassword\">\n                <Form.Label>Password</Form.Label>\n                <Form.Control type=\"password\" placeholder=\"Password\" />\n              </Form.Group> */}\n               <Button variant=\"primary\" type=\"button\" id=\"RegisterUser\" onClick={this.handleClick3}>Register</Button>\n               <br>\n               </br>\n               <Form.Text className=\"text-muted\">\n                     If you are already register \n                </Form.Text>\n               <Button variant=\"primary\" type=\"button\" onClick={this.Login}>Login</Button>\n               {/* <Button variant=\"primary\" type=\"button\" onClick={this.test}>Login</Button> */}\n               {/* <Button variant=\"primary\" type=\"button\" id=\"NewButton\" onClick={this.Message}>NewButton</Button> */}\n            </Form>\n      </div>\n    );\n  }\n}\n\nexport default register;\n"]},"metadata":{},"sourceType":"module"}