{"ast":null,"code":"import _regeneratorRuntime from \"/Users/rutvikpatel/Desktop/Project/BlockChainApp/BlockChainWithIPFS/starter_kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/rutvikpatel/Desktop/Project/BlockChainApp/BlockChainWithIPFS/starter_kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/rutvikpatel/Desktop/Project/BlockChainApp/BlockChainWithIPFS/starter_kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/Users/rutvikpatel/Desktop/Project/BlockChainApp/BlockChainWithIPFS/starter_kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rutvikpatel/Desktop/Project/BlockChainApp/BlockChainWithIPFS/starter_kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"/Users/rutvikpatel/Desktop/Project/BlockChainApp/BlockChainWithIPFS/starter_kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/rutvikpatel/Desktop/Project/BlockChainApp/BlockChainWithIPFS/starter_kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/rutvikpatel/Desktop/Project/BlockChainApp/BlockChainWithIPFS/starter_kit/src/components/App.js\";\nimport React, { Component } from 'react'; //import logo from '../logo.png';\n\nimport Web3 from 'web3';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport './App.css';\nimport Meme from '../abis/Meme.json';\nimport { MDBCol, MDBInput } from \"mdbreact\";\nimport Feed from './Feed.js';\nimport { Form, Button, FormGroup, FormControl, ControlLabel, Card, ButtonToolbar } from \"react-bootstrap\";\n\nvar ipfsClient = require('ipfs-http-client');\n\nvar ipfs = ipfsClient({\n  host: 'ipfs.infura.io',\n  port: '5001',\n  protocol: 'https'\n});\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function () {\n      var _componentWillMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.loadWeb3();\n\n              case 2:\n                _context.next = 4;\n                return this.loadBlockChainData();\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentWillMount() {\n        return _componentWillMount.apply(this, arguments);\n      }\n\n      return componentWillMount;\n    }() // Get the account \n    // Get the network\n    // Get Smart contract\n    // Get the Meme Hash \n\n  }, {\n    key: \"loadBlockChainData\",\n    value: function () {\n      var _loadBlockChainData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var web3, accounts, networkId, networkData;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                web3 = window.web3;\n                _context2.next = 3;\n                return web3.eth.getAccounts();\n\n              case 3:\n                accounts = _context2.sent;\n                console.log(accounts);\n                this.setState({\n                  account: accounts[0]\n                });\n                _context2.next = 8;\n                return web3.eth.net.getId();\n\n              case 8:\n                networkId = _context2.sent;\n                networkData = Meme.networks[networkId];\n                console.log(networkId); // if(networkId){\n                //   //Fetch the smart contract\n                //   const abi = Meme.abi;\n                //   const address = networkData.address;\n                //   const contract = web3.eth.Contract(abi,address);\n                //   this.setState({contract:contract})\n                //   console.log(contract );\n                //   const memHash = await contract.methods.get().call();\n                //   console.log(memHash );\n                //   this.setState({memeHash:memHash})\n                // }\n                // else{\n                //   window.alert(\"smart contract nor deployed to dected network\");\n                // }\n\n              case 11:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function loadBlockChainData() {\n        return _loadBlockChainData.apply(this, arguments);\n      }\n\n      return loadBlockChainData;\n    }()\n  }]);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.handleClick = captureFile = function captureFile(event) {\n      event.preventDefault();\n      console.log(\"file is capture\");\n      console.log(event);\n      console.log(event.target.files[0]);\n      var file = event.target.files[0];\n      var reader = new window.FileReader();\n      reader.readAsArrayBuffer(file);\n\n      reader.onloadend = function () {\n        _this.setState({\n          buffer: Buffer(reader.result)\n        });\n\n        console.log(\"buffer\", Buffer(reader.result));\n      }; //process the file inside here \n\n    };\n\n    _this.onSubmit = function (event) {\n      event.preventDefault();\n      console.log(\"in submit event\");\n      var name = \"Rutvik\";\n      var myObj = {\n        \"name\": \"John\",\n        \"age\": 30,\n        \"cars\": {\n          \"car1\": \"Ford\",\n          \"car2\": \"BMW\",\n          \"car3\": \"Fiat\"\n        }\n      };\n      ipfs.add(myObj, function (error, results) {\n        //Do Stuff here\n        //console.log(\"IPFS RESULT\",results[0].hash);\n        console.log(results);\n        console.log(error);\n        var hash = results[0].hash;\n\n        if (error) {\n          console.log(error);\n          return;\n        } //Step 2 is to store file on blockchain\n\n\n        _this.filesrc = \"https://ipfs.infura.io/ipfs/\" + hash;\n        console.log(_this.filesrc);\n        ipfs.get(hash, function (error, result) {\n          console.log(result);\n          var y = ipfs.getReadableStream('QmNZNHWxYqPY57bodafqkzqmXYVu9LE3FteJhMmZGBackw');\n          console.log(y);\n        });\n        console.log(\"after cal back\");\n\n        _this.setState({\n          memHash: hash\n        });\n      });\n    };\n\n    _this.state = {\n      account: '',\n      buffer: null,\n      Contract: null,\n      memHash: 'QmNZNHWxYqPY57bodafqkzqmXYVu9LE3FteJhMmZGBackw'\n    };\n    _this.filesrc = \"\";\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"loadWeb3\",\n    value: function () {\n      var _loadWeb = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!window.ethereum) {\n                  _context3.next = 4;\n                  break;\n                }\n\n                window.web3 = new Web3(window.ethereum);\n                _context3.next = 4;\n                return window.ethereum.enable();\n\n              case 4:\n                if (window.web3) {\n                  window.web3 = new Web3(window.web3.currentProvider);\n                } else {\n                  window.alert(\"Please use metamask\");\n                } // console.log(Web3);\n                // var d=new Web3.providers.HttpProvider('http://127.0.0.1:7545');\n                // new Web3(d);\n                // console.log(Web3.eth);\n\n\n              case 5:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function loadWeb3() {\n        return _loadWeb.apply(this, arguments);\n      }\n\n      return loadWeb3;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var lists = [];\n      var y = \"QmYah59VfHQTNPnhk1f5hwnVqkxRC6CB9xvMjzLro9VBsw\";\n      lists[0] = y;\n      var y2 = \"QmNZNHWxYqPY57bodafqkzqmXYVu9LE3FteJhMmZGBackw\";\n      lists[1] = y2; // const listItems = lists.map((list) =>\n      // <li>\n      //   {list}\n      //   <Button type=\"button\" class=\"btn btn-default btn-sm\"    \n      //   onClick={() => this.open(list)}>\n      //   Accept\n      //   </Button>\n      //   <br></br>\n      //   </li>\n      // );\n\n      var images = lists.map(function (image) {\n        return React.createElement(Card, {\n          style: {\n            padding: \"50px\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 184\n          },\n          __self: this\n        }, React.createElement(Card.Header, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 185\n          },\n          __self: this\n        }, \"Rutvik Patel\"), React.createElement(Card.Img, {\n          variant: \"top\",\n          src: \"https://ipfs.infura.io/ipfs/\".concat(image),\n          style: {\n            height: \"100%\",\n            width: \"300px\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 186\n          },\n          __self: this\n        }), image, React.createElement(Card.Body, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 188\n          },\n          __self: this\n        }, React.createElement(Card.Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 189\n          },\n          __self: this\n        })));\n      });\n      var contacts = [{\n        name: 'Rutvik',\n        phone: '224567890'\n      }, {\n        name: 'Smit',\n        phone: '2248175374'\n      }, {\n        name: 'Suraj',\n        phone: '9167843536'\n      }, {\n        name: 'Jef',\n        phone: '9837363739'\n      }];\n      console.log(contacts);\n      var listItems = contacts.map(function (contact) {\n        return React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 219\n          },\n          __self: this\n        }, contact.name);\n      });\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, React.createElement(\"nav\", {\n        className: \"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }), React.createElement(MDBCol, {\n        md: \"6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, React.createElement(MDBInput, {\n        hint: \"Search Friend\",\n        type: \"text\",\n        containerClass: \"active-pink active-pink-2 mt-0 mb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }), React.createElement(Jumbotron, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, \"Hello, Bob!\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, \"Add Post\"))), React.createElement(BrowserRouter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, React.createElement(Route, {\n        path: \"/Feed\",\n        component: Feed,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      })), React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292\n        },\n        __self: this\n      }, \"Feeds\"), React.createElement(Card, {\n        style: {\n          padding: \"50px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      }, React.createElement(Card.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297\n        },\n        __self: this\n      }, \"Jon Snow\"), React.createElement(Card.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      }, React.createElement(Card.Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        },\n        __self: this\n      }, \"Nice day at pier 39 #SF #LovelyDay\")), React.createElement(Card.Img, {\n        variant: \"bottom\",\n        src: \"https://ipfs.infura.io/ipfs/Qmd16beEoC2jhSk8nE5otsk3D1iUxu1pJg6n4ePwXwhwA9\",\n        style: {\n          height: \"100%\",\n          width: \"300px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303\n        },\n        __self: this\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306\n        },\n        __self: this\n      }), React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307\n        },\n        __self: this\n      }, React.createElement(Card.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308\n        },\n        __self: this\n      }, \"Sam Williams\"), React.createElement(Card.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309\n        },\n        __self: this\n      }, React.createElement(Card.Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310\n        },\n        __self: this\n      }, \"Seeing the world in my way\")), React.createElement(Card.Img, {\n        variant: \"bottom\",\n        src: \"https://scontent.fsac1-2.fna.fbcdn.net/v/t1.0-9/19989657_126715001262499_1058883775878964603_n.jpg?_nc_cat=103&_nc_sid=09cbfe&_nc_ohc=Ln4kT3-N6fUAX9pPfJz&_nc_ht=scontent.fsac1-2.fna&oh=43ef6468bf97e51a37af2b810060bfa6&oe=5E963516\",\n        style: {\n          height: \"100%\",\n          width: \"300px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314\n        },\n        __self: this\n      })), React.createElement(Card.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316\n        },\n        __self: this\n      }, React.createElement(Card.Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317\n        },\n        __self: this\n      }))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321\n        },\n        __self: this\n      }), React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        controlId: \"formBasicEmail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324\n        },\n        __self: this\n      }, \"First Name\"), React.createElement(Form.Control, {\n        type: \"text\",\n        id: \"firstName\",\n        placeholder: \"Enter First Name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        controlId: \"formBasicEmail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328\n        },\n        __self: this\n      }, \"Last Name\"), React.createElement(Form.Control, {\n        type: \"text\",\n        id: \"lastName\",\n        placeholder: \"Enter Last Name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        controlId: \"formBasicEmail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333\n        },\n        __self: this\n      }, \"Email address\"), React.createElement(Form.Control, {\n        type: \"email\",\n        id: \"emailId\",\n        placeholder: \"Enter email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        controlId: \"formBasicEmail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337\n        },\n        __self: this\n      }, \"Password\"), React.createElement(Form.Control, {\n        type: \"password\",\n        id: \"password\",\n        placeholder: \"Enter password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338\n        },\n        __self: this\n      })), React.createElement(Button, {\n        variant: \"primary\",\n        type: \"button\",\n        id: \"RegisterUser\",\n        onClick: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344\n        },\n        __self: this\n      }, \"Register\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345\n        },\n        __self: this\n      }), React.createElement(Form.Text, {\n        className: \"text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347\n        },\n        __self: this\n      }, \"If you are already register\"), React.createElement(Button, {\n        variant: \"primary\",\n        type: \"button\",\n        onClick: this.SignIn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350\n        },\n        __self: this\n      }, \"Login\")));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/rutvikpatel/Desktop/Project/BlockChainApp/BlockChainWithIPFS/starter_kit/src/components/App.js"],"names":["React","Component","Web3","BrowserRouter","Route","Jumbotron","Meme","MDBCol","MDBInput","Feed","Form","Button","FormGroup","FormControl","ControlLabel","Card","ButtonToolbar","ipfsClient","require","ipfs","host","port","protocol","App","loadWeb3","loadBlockChainData","web3","window","eth","getAccounts","accounts","console","log","setState","account","net","getId","networkId","networkData","networks","props","handleClick","captureFile","event","preventDefault","target","files","file","reader","FileReader","readAsArrayBuffer","onloadend","buffer","Buffer","result","onSubmit","name","myObj","add","error","results","hash","filesrc","get","y","getReadableStream","memHash","state","Contract","ethereum","enable","currentProvider","alert","lists","y2","images","map","image","padding","height","width","contacts","phone","listItems","contact","SignIn"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n//import logo from '../logo.png';\nimport Web3 from 'web3';\nimport {BrowserRouter,Route} from 'react-router-dom';\nimport Jumbotron from 'react-bootstrap/Jumbotron'\nimport './App.css';\nimport Meme from '../abis/Meme.json';\nimport { MDBCol, MDBInput } from \"mdbreact\";\n\nimport Feed  from './Feed.js';\nimport { Form, Button, FormGroup, FormControl, ControlLabel,Card,ButtonToolbar } from \"react-bootstrap\";\nvar ipfsClient = require('ipfs-http-client');\nvar ipfs = ipfsClient({host:'ipfs.infura.io',port:'5001',protocol: 'https' }) ;\n\nclass App extends Component {\n\n\n    async componentWillMount(){\n      await this.loadWeb3();\n      await this.loadBlockChainData();\n\n\n \n\n    }\n\n    // Get the account \n    // Get the network\n    // Get Smart contract\n    // Get the Meme Hash \n\n \n    async loadBlockChainData(){\n      var web3 = window.web3;\n      var accounts = await web3.eth.getAccounts();\n      console.log(accounts);\n      this.setState({account:accounts[0]})\n      const networkId= await web3.eth.net.getId();\n      const networkData =Meme.networks[networkId];\n      console.log(networkId);\n\n      // if(networkId){\n      //   //Fetch the smart contract\n      //   const abi = Meme.abi;\n      //   const address = networkData.address;\n      //   const contract = web3.eth.Contract(abi,address);\n      //   this.setState({contract:contract})\n      //   console.log(contract );\n      //   const memHash = await contract.methods.get().call();\n      //   console.log(memHash );\n      //   this.setState({memeHash:memHash})\n      // }\n      // else{\n      //   window.alert(\"smart contract nor deployed to dected network\");\n      // }\n\n    }\n\n    constructor(props){\n      super(props);\n      this.state={\n        account:'',\n        buffer:null,\n        Contract:null,\n        memHash:'QmNZNHWxYqPY57bodafqkzqmXYVu9LE3FteJhMmZGBackw'\n      };\n\n      this.filesrc=\"\";\n\n    }\n\n    async loadWeb3(){\n      if(window.ethereum){\n        window.web3 =new Web3(window.ethereum);\n        await window.ethereum.enable();\n      }\n      if(window.web3){\n        window.web3 = new Web3(window.web3.currentProvider);\n      }\n      else{\n        window.alert(\"Please use metamask\");\n      }\n\n      // console.log(Web3);\n      // var d=new Web3.providers.HttpProvider('http://127.0.0.1:7545');\n      // new Web3(d);\n      // console.log(Web3.eth);\n      \n\n    }\n\n    handleClick=\n\n\n\n\n  captureFile=(event)=>{\n      event.preventDefault();\n      console.log(\"file is capture\");\n      console.log(event);\n      console.log(event.target.files[0]);\n      var file = event.target.files[0];\n      var reader = new window.FileReader();\n      reader.readAsArrayBuffer(file);\n      reader.onloadend = ()=>{\n        this.setState({buffer:Buffer(reader.result)})\n        console.log(\"buffer\",Buffer(reader.result));\n      }\n      //process the file inside here \n  }\n\n  // Hash QmNZNHWxYqPY57bodafqkzqmXYVu9LE3FteJhMmZGBackw\n  //url https://ipfs.infura.io/ipfs/QmNZNHWxYqPY57bodafqkzqmXYVu9LE3FteJhMmZGBackw\n\n  onSubmit=(event)=>{\n    event.preventDefault();\n    console.log(\"in submit event\");\n\n    var name =\"Rutvik\";\n    var myObj = {\n      \"name\":\"John\",\n      \"age\":30,\n      \"cars\": {\n        \"car1\":\"Ford\",\n        \"car2\":\"BMW\",\n        \"car3\":\"Fiat\"\n      }\n     }\n\n\n\n\n\n    ipfs.add(myObj,(error,results)=>{\n      //Do Stuff here\n      //console.log(\"IPFS RESULT\",results[0].hash);\n      console.log(results);\n      console.log(error);\n      var hash=results[0].hash;\n      if(error){\n        console.log(error);\n        return;\n      }\n      //Step 2 is to store file on blockchain\n      this.filesrc=\"https://ipfs.infura.io/ipfs/\"+hash;\n      console.log(this.filesrc);\n\n      ipfs.get(hash,(error,result)=>{\n        console.log(result);\n        var y=ipfs.getReadableStream('QmNZNHWxYqPY57bodafqkzqmXYVu9LE3FteJhMmZGBackw');\n        console.log(y);\n      })\n      console.log(\"after cal back\");\n      \n      \n\n\n      this.setState({memHash:hash});\n    })\n    \n  }\n\n  render() {\n\n    var lists=[];\n    var y = \"QmYah59VfHQTNPnhk1f5hwnVqkxRC6CB9xvMjzLro9VBsw\";\n    lists[0]=y;\n    var y2=\"QmNZNHWxYqPY57bodafqkzqmXYVu9LE3FteJhMmZGBackw\";\n    lists[1]=y2;\n\n    // const listItems = lists.map((list) =>\n    // <li>\n    //   {list}\n    //   <Button type=\"button\" class=\"btn btn-default btn-sm\"    \n    //   onClick={() => this.open(list)}>\n    //   Accept\n    //   </Button>\n    //   <br></br>\n    //   </li>\n    // );\n\n\n    let images = lists.map(image => \n      <Card    style={{padding: \"50px\" }} >\n      <Card.Header>Rutvik Patel</Card.Header>\n      <Card.Img variant=\"top\" src= {`https://ipfs.infura.io/ipfs/${image}`}   style={{height: \"100%\",  width:\"300px\" }}   />\n      { image }\n      <Card.Body>\n        <Card.Text>\n          {/* Some quick example text to build on the card title and make up the bulk\n          of the card's content. */}\n         \n        </Card.Text>\n      </Card.Body>\n    </Card>\n);\n\n\n\n    let contacts =[{\n      name:'Rutvik',\n      phone:'224567890'\n    },\n    {\n     name:'Smit',\n     phone:'2248175374'\n   },\n   {\n     name:'Suraj',\n     phone:'9167843536'\n   },\n   {\n     name:'Jef',\n     phone:'9837363739'\n   }\n ]\n  console.log(contacts);\n  const listItems = contacts.map((contact) =>\n  <li>{contact.name}</li>\n);\n\n    return (\n\n      \n\n\n      \n      <div className=\"container\">\n        <nav className=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\n          <br></br>\n        <br></br>\n        <MDBCol md=\"6\">\n         <MDBInput hint=\"Search Friend\" type=\"text\" containerClass=\"active-pink active-pink-2 mt-0 mb-3\" />\n      </MDBCol>\n      </nav>\n        <br></br>\n        <br></br>\n     \n      <Jumbotron>\n        <h4>Hello, Bob!</h4>\n        <p>\n          <Button variant=\"primary\">Add Post</Button>\n        </p>\n      </Jumbotron>\n         <BrowserRouter>\n         <Route path='/Feed' component={Feed}></Route>\n         </BrowserRouter>\n        \n        {/* <nav className=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\n          <a\n            className=\"navbar-brand col-sm-3 col-md-2 mr-0\"\n            href=\"http://www.dappuniversity.com/bootcamp\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Meme of the day\n          </a>\n          <ul className=\"navbar-nav px-3\">\n            <li className=\"nav-item text-nowrap d-none d-sm-none d-sm-block\">\n              <small className=\"text-white\">{this.state.account}</small>\n            </li>\n          </ul>\n        </nav> */}\n        {/* <div className=\"container-fluid mt-5\">\n          <div className=\"row\">\n            <main role=\"main\" className=\"col-lg-12 d-flex text-center\">\n              <div className=\"content mr-auto ml-auto\">\n                <a\n                  href=\"http://www.dappuniversity.com/bootcamp\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  <img src= {`https://ipfs.infura.io/ipfs/${this.state.memHash}`}  className=\"App-logo\" alt=\"logo\" />\n                </a>\n                <br/>\n                <br/>\n                <h2>Change Meme</h2>\n                <br/>\n                <form  onSubmit={this.onSubmit}>\n                  <input type=\"file\"  onChange={this.captureFile}/>\n                  <input type=\"submit\" />\n                </form>\n              </div>\n            </main>\n          </div>\n        </div> */}\n\n {/* <ul>\n      {listItems}\n    </ul> */}\n\n<h4>Feeds</h4>\n    <Card    style={{padding: \"50px\" }} >\n    {/* <Card.Header>Rutvik Patel</Card.Header> */}\n    {/* <Card.Img variant=\"top\" src= {`https://ipfs.infura.io/ipfs/${this.state.memHash}`}   style={{height: \"100%\",  width:\"300px\" }}   /> */}\n    <Card>\n  <Card.Header>Jon Snow</Card.Header>\n    <Card.Body>\n      <Card.Text>\n        Nice day at pier 39 #SF #LovelyDay\n      </Card.Text>\n    </Card.Body>\n    <Card.Img variant=\"bottom\" src=\"https://ipfs.infura.io/ipfs/Qmd16beEoC2jhSk8nE5otsk3D1iUxu1pJg6n4ePwXwhwA9\" style={{height: \"100%\",  width:\"300px\" }}/>\n  </Card>\n\n<br></br>\n  <Card>\n  <Card.Header>Sam Williams</Card.Header>\n    <Card.Body>\n      <Card.Text>\n        Seeing the world in my way\n      </Card.Text>\n    </Card.Body>\n    <Card.Img variant=\"bottom\" src=\"https://scontent.fsac1-2.fna.fbcdn.net/v/t1.0-9/19989657_126715001262499_1058883775878964603_n.jpg?_nc_cat=103&_nc_sid=09cbfe&_nc_ohc=Ln4kT3-N6fUAX9pPfJz&_nc_ht=scontent.fsac1-2.fna&oh=43ef6468bf97e51a37af2b810060bfa6&oe=5E963516\" style={{height: \"100%\",  width:\"300px\" }}/>\n  </Card>\n    <Card.Body>\n      <Card.Text>\n      </Card.Text>\n    </Card.Body>\n  </Card>\n  <br />\n  <Form>\n            <Form.Group controlId=\"formBasicEmail\">\n                      <Form.Label>First Name</Form.Label>\n                      <Form.Control type=\"text\" id=\"firstName\"  placeholder=\"Enter First Name\" />\n              </Form.Group>\n              <Form.Group controlId=\"formBasicEmail\">\n                      <Form.Label>Last Name</Form.Label>\n                      <Form.Control type=\"text\" id=\"lastName\" placeholder=\"Enter Last Name\" />\n              </Form.Group>\n    \n              <Form.Group controlId=\"formBasicEmail\">\n                      <Form.Label>Email address</Form.Label>\n                      <Form.Control type=\"email\" id=\"emailId\" placeholder=\"Enter email\" />\n              </Form.Group>\n              <Form.Group controlId=\"formBasicEmail\">\n                      <Form.Label>Password</Form.Label>\n                      <Form.Control type=\"password\" id=\"password\" placeholder=\"Enter password\" />\n              </Form.Group>\n              {/* <Form.Group controlId=\"formBasicPassword\">\n                <Form.Label>Password</Form.Label>\n                <Form.Control type=\"password\" placeholder=\"Password\" />\n              </Form.Group> */}\n               <Button variant=\"primary\" type=\"button\" id=\"RegisterUser\" onClick={this.handleClick}>Register</Button>\n               <br>\n               </br>\n               <Form.Text className=\"text-muted\">\n                     If you are already register \n                </Form.Text>\n               <Button variant=\"primary\" type=\"button\" onClick={this.SignIn}>Login</Button>\n               {/* <Button variant=\"primary\" type=\"button\" id=\"NewButton\" onClick={this.Message}>NewButton</Button> */}\n            </Form>\n\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}