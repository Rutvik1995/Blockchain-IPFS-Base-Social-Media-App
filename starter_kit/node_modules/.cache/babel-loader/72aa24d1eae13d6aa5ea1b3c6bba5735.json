{"ast":null,"code":"import _classCallCheck from \"/Users/rutvikpatel/Desktop/Project/Github6/starter_kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rutvikpatel/Desktop/Project/Github6/starter_kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/rutvikpatel/Desktop/Project/Github6/starter_kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rutvikpatel/Desktop/Project/Github6/starter_kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/rutvikpatel/Desktop/Project/Github6/starter_kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/rutvikpatel/Desktop/Project/Github6/starter_kit/src/components/videoViewer.js\";\nimport React, { Component } from 'react';\nimport Web3 from 'web3';\nimport Meme from '../abis/Meme.json';\nimport { Button, Navbar, Nav, ListGroup, Modal, Card } from \"react-bootstrap\";\nimport { MDBInput } from 'mdbreact';\nimport './file2.scss';\nimport { Player } from 'video-react';\n\nvar ipfsClient = require('ipfs-http-client');\n\nvar ipfs = ipfsClient({\n  host: 'ipfs.infura.io',\n  port: '5001',\n  protocol: 'https'\n});\n\nvar CryptoJS = require(\"crypto-js\");\n\nvar viewViewer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(viewViewer, _Component);\n\n  function viewViewer(props) {\n    var _this;\n\n    _classCallCheck(this, viewViewer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(viewViewer).call(this, props));\n    console.log(props);\n    _this.state = {\n      account: '',\n      buffer: null,\n      contract: null,\n      uuid: '',\n      viewPostPersonfullName: '',\n      currentUserEmailId: '',\n      PostOwnerEmailId: '',\n      PostOwnerFullName: '',\n      PostOwnerData: null,\n      dataToParse: '',\n      userInformationListFromBlockChain: [],\n      currentUserName: '',\n      userData: [],\n      allUserName: [],\n      noSpaceAllUserName: [],\n      postInformation: [],\n      groupInformationListFromBlockChain: [],\n      chromeExtensionData: '',\n      userListEmailIdSet: null,\n      postUserGroupIPFSData: '',\n      postUserPostIPFSData: '',\n      postText: '',\n      postImage: '',\n      displayData: '',\n      renderCondition: 0\n    };\n    return _this;\n  }\n\n  _createClass(viewViewer, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"Hello World from view viewr\", React.createElement(\"link\", {\n        rel: \"stylesheet\",\n        href: \"/css/video-react.css\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }), React.createElement(\"link\", {\n        rel: \"stylesheet\",\n        href: \"https://video-react.github.io/assets/video-react.css\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }), React.createElement(Player, {\n        playsInline: true,\n        poster: \"/assets/poster.png\",\n        src: \"https://media.w3.org/2010/05/sintel/trailer_hd.mp4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return viewViewer;\n}(Component);\n\nexport default viewViewer;","map":{"version":3,"sources":["/Users/rutvikpatel/Desktop/Project/Github6/starter_kit/src/components/videoViewer.js"],"names":["React","Component","Web3","Meme","Button","Navbar","Nav","ListGroup","Modal","Card","MDBInput","Player","ipfsClient","require","ipfs","host","port","protocol","CryptoJS","viewViewer","props","console","log","state","account","buffer","contract","uuid","viewPostPersonfullName","currentUserEmailId","PostOwnerEmailId","PostOwnerFullName","PostOwnerData","dataToParse","userInformationListFromBlockChain","currentUserName","userData","allUserName","noSpaceAllUserName","postInformation","groupInformationListFromBlockChain","chromeExtensionData","userListEmailIdSet","postUserGroupIPFSData","postUserPostIPFSData","postText","postImage","displayData","renderCondition"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,SAASC,MAAT,EAAgBC,MAAhB,EAAuBC,GAAvB,EAA2BC,SAA3B,EAAqCC,KAArC,EAA2CC,IAA3C,QAAuD,iBAAvD;AACA,SAASC,QAAT,QAAyB,UAAzB;AACA,OAAO,cAAP;AAGA,SAASC,MAAT,QAAuB,aAAvB;;AAEA,IAAIC,UAAU,GAAGC,OAAO,CAAC,kBAAD,CAAxB;;AACA,IAAIC,IAAI,GAAGF,UAAU,CAAC;AAACG,EAAAA,IAAI,EAAC,gBAAN;AAAuBC,EAAAA,IAAI,EAAC,MAA5B;AAAmCC,EAAAA,QAAQ,EAAE;AAA7C,CAAD,CAArB;;AACA,IAAIC,QAAQ,GAAGL,OAAO,CAAC,WAAD,CAAtB;;IAGMM,U;;;;;AAEF,sBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACd,oFAAMA,KAAN;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,UAAKG,KAAL,GAAW;AACTC,MAAAA,OAAO,EAAC,EADC;AAETC,MAAAA,MAAM,EAAC,IAFE;AAGTC,MAAAA,QAAQ,EAAC,IAHA;AAITC,MAAAA,IAAI,EAAC,EAJI;AAKTC,MAAAA,sBAAsB,EAAC,EALd;AAMTC,MAAAA,kBAAkB,EAAC,EANV;AAOTC,MAAAA,gBAAgB,EAAC,EAPR;AAQTC,MAAAA,iBAAiB,EAAC,EART;AASTC,MAAAA,aAAa,EAAC,IATL;AAUTC,MAAAA,WAAW,EAAC,EAVH;AAWTC,MAAAA,iCAAiC,EAAC,EAXzB;AAYTC,MAAAA,eAAe,EAAC,EAZP;AAaTC,MAAAA,QAAQ,EAAC,EAbA;AAcTC,MAAAA,WAAW,EAAC,EAdH;AAeTC,MAAAA,kBAAkB,EAAC,EAfV;AAgBTC,MAAAA,eAAe,EAAC,EAhBP;AAiBTC,MAAAA,kCAAkC,EAAC,EAjB1B;AAkBTC,MAAAA,mBAAmB,EAAC,EAlBX;AAmBTC,MAAAA,kBAAkB,EAAC,IAnBV;AAoBTC,MAAAA,qBAAqB,EAAC,EApBb;AAqBTC,MAAAA,oBAAoB,EAAC,EArBZ;AAsBTC,MAAAA,QAAQ,EAAC,EAtBA;AAuBTC,MAAAA,SAAS,EAAC,EAvBD;AAwBTC,MAAAA,WAAW,EAAC,EAxBH;AAyBTC,MAAAA,eAAe,EAAC;AAzBP,KAAX;AAHc;AA8Bf;;;;6BAEO;AACN,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAEQ;AAAM,QAAA,GAAG,EAAC,YAAV;AAAuB,QAAA,IAAI,EAAC,sBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFR,EAGQ;AAClB,QAAA,GAAG,EAAC,YADc;AAElB,QAAA,IAAI,EAAC,sDAFa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHR,EAOQ,oBAAC,MAAD;AACI,QAAA,WAAW,MADf;AAEI,QAAA,MAAM,EAAC,oBAFX;AAGI,QAAA,GAAG,EAAC,oDAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPR,CADJ;AAeD;;;;EAlDkB/C,S;;AAoDzB,eAAekB,UAAf","sourcesContent":["import React, { Component } from 'react';\nimport Web3 from 'web3';\nimport Meme from '../abis/Meme.json';\nimport { Button,Navbar,Nav,ListGroup,Modal,Card } from \"react-bootstrap\";\nimport { MDBInput } from 'mdbreact';\nimport './file2.scss'; \n\n\nimport { Player } from 'video-react';\n\nvar ipfsClient = require('ipfs-http-client');\nvar ipfs = ipfsClient({host:'ipfs.infura.io',port:'5001',protocol: 'https' }) ;\nvar CryptoJS = require(\"crypto-js\");\n\n\nclass viewViewer extends Component{ \n    \n    constructor(props){\n        super(props);\n        console.log(props);\n        this.state={\n          account:'',\n          buffer:null,\n          contract:null,\n          uuid:'',\n          viewPostPersonfullName:'',\n          currentUserEmailId:'',\n          PostOwnerEmailId:'',\n          PostOwnerFullName:'',\n          PostOwnerData:null,\n          dataToParse:'',\n          userInformationListFromBlockChain:[],\n          currentUserName:'',\n          userData:[],\n          allUserName:[],\n          noSpaceAllUserName:[],\n          postInformation:[],\n          groupInformationListFromBlockChain:[],\n          chromeExtensionData:'',\n          userListEmailIdSet:null,\n          postUserGroupIPFSData:'',\n          postUserPostIPFSData:'',\n          postText:'',\n          postImage:'',\n          displayData:'',\n          renderCondition:0\n        };       \n      }\n\n      render(){\n        return(\n            <div>\n                Hello World from view viewr \n                    <link rel=\"stylesheet\" href=\"/css/video-react.css\" />\n                    <link\n  rel=\"stylesheet\"\n  href=\"https://video-react.github.io/assets/video-react.css\"\n/>\n                    <Player\n                        playsInline\n                        poster=\"/assets/poster.png\"\n                        src=\"https://media.w3.org/2010/05/sintel/trailer_hd.mp4\"\n                        />\n            </div>\n        );\n      }\n}\nexport default viewViewer;"]},"metadata":{},"sourceType":"module"}